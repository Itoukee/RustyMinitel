{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1","program":"/home/matheo/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","wasmer_enumset","--edition=2018","/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","--json=diagnostic-rendered-ansi,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=5ac2e34612ec437e","-C","extra-filename=-5ac2e34612ec437e","--out-dir","/home/matheo/Bureau/RustyMinitel/rustyminitel/target/rls/debug/deps","-L","dependency=/home/matheo/Bureau/RustyMinitel/rustyminitel/target/rls/debug/deps","--extern","num_traits=/home/matheo/Bureau/RustyMinitel/rustyminitel/target/rls/debug/deps/libnum_traits-ad70cbee5e292bc4.rmeta","--extern","wasmer_enumset_derive=/home/matheo/Bureau/RustyMinitel/rustyminitel/target/rls/debug/deps/libwasmer_enumset_derive-2e53398f5256c4fb.so","--cap-lints","allow","--error-format=json","--sysroot","/home/matheo/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/matheo/Bureau/RustyMinitel/rustyminitel/target/rls/debug/deps/libwasmer_enumset-5ac2e34612ec437e.rmeta"},"prelude":{"crate_id":{"name":"wasmer_enumset","disambiguator":[4105999580013556579,0]},"crate_root":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src","external_crates":[{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[5443730852259234579,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[4162025702538114948,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[17612152343462746361,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","num":4,"id":{"name":"wasmer_enumset_derive","disambiguator":[5715465772702556467,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","num":5,"id":{"name":"num_traits","disambiguator":[2174456351903999785,0]}}],"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":0,"byte_end":25734,"line_start":1,"line_end":717,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":2680,"byte_end":2681,"line_start":78,"line_end":78,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":0},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":3269,"byte_end":3273,"line_start":101,"line_end":101,"column_start":15,"column_end":19},"alias_span":null,"name":"core_export","value":"","parent":{"krate":0,"index":30}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":0,"byte_end":25734,"line_start":1,"line_end":717,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":226},{"krate":0,"index":229},{"krate":0,"index":231},{"krate":0,"index":234},{"krate":0,"index":236},{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":63},{"krate":0,"index":92},{"krate":0,"index":245},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":101},{"krate":0,"index":106},{"krate":0,"index":111},{"krate":0,"index":116},{"krate":0,"index":121},{"krate":0,"index":125},{"krate":0,"index":129},{"krate":0,"index":133},{"krate":0,"index":137},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":147},{"krate":0,"index":150},{"krate":0,"index":154},{"krate":0,"index":157},{"krate":0,"index":289},{"krate":0,"index":294},{"krate":0,"index":297},{"krate":0,"index":160},{"krate":0,"index":165},{"krate":0,"index":167},{"krate":0,"index":172},{"krate":0,"index":176},{"krate":0,"index":181},{"krate":0,"index":185}],"decl_id":null,"docs":" A library for defining enums that can be used in compact bit sets. It supports enums up to 128\n variants, and has a macro to use these sets in constants.","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}},{"value":"forbid(missing_docs)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":11,"byte_end":35,"line_start":2,"line_end":2,"column_start":1,"column_end":25}},{"value":"/ A library for defining enums that can be used in compact bit sets. It supports enums up to 128","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":37,"byte_end":135,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ variants, and has a macro to use these sets in constants.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":136,"byte_end":197,"line_start":5,"line_end":5,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":198,"byte_end":201,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ For serde support, enable the `serde` feature.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":202,"byte_end":252,"line_start":7,"line_end":7,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":253,"byte_end":256,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Defining enums for use with EnumSet","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":257,"byte_end":298,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":299,"byte_end":302,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Enums to be used with [`EnumSet`] should be defined using `#[derive(EnumSetType)]`:","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":303,"byte_end":390,"line_start":11,"line_end":11,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":391,"byte_end":394,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":395,"byte_end":406,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/ # use enumset::*;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":407,"byte_end":428,"line_start":14,"line_end":14,"column_start":1,"column_end":22}},{"value":"/ #[derive(EnumSetType, Debug)]","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":429,"byte_end":462,"line_start":15,"line_end":15,"column_start":1,"column_end":34}},{"value":"/ pub enum Enum {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":463,"byte_end":482,"line_start":16,"line_end":16,"column_start":1,"column_end":20}},{"value":"/    A, B, C, D, E, F, G,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":483,"byte_end":510,"line_start":17,"line_end":17,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":511,"byte_end":516,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":517,"byte_end":524,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":525,"byte_end":528,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ For more information on more advanced use cases, see the documentation for [`EnumSetType`].","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":529,"byte_end":624,"line_start":21,"line_end":21,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":625,"byte_end":628,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Working with EnumSets","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":629,"byte_end":656,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":657,"byte_end":660,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ EnumSets can be constructed via [`EnumSet::new()`] like a normal set. In addition,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":661,"byte_end":747,"line_start":25,"line_end":25,"column_start":1,"column_end":87}},{"value":"/ `#[derive(EnumSetType)]` creates operator overloads that allow you to create EnumSets like so:","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":748,"byte_end":846,"line_start":26,"line_end":26,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":847,"byte_end":850,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":851,"byte_end":862,"line_start":28,"line_end":28,"column_start":1,"column_end":12}},{"value":"/ # use enumset::*;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":863,"byte_end":884,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ # #[derive(EnumSetType, Debug)] pub enum Enum { A, B, C, D, E, F, G }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":885,"byte_end":958,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"/ let new_set = Enum::A | Enum::C | Enum::G;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":959,"byte_end":1005,"line_start":31,"line_end":31,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(new_set.len(), 3);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":1006,"byte_end":1039,"line_start":32,"line_end":32,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":1040,"byte_end":1047,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":1048,"byte_end":1051,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ All bitwise operations you would expect to work on bitsets also work on both EnumSets and","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":1052,"byte_end":1145,"line_start":35,"line_end":35,"column_start":1,"column_end":94}},{"value":"/ enums with `#[derive(EnumSetType)]`:","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":1146,"byte_end":1186,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":1187,"byte_end":1198,"line_start":37,"line_end":37,"column_start":1,"column_end":12}},{"value":"/ # use enumset::*;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":1199,"byte_end":1220,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/ # #[derive(EnumSetType, Debug)] pub enum Enum { A, B, C, D, E, F, G }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":1221,"byte_end":1294,"line_start":39,"line_end":39,"column_start":1,"column_end":74}},{"value":"/ // Intersection of sets","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":1295,"byte_end":1322,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/ assert_eq!((Enum::A | Enum::B) & Enum::C, EnumSet::empty());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":1323,"byte_end":1387,"line_start":41,"line_end":41,"column_start":1,"column_end":65}},{"value":"/ assert_eq!((Enum::A | Enum::B) & Enum::A, Enum::A);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":1388,"byte_end":1443,"line_start":42,"line_end":42,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(Enum::A & Enum::B, EnumSet::empty());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":1444,"byte_end":1496,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":1497,"byte_end":1500,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // Symmetric difference of sets","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":1501,"byte_end":1536,"line_start":45,"line_end":45,"column_start":1,"column_end":36}},{"value":"/ assert_eq!((Enum::A | Enum::B) ^ (Enum::B | Enum::C), Enum::A | Enum::C);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":1537,"byte_end":1614,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(Enum::A ^ Enum::C, Enum::A | Enum::C);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":1615,"byte_end":1668,"line_start":47,"line_end":47,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":1669,"byte_end":1672,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ // Difference of sets","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":1673,"byte_end":1698,"line_start":49,"line_end":49,"column_start":1,"column_end":26}},{"value":"/ assert_eq!((Enum::A | Enum::B | Enum::C) - Enum::B, Enum::A | Enum::C);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":1699,"byte_end":1774,"line_start":50,"line_end":50,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":1775,"byte_end":1778,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ // Complement of sets","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":1779,"byte_end":1804,"line_start":52,"line_end":52,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(!(Enum::E | Enum::G), Enum::A | Enum::B | Enum::C | Enum::D | Enum::F);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":1805,"byte_end":1891,"line_start":53,"line_end":53,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":1892,"byte_end":1899,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":1900,"byte_end":1903,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The [`enum_set!`] macro allows you to create EnumSets in constant contexts:","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":1904,"byte_end":1983,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":1984,"byte_end":1987,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":1988,"byte_end":1999,"line_start":58,"line_end":58,"column_start":1,"column_end":12}},{"value":"/ # use enumset::*;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":2000,"byte_end":2021,"line_start":59,"line_end":59,"column_start":1,"column_end":22}},{"value":"/ # #[derive(EnumSetType, Debug)] pub enum Enum { A, B, C, D, E, F, G }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":2022,"byte_end":2095,"line_start":60,"line_end":60,"column_start":1,"column_end":74}},{"value":"/ const CONST_SET: EnumSet<Enum> = enum_set!(Enum::A | Enum::B);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":2096,"byte_end":2162,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(CONST_SET, Enum::A | Enum::B);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":2163,"byte_end":2208,"line_start":62,"line_end":62,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":2209,"byte_end":2216,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":2217,"byte_end":2220,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Mutable operations on the [`EnumSet`] otherwise similarly to Rust's builtin sets:","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":2221,"byte_end":2306,"line_start":65,"line_end":65,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":2307,"byte_end":2310,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":2311,"byte_end":2322,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/ # use enumset::*;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":2323,"byte_end":2344,"line_start":68,"line_end":68,"column_start":1,"column_end":22}},{"value":"/ # #[derive(EnumSetType, Debug)] pub enum Enum { A, B, C, D, E, F, G }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":2345,"byte_end":2418,"line_start":69,"line_end":69,"column_start":1,"column_end":74}},{"value":"/ let mut set = EnumSet::new();","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":2419,"byte_end":2452,"line_start":70,"line_end":70,"column_start":1,"column_end":34}},{"value":"/ set.insert(Enum::A);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":2453,"byte_end":2477,"line_start":71,"line_end":71,"column_start":1,"column_end":25}},{"value":"/ set.insert_all(Enum::E | Enum::G);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":2478,"byte_end":2516,"line_start":72,"line_end":72,"column_start":1,"column_end":39}},{"value":"/ assert!(set.contains(Enum::A));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":2517,"byte_end":2552,"line_start":73,"line_end":73,"column_start":1,"column_end":36}},{"value":"/ assert!(!set.contains(Enum::B));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":2553,"byte_end":2589,"line_start":74,"line_end":74,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(set, Enum::A | Enum::E | Enum::G);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":2590,"byte_end":2639,"line_start":75,"line_end":75,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":2640,"byte_end":2647,"line_start":76,"line_end":76,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":30},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":2957,"byte_end":2967,"line_start":91,"line_end":91,"column_start":9,"column_end":19},"name":"__internal","qualname":"::__internal","value":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":37},{"krate":0,"index":40}],"decl_id":null,"docs":" Everything in this module is internal API and may change at any time.\n","sig":null,"attributes":[{"value":"/ Everything in this module is internal API and may change at any time.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":2875,"byte_end":2948,"line_start":90,"line_end":90,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":32},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":3055,"byte_end":3074,"line_start":95,"line_end":95,"column_start":16,"column_end":35},"name":"EnumSetSameTypeHack","qualname":"::__internal::EnumSetSameTypeHack","value":"EnumSetSameTypeHack { unified, enum_set }","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36}],"decl_id":null,"docs":" A struct used to type check [`enum_set!`].\n","sig":null,"attributes":[{"value":"/ A struct used to type check [`enum_set!`].","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":2993,"byte_end":3039,"line_start":94,"line_end":94,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":35},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":3119,"byte_end":3126,"line_start":96,"line_end":96,"column_start":13,"column_end":20},"name":"unified","qualname":"::__internal::EnumSetSameTypeHack::unified","value":"&'a [T]","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":36},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":3149,"byte_end":3157,"line_start":97,"line_end":97,"column_start":13,"column_end":21},"name":"enum_set","qualname":"::__internal::EnumSetSameTypeHack::enum_set","value":"EnumSet<T>","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":40},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":3533,"byte_end":3551,"line_start":107,"line_end":107,"column_start":22,"column_end":40},"name":"EnumSetTypePrivate","qualname":"::__internal::EnumSetTypePrivate","value":"EnumSetTypePrivate","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44}],"decl_id":null,"docs":" The actual members of EnumSetType. Put here to avoid polluting global namespaces.\n","sig":null,"attributes":[{"value":"/ The actual members of EnumSetType. Put here to avoid polluting global namespaces.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":3426,"byte_end":3511,"line_start":106,"line_end":106,"column_start":5,"column_end":90}}]},{"kind":"Type","id":{"krate":0,"index":41},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":3625,"byte_end":3629,"line_start":109,"line_end":109,"column_start":14,"column_end":18},"name":"Repr","qualname":"::__internal::EnumSetTypePrivate::Repr","value":"type Repr: EnumSetTypeRepr;","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" The underlying type used to store the bitset.\n","sig":null,"attributes":[{"value":"/ The underlying type used to store the bitset.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":3562,"byte_end":3611,"line_start":108,"line_end":108,"column_start":9,"column_end":58}}]},{"kind":"Const","id":{"krate":0,"index":42},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":3719,"byte_end":3727,"line_start":111,"line_end":111,"column_start":15,"column_end":23},"name":"ALL_BITS","qualname":"::__internal::EnumSetTypePrivate::ALL_BITS","value":"Self::Repr","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" A mask of bits that are valid in the bitset.\n","sig":null,"attributes":[{"value":"/ A mask of bits that are valid in the bitset.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":3656,"byte_end":3704,"line_start":110,"line_end":110,"column_start":9,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":3818,"byte_end":3831,"line_start":114,"line_end":114,"column_start":12,"column_end":25},"name":"enum_into_u32","qualname":"::__internal::EnumSetTypePrivate::enum_into_u32","value":"pub fn enum_into_u32(Self) -> u32","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" Converts an enum of this type into its bit position.\n","sig":null,"attributes":[{"value":"/ Converts an enum of this type into its bit position.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":3750,"byte_end":3806,"line_start":113,"line_end":113,"column_start":9,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":3920,"byte_end":3933,"line_start":116,"line_end":116,"column_start":19,"column_end":32},"name":"enum_from_u32","qualname":"::__internal::EnumSetTypePrivate::enum_from_u32","value":"pub unsafe fn enum_from_u32(u32) -> Self","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" Converts a bit position into an enum value.\n","sig":null,"attributes":[{"value":"/ Converts a bit position into an enum value.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":3854,"byte_end":3901,"line_start":115,"line_end":115,"column_start":9,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":62},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7899,"byte_end":7910,"line_start":232,"line_end":232,"column_start":18,"column_end":29},"name":"EnumSetType","qualname":"::EnumSetType","value":"EnumSetType: Copy + Eq + EnumSetTypePrivate","parent":null,"children":[],"decl_id":null,"docs":" The trait used to define enum types that may be used with [`EnumSet`].","sig":null,"attributes":[{"value":"/ The trait used to define enum types that may be used with [`EnumSet`].","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":6061,"byte_end":6135,"line_start":175,"line_end":175,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":6136,"byte_end":6139,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ This trait should be implemented using `#[derive(EnumSetType)]`. Its internal structure is","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":6140,"byte_end":6234,"line_start":177,"line_end":177,"column_start":1,"column_end":95}},{"value":"/ not stable, and may change at any time.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":6235,"byte_end":6278,"line_start":178,"line_end":178,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":6279,"byte_end":6282,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ # Custom Derive","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":6283,"byte_end":6302,"line_start":180,"line_end":180,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":6303,"byte_end":6306,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ Any C-like enum is supported, as long as there are no more than 128 variants in the enum,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":6307,"byte_end":6400,"line_start":182,"line_end":182,"column_start":1,"column_end":94}},{"value":"/ and no variant discriminator is larger than 127.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":6401,"byte_end":6453,"line_start":183,"line_end":183,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":6454,"byte_end":6457,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ The custom derive for [`EnumSetType`] automatically creates implementations of [`PartialEq`],","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":6458,"byte_end":6555,"line_start":185,"line_end":185,"column_start":1,"column_end":98}},{"value":"/ [`Sub`], [`BitAnd`], [`BitOr`], [`BitXor`], and [`Not`] allowing the enum to be used as","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":6556,"byte_end":6647,"line_start":186,"line_end":186,"column_start":1,"column_end":92}},{"value":"/ if it were an [`EnumSet`] in expressions. This can be disabled by adding an `#[enumset(no_ops)]`","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":6648,"byte_end":6748,"line_start":187,"line_end":187,"column_start":1,"column_end":101}},{"value":"/ annotation to the enum.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":6749,"byte_end":6776,"line_start":188,"line_end":188,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":6777,"byte_end":6780,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ The custom derive for `EnumSetType` automatically implements [`Copy`], [`Clone`], [`Eq`], and","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":6781,"byte_end":6878,"line_start":190,"line_end":190,"column_start":1,"column_end":98}},{"value":"/ [`PartialEq`] on the enum. These are required for the [`EnumSet`] to function.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":6879,"byte_end":6961,"line_start":191,"line_end":191,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":6962,"byte_end":6965,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ In addition, if you have renamed the `enumset` crate in your crate, you can use the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":6966,"byte_end":7053,"line_start":193,"line_end":193,"column_start":1,"column_end":88}},{"value":"/ `#[enumset(crate_name = \"enumset2\")]` attribute to tell the custom derive to use that name","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7054,"byte_end":7148,"line_start":194,"line_end":194,"column_start":1,"column_end":95}},{"value":"/ instead.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7149,"byte_end":7161,"line_start":195,"line_end":195,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7162,"byte_end":7165,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ Attributes controlling the serialization of an `EnumSet` are documented in","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7166,"byte_end":7244,"line_start":197,"line_end":197,"column_start":1,"column_end":79}},{"value":"/ [its documentation](./struct.EnumSet.html#serialization).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7245,"byte_end":7306,"line_start":198,"line_end":198,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7307,"byte_end":7310,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7311,"byte_end":7325,"line_start":200,"line_end":200,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7326,"byte_end":7329,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ Deriving a plain EnumSetType:","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7330,"byte_end":7363,"line_start":202,"line_end":202,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7364,"byte_end":7367,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7368,"byte_end":7379,"line_start":204,"line_end":204,"column_start":1,"column_end":12}},{"value":"/ # use enumset::*;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7380,"byte_end":7401,"line_start":205,"line_end":205,"column_start":1,"column_end":22}},{"value":"/ #[derive(EnumSetType)]","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7402,"byte_end":7428,"line_start":206,"line_end":206,"column_start":1,"column_end":27}},{"value":"/ pub enum Enum {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7429,"byte_end":7448,"line_start":207,"line_end":207,"column_start":1,"column_end":20}},{"value":"/    A, B, C, D, E, F, G,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7449,"byte_end":7476,"line_start":208,"line_end":208,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7477,"byte_end":7482,"line_start":209,"line_end":209,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7483,"byte_end":7490,"line_start":210,"line_end":210,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7491,"byte_end":7494,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ Deriving a sparse EnumSetType:","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7495,"byte_end":7529,"line_start":212,"line_end":212,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7530,"byte_end":7533,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7534,"byte_end":7545,"line_start":214,"line_end":214,"column_start":1,"column_end":12}},{"value":"/ # use enumset::*;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7546,"byte_end":7567,"line_start":215,"line_end":215,"column_start":1,"column_end":22}},{"value":"/ #[derive(EnumSetType)]","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7568,"byte_end":7594,"line_start":216,"line_end":216,"column_start":1,"column_end":27}},{"value":"/ pub enum SparseEnum {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7595,"byte_end":7620,"line_start":217,"line_end":217,"column_start":1,"column_end":26}},{"value":"/    A = 10, B = 20, C = 30, D = 127,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7621,"byte_end":7660,"line_start":218,"line_end":218,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7661,"byte_end":7666,"line_start":219,"line_end":219,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7667,"byte_end":7674,"line_start":220,"line_end":220,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7675,"byte_end":7678,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ Deriving an EnumSetType without adding ops:","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7679,"byte_end":7726,"line_start":222,"line_end":222,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7727,"byte_end":7730,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7731,"byte_end":7742,"line_start":224,"line_end":224,"column_start":1,"column_end":12}},{"value":"/ # use enumset::*;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7743,"byte_end":7764,"line_start":225,"line_end":225,"column_start":1,"column_end":22}},{"value":"/ #[derive(EnumSetType)]","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7765,"byte_end":7791,"line_start":226,"line_end":226,"column_start":1,"column_end":27}},{"value":"/ #[enumset(no_ops)]","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7792,"byte_end":7814,"line_start":227,"line_end":227,"column_start":1,"column_end":23}},{"value":"/ pub enum NoOpsEnum {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7815,"byte_end":7839,"line_start":228,"line_end":228,"column_start":1,"column_end":25}},{"value":"/    A, B, C, D, E, F, G,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7840,"byte_end":7867,"line_start":229,"line_end":229,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7868,"byte_end":7873,"line_start":230,"line_end":230,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7874,"byte_end":7881,"line_start":231,"line_end":231,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":226},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":9577,"byte_end":9584,"line_start":261,"line_end":261,"column_start":12,"column_end":19},"name":"EnumSet","qualname":"::EnumSet","value":"EnumSet { __enumset_underlying }","parent":null,"children":[{"krate":0,"index":228}],"decl_id":null,"docs":" An efficient set type for enums.","sig":null,"attributes":[{"value":"/ An efficient set type for enums.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7948,"byte_end":7984,"line_start":234,"line_end":234,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7985,"byte_end":7988,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ It is implemented using a bitset stored using the smallest integer that can fit all bits","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7989,"byte_end":8081,"line_start":236,"line_end":236,"column_start":1,"column_end":93}},{"value":"/ in the underlying enum. In general, an enum variant with a numeric value of `n` is stored in","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":8082,"byte_end":8178,"line_start":237,"line_end":237,"column_start":1,"column_end":97}},{"value":"/ the nth least significant bit (corresponding with a mask of, e.g. `1 << enum as u32`).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":8179,"byte_end":8269,"line_start":238,"line_end":238,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":8270,"byte_end":8273,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ # Serialization","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":8274,"byte_end":8293,"line_start":240,"line_end":240,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":8294,"byte_end":8297,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/ When the `serde` feature is enabled, `EnumSet`s can be serialized and deserialized using","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":8298,"byte_end":8390,"line_start":242,"line_end":242,"column_start":1,"column_end":93}},{"value":"/ the `serde` crate. The exact serialization format can be controlled with additional attributes","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":8391,"byte_end":8489,"line_start":243,"line_end":243,"column_start":1,"column_end":99}},{"value":"/ on the enum type. These attributes are valid regardless of whether the `serde` feature","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":8490,"byte_end":8580,"line_start":244,"line_end":244,"column_start":1,"column_end":91}},{"value":"/ is enabled.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":8581,"byte_end":8596,"line_start":245,"line_end":245,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":8597,"byte_end":8600,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ By default, `EnumSet`s serialize by directly writing out the underlying bitset as an integer","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":8601,"byte_end":8697,"line_start":247,"line_end":247,"column_start":1,"column_end":97}},{"value":"/ of the smallest type that can fit in the underlying enum. You can add a","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":8698,"byte_end":8773,"line_start":248,"line_end":248,"column_start":1,"column_end":76}},{"value":"/ `#[enumset(serialize_repr = \"u8\")]` attribute to your enum to control the integer type used","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":8774,"byte_end":8869,"line_start":249,"line_end":249,"column_start":1,"column_end":96}},{"value":"/ for serialization. This can be important for avoiding unintentional breaking changes when","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":8870,"byte_end":8963,"line_start":250,"line_end":250,"column_start":1,"column_end":94}},{"value":"/ `EnumSet`s are serialized with formats like `bincode`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":8964,"byte_end":9022,"line_start":251,"line_end":251,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":9023,"byte_end":9026,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ By default, unknown bits are ignored and silently removed from the bitset. To override this","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":9027,"byte_end":9122,"line_start":253,"line_end":253,"column_start":1,"column_end":96}},{"value":"/ behavior, you can add a `#[enumset(serialize_deny_unknown)]` attribute. This will cause","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":9123,"byte_end":9214,"line_start":254,"line_end":254,"column_start":1,"column_end":92}},{"value":"/ deserialization to fail if an invalid bit is set.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":9215,"byte_end":9268,"line_start":255,"line_end":255,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":9269,"byte_end":9272,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ In addition, the `#[enumset(serialize_as_list)]` attribute causes the `EnumSet` to be","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":9273,"byte_end":9362,"line_start":257,"line_end":257,"column_start":1,"column_end":90}},{"value":"/ instead serialized as a list of enum variants. This requires your enum type implement","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":9363,"byte_end":9452,"line_start":258,"line_end":258,"column_start":1,"column_end":90}},{"value":"/ [`Serialize`] and [`Deserialize`]. Note that this is a breaking change","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":9453,"byte_end":9527,"line_start":259,"line_end":259,"column_start":1,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":228},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":9748,"byte_end":9768,"line_start":265,"line_end":265,"column_start":9,"column_end":29},"name":"__enumset_underlying","qualname":"::EnumSet::__enumset_underlying","value":"<T as __internal::EnumSetTypePrivate>::Repr","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" This is public due to the [`enum_set!`] macro.\n This is **NOT** public API and may change at any time.\n","sig":null,"attributes":[{"value":"/ This is public due to the [`enum_set!`] macro.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":9626,"byte_end":9676,"line_start":263,"line_end":263,"column_start":5,"column_end":55}},{"value":"/ This is **NOT** public API and may change at any time.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":9681,"byte_end":9739,"line_start":264,"line_end":264,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":10375,"byte_end":10378,"line_start":287,"line_end":287,"column_start":12,"column_end":15},"name":"new","qualname":"<EnumSet<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `EnumSet`.\n","sig":null,"attributes":[{"value":"/ Creates an empty `EnumSet`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":10332,"byte_end":10363,"line_start":286,"line_end":286,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":10525,"byte_end":10529,"line_start":292,"line_end":292,"column_start":12,"column_end":16},"name":"only","qualname":"<EnumSet<T>>::only","value":"pub fn only(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an `EnumSet` containing a single element.\n","sig":null,"attributes":[{"value":"/ Returns an `EnumSet` containing a single element.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":10460,"byte_end":10513,"line_start":291,"line_end":291,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":10727,"byte_end":10732,"line_start":299,"line_end":299,"column_start":12,"column_end":17},"name":"empty","qualname":"<EnumSet<T>>::empty","value":"pub fn empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `EnumSet`.","sig":null,"attributes":[{"value":"/ Creates an empty `EnumSet`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":10629,"byte_end":10660,"line_start":296,"line_end":296,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":10665,"byte_end":10668,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ This is an alias for [`EnumSet::new`].","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":10673,"byte_end":10715,"line_start":298,"line_end":298,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":10855,"byte_end":10858,"line_start":304,"line_end":304,"column_start":12,"column_end":15},"name":"all","qualname":"<EnumSet<T>>::all","value":"pub fn all() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an `EnumSet` containing all valid variants of the enum.\n","sig":null,"attributes":[{"value":"/ Returns an `EnumSet` containing all valid variants of the enum.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":10776,"byte_end":10843,"line_start":303,"line_end":303,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":11281,"byte_end":11290,"line_start":313,"line_end":313,"column_start":12,"column_end":21},"name":"bit_width","qualname":"<EnumSet<T>>::bit_width","value":"pub fn bit_width() -> u32","parent":null,"children":[],"decl_id":null,"docs":" Total number of bits used by this type. Note that the actual amount of space used is\n rounded up to the next highest integer type (`u8`, `u16`, `u32`, `u64`, or `u128`).","sig":null,"attributes":[{"value":"/ Total number of bits used by this type. Note that the actual amount of space used is","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":10941,"byte_end":11029,"line_start":308,"line_end":308,"column_start":5,"column_end":93}},{"value":"/ rounded up to the next highest integer type (`u8`, `u16`, `u32`, `u64`, or `u128`).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":11034,"byte_end":11121,"line_start":309,"line_end":309,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":11126,"byte_end":11129,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ This is the same as [`EnumSet::variant_count`] except in enums with \"sparse\" variants.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":11134,"byte_end":11224,"line_start":311,"line_end":311,"column_start":5,"column_end":95}},{"value":"/ (e.g. `enum Foo { A = 10, B = 20 }`)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":11229,"byte_end":11269,"line_start":312,"line_end":312,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":11582,"byte_end":11595,"line_start":321,"line_end":321,"column_start":12,"column_end":25},"name":"variant_count","qualname":"<EnumSet<T>>::variant_count","value":"pub fn variant_count() -> u32","parent":null,"children":[],"decl_id":null,"docs":" The number of valid variants that this type can contain.","sig":null,"attributes":[{"value":"/ The number of valid variants that this type can contain.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":11366,"byte_end":11426,"line_start":317,"line_end":317,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":11431,"byte_end":11434,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This is the same as [`EnumSet::bit_width`] except in enums with \"sparse\" variants.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":11439,"byte_end":11525,"line_start":319,"line_end":319,"column_start":5,"column_end":91}},{"value":"/ (e.g. `enum Foo { A = 10, B = 20 }`)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":11530,"byte_end":11570,"line_start":320,"line_end":320,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":11710,"byte_end":11713,"line_start":326,"line_end":326,"column_start":12,"column_end":15},"name":"len","qualname":"<EnumSet<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in this set.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in this set.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":11651,"byte_end":11698,"line_start":325,"line_end":325,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":11861,"byte_end":11869,"line_start":330,"line_end":330,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<EnumSet<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no elements.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no elements.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":11798,"byte_end":11849,"line_start":329,"line_end":329,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":11991,"byte_end":11996,"line_start":334,"line_end":334,"column_start":12,"column_end":17},"name":"clear","qualname":"<EnumSet<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Removes all elements from the set.\n","sig":null,"attributes":[{"value":"/ Removes all elements from the set.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":11941,"byte_end":11979,"line_start":333,"line_end":333,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":12219,"byte_end":12230,"line_start":340,"line_end":340,"column_start":12,"column_end":23},"name":"is_disjoint","qualname":"<EnumSet<T>>::is_disjoint","value":"pub fn is_disjoint(&Self, Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` has no elements in common with `other`. This is equivalent to\n checking for an empty intersection.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` has no elements in common with `other`. This is equivalent to","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":12073,"byte_end":12163,"line_start":338,"line_end":338,"column_start":5,"column_end":95}},{"value":"/ checking for an empty intersection.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":12168,"byte_end":12207,"line_start":339,"line_end":339,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":12439,"byte_end":12450,"line_start":345,"line_end":345,"column_start":12,"column_end":23},"name":"is_superset","qualname":"<EnumSet<T>>::is_superset","value":"pub fn is_superset(&Self, Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a superset of another, i.e., `self` contains at least all the\n values in `other`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set is a superset of another, i.e., `self` contains at least all the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":12306,"byte_end":12400,"line_start":343,"line_end":343,"column_start":5,"column_end":99}},{"value":"/ values in `other`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":12405,"byte_end":12427,"line_start":344,"line_end":344,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":12697,"byte_end":12706,"line_start":350,"line_end":350,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<EnumSet<T>>::is_subset","value":"pub fn is_subset(&Self, Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a subset of another, i.e., `other` contains at least all\n the values in `self`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set is a subset of another, i.e., `other` contains at least all","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":12566,"byte_end":12655,"line_start":348,"line_end":348,"column_start":5,"column_end":94}},{"value":"/ the values in `self`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":12660,"byte_end":12685,"line_start":349,"line_end":349,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":12857,"byte_end":12862,"line_start":355,"line_end":355,"column_start":12,"column_end":17},"name":"union","qualname":"<EnumSet<T>>::union","value":"pub fn union(&Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a set containing any elements present in either set.\n","sig":null,"attributes":[{"value":"/ Returns a set containing any elements present in either set.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":12781,"byte_end":12845,"line_start":354,"line_end":354,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":13076,"byte_end":13088,"line_start":359,"line_end":359,"column_start":12,"column_end":24},"name":"intersection","qualname":"<EnumSet<T>>::intersection","value":"pub fn intersection(&Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a set containing every element present in both sets.\n","sig":null,"attributes":[{"value":"/ Returns a set containing every element present in both sets.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":13000,"byte_end":13064,"line_start":358,"line_end":358,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":13312,"byte_end":13322,"line_start":363,"line_end":363,"column_start":12,"column_end":22},"name":"difference","qualname":"<EnumSet<T>>::difference","value":"pub fn difference(&Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a set containing element present in `self` but not in `other`.\n","sig":null,"attributes":[{"value":"/ Returns a set containing element present in `self` but not in `other`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":13226,"byte_end":13300,"line_start":362,"line_end":362,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":13588,"byte_end":13610,"line_start":368,"line_end":368,"column_start":12,"column_end":34},"name":"symmetrical_difference","qualname":"<EnumSet<T>>::symmetrical_difference","value":"pub fn symmetrical_difference(&Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a set containing every element present in either `self` or `other`, but is not\n present in both.\n","sig":null,"attributes":[{"value":"/ Returns a set containing every element present in either `self` or `other`, but is not","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":13461,"byte_end":13551,"line_start":366,"line_end":366,"column_start":5,"column_end":95}},{"value":"/ present in both.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":13556,"byte_end":13576,"line_start":367,"line_end":367,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":13823,"byte_end":13833,"line_start":372,"line_end":372,"column_start":12,"column_end":22},"name":"complement","qualname":"<EnumSet<T>>::complement","value":"pub fn complement(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a set containing all enum variants not in this set.\n","sig":null,"attributes":[{"value":"/ Returns a set containing all enum variants not in this set.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":13748,"byte_end":13811,"line_start":371,"line_end":371,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":14007,"byte_end":14015,"line_start":377,"line_end":377,"column_start":12,"column_end":20},"name":"contains","qualname":"<EnumSet<T>>::contains","value":"pub fn contains(&Self, T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this set contains a value.\n","sig":null,"attributes":[{"value":"/ Checks whether this set contains a value.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":13950,"byte_end":13995,"line_start":376,"line_end":376,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":14296,"byte_end":14302,"line_start":386,"line_end":386,"column_start":12,"column_end":18},"name":"insert","qualname":"<EnumSet<T>>::insert","value":"pub fn insert(&mut Self, T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to this set.","sig":null,"attributes":[{"value":"/ Adds a value to this set.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":14098,"byte_end":14127,"line_start":381,"line_end":381,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":14132,"byte_end":14135,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ If the set did not have this value present, `true` is returned.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":14140,"byte_end":14207,"line_start":383,"line_end":383,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":14212,"byte_end":14215,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ If the set did have this value present, `false` is returned.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":14220,"byte_end":14284,"line_start":385,"line_end":385,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":14602,"byte_end":14608,"line_start":392,"line_end":392,"column_start":12,"column_end":18},"name":"remove","qualname":"<EnumSet<T>>::remove","value":"pub fn remove(&mut Self, T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Removes a value from this set. Returns whether the value was present in the set.\n","sig":null,"attributes":[{"value":"/ Removes a value from this set. Returns whether the value was present in the set.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":14506,"byte_end":14590,"line_start":391,"line_end":391,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":14874,"byte_end":14884,"line_start":399,"line_end":399,"column_start":12,"column_end":22},"name":"insert_all","qualname":"<EnumSet<T>>::insert_all","value":"pub fn insert_all(&mut Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Adds all elements in another set to this one.\n","sig":null,"attributes":[{"value":"/ Adds all elements in another set to this one.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":14813,"byte_end":14862,"line_start":398,"line_end":398,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":15076,"byte_end":15086,"line_start":403,"line_end":403,"column_start":12,"column_end":22},"name":"remove_all","qualname":"<EnumSet<T>>::remove_all","value":"pub fn remove_all(&mut Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Removes all values in another set from this one.\n","sig":null,"attributes":[{"value":"/ Removes all values in another set from this one.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":15012,"byte_end":15064,"line_start":402,"line_end":402,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":15435,"byte_end":15439,"line_start":411,"line_end":411,"column_start":12,"column_end":16},"name":"iter","qualname":"<EnumSet<T>>::iter","value":"pub fn iter(&Self) -> EnumSetIter<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates an iterator over the values in this set.","sig":null,"attributes":[{"value":"/ Creates an iterator over the values in this set.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":15216,"byte_end":15268,"line_start":407,"line_end":407,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":15273,"byte_end":15276,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ Note that iterator invalidation is impossible as the iterator contains a copy of this type,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":15281,"byte_end":15376,"line_start":409,"line_end":409,"column_start":5,"column_end":100}},{"value":"/ rather than holding a reference to it.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":15381,"byte_end":15423,"line_start":410,"line_end":410,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":18825,"byte_end":18830,"line_start":491,"line_end":491,"column_start":52,"column_end":57},"name":"as_u8","qualname":"<EnumSet<T>>::as_u8","value":"pub fn as_u8(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"Returns a `\nu8\n` representing the elements of this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":18831,"byte_end":18840,"line_start":491,"line_end":491,"column_start":58,"column_end":67},"name":"try_as_u8","qualname":"<EnumSet<T>>::try_as_u8","value":"pub fn try_as_u8(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":"Tries to return a `\nu8\n` representing the elements of this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":18841,"byte_end":18856,"line_start":491,"line_end":491,"column_start":68,"column_end":83},"name":"as_u8_truncated","qualname":"<EnumSet<T>>::as_u8_truncated","value":"pub fn as_u8_truncated(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"Returns a truncated `\nu8\n` representing the elements of this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":18787,"byte_end":18794,"line_start":491,"line_end":491,"column_start":14,"column_end":21},"name":"from_u8","qualname":"<EnumSet<T>>::from_u8","value":"pub fn from_u8(u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nu8\n`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":18795,"byte_end":18806,"line_start":491,"line_end":491,"column_start":22,"column_end":33},"name":"try_from_u8","qualname":"<EnumSet<T>>::try_from_u8","value":"pub fn try_from_u8(u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"Attempts to constructs a bitset from a `\nu8\n`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":18807,"byte_end":18824,"line_start":491,"line_end":491,"column_start":34,"column_end":51},"name":"from_u8_truncated","qualname":"<EnumSet<T>>::from_u8_truncated","value":"pub fn from_u8_truncated(u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nu8\n`, ignoring invalid variants.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":18956,"byte_end":18962,"line_start":493,"line_end":493,"column_start":55,"column_end":61},"name":"as_u16","qualname":"<EnumSet<T>>::as_u16","value":"pub fn as_u16(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":"Returns a `\nu16\n` representing the elements of this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":18963,"byte_end":18973,"line_start":493,"line_end":493,"column_start":62,"column_end":72},"name":"try_as_u16","qualname":"<EnumSet<T>>::try_as_u16","value":"pub fn try_as_u16(&Self) -> Option<u16>","parent":null,"children":[],"decl_id":null,"docs":"Tries to return a `\nu16\n` representing the elements of this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":18974,"byte_end":18990,"line_start":493,"line_end":493,"column_start":73,"column_end":89},"name":"as_u16_truncated","qualname":"<EnumSet<T>>::as_u16_truncated","value":"pub fn as_u16_truncated(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":"Returns a truncated `\nu16\n` representing the elements of this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":18915,"byte_end":18923,"line_start":493,"line_end":493,"column_start":14,"column_end":22},"name":"from_u16","qualname":"<EnumSet<T>>::from_u16","value":"pub fn from_u16(u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nu16\n`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":18924,"byte_end":18936,"line_start":493,"line_end":493,"column_start":23,"column_end":35},"name":"try_from_u16","qualname":"<EnumSet<T>>::try_from_u16","value":"pub fn try_from_u16(u16) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"Attempts to constructs a bitset from a `\nu16\n`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":18937,"byte_end":18955,"line_start":493,"line_end":493,"column_start":36,"column_end":54},"name":"from_u16_truncated","qualname":"<EnumSet<T>>::from_u16_truncated","value":"pub fn from_u16_truncated(u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nu16\n`, ignoring invalid variants.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":19090,"byte_end":19096,"line_start":495,"line_end":495,"column_start":55,"column_end":61},"name":"as_u32","qualname":"<EnumSet<T>>::as_u32","value":"pub fn as_u32(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"Returns a `\nu32\n` representing the elements of this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":19097,"byte_end":19107,"line_start":495,"line_end":495,"column_start":62,"column_end":72},"name":"try_as_u32","qualname":"<EnumSet<T>>::try_as_u32","value":"pub fn try_as_u32(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":"Tries to return a `\nu32\n` representing the elements of this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":19108,"byte_end":19124,"line_start":495,"line_end":495,"column_start":73,"column_end":89},"name":"as_u32_truncated","qualname":"<EnumSet<T>>::as_u32_truncated","value":"pub fn as_u32_truncated(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"Returns a truncated `\nu32\n` representing the elements of this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":19049,"byte_end":19057,"line_start":495,"line_end":495,"column_start":14,"column_end":22},"name":"from_u32","qualname":"<EnumSet<T>>::from_u32","value":"pub fn from_u32(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nu32\n`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":19058,"byte_end":19070,"line_start":495,"line_end":495,"column_start":23,"column_end":35},"name":"try_from_u32","qualname":"<EnumSet<T>>::try_from_u32","value":"pub fn try_from_u32(u32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"Attempts to constructs a bitset from a `\nu32\n`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":19071,"byte_end":19089,"line_start":495,"line_end":495,"column_start":36,"column_end":54},"name":"from_u32_truncated","qualname":"<EnumSet<T>>::from_u32_truncated","value":"pub fn from_u32_truncated(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nu32\n`, ignoring invalid variants.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":19224,"byte_end":19230,"line_start":497,"line_end":497,"column_start":55,"column_end":61},"name":"as_u64","qualname":"<EnumSet<T>>::as_u64","value":"pub fn as_u64(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"Returns a `\nu64\n` representing the elements of this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":19231,"byte_end":19241,"line_start":497,"line_end":497,"column_start":62,"column_end":72},"name":"try_as_u64","qualname":"<EnumSet<T>>::try_as_u64","value":"pub fn try_as_u64(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":"Tries to return a `\nu64\n` representing the elements of this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":19242,"byte_end":19258,"line_start":497,"line_end":497,"column_start":73,"column_end":89},"name":"as_u64_truncated","qualname":"<EnumSet<T>>::as_u64_truncated","value":"pub fn as_u64_truncated(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"Returns a truncated `\nu64\n` representing the elements of this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":19183,"byte_end":19191,"line_start":497,"line_end":497,"column_start":14,"column_end":22},"name":"from_u64","qualname":"<EnumSet<T>>::from_u64","value":"pub fn from_u64(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nu64\n`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":19192,"byte_end":19204,"line_start":497,"line_end":497,"column_start":23,"column_end":35},"name":"try_from_u64","qualname":"<EnumSet<T>>::try_from_u64","value":"pub fn try_from_u64(u64) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"Attempts to constructs a bitset from a `\nu64\n`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":19205,"byte_end":19223,"line_start":497,"line_end":497,"column_start":36,"column_end":54},"name":"from_u64_truncated","qualname":"<EnumSet<T>>::from_u64_truncated","value":"pub fn from_u64_truncated(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nu64\n`, ignoring invalid variants.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":19365,"byte_end":19372,"line_start":499,"line_end":499,"column_start":58,"column_end":65},"name":"as_u128","qualname":"<EnumSet<T>>::as_u128","value":"pub fn as_u128(&Self) -> u128","parent":null,"children":[],"decl_id":null,"docs":"Returns a `\nu128\n` representing the elements of this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":19373,"byte_end":19384,"line_start":499,"line_end":499,"column_start":66,"column_end":77},"name":"try_as_u128","qualname":"<EnumSet<T>>::try_as_u128","value":"pub fn try_as_u128(&Self) -> Option<u128>","parent":null,"children":[],"decl_id":null,"docs":"Tries to return a `\nu128\n` representing the elements of this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":19385,"byte_end":19402,"line_start":499,"line_end":499,"column_start":78,"column_end":95},"name":"as_u128_truncated","qualname":"<EnumSet<T>>::as_u128_truncated","value":"pub fn as_u128_truncated(&Self) -> u128","parent":null,"children":[],"decl_id":null,"docs":"Returns a truncated `\nu128\n` representing the elements of this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":19321,"byte_end":19330,"line_start":499,"line_end":499,"column_start":14,"column_end":23},"name":"from_u128","qualname":"<EnumSet<T>>::from_u128","value":"pub fn from_u128(u128) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nu128\n`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":19331,"byte_end":19344,"line_start":499,"line_end":499,"column_start":24,"column_end":37},"name":"try_from_u128","qualname":"<EnumSet<T>>::try_from_u128","value":"pub fn try_from_u128(u128) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"Attempts to constructs a bitset from a `\nu128\n`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":19345,"byte_end":19364,"line_start":499,"line_end":499,"column_start":38,"column_end":57},"name":"from_u128_truncated","qualname":"<EnumSet<T>>::from_u128_truncated","value":"pub fn from_u128_truncated(u128) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nu128\n`, ignoring invalid variants.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":19529,"byte_end":19537,"line_start":502,"line_end":502,"column_start":14,"column_end":22},"name":"as_usize","qualname":"<EnumSet<T>>::as_usize","value":"pub fn as_usize(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"Returns a `\nusize\n` representing the elements of this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":19538,"byte_end":19550,"line_start":502,"line_end":502,"column_start":23,"column_end":35},"name":"try_as_usize","qualname":"<EnumSet<T>>::try_as_usize","value":"pub fn try_as_usize(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":"Tries to return a `\nusize\n` representing the elements of this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":19551,"byte_end":19569,"line_start":502,"line_end":502,"column_start":36,"column_end":54},"name":"as_usize_truncated","qualname":"<EnumSet<T>>::as_usize_truncated","value":"pub fn as_usize_truncated(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"Returns a truncated `\nusize\n` representing the elements of this set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":19469,"byte_end":19479,"line_start":501,"line_end":501,"column_start":14,"column_end":24},"name":"from_usize","qualname":"<EnumSet<T>>::from_usize","value":"pub fn from_usize(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nusize\n`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":19480,"byte_end":19494,"line_start":501,"line_end":501,"column_start":25,"column_end":39},"name":"try_from_usize","qualname":"<EnumSet<T>>::try_from_usize","value":"pub fn try_from_usize(usize) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"Attempts to constructs a bitset from a `\nusize\n`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":19495,"byte_end":19515,"line_start":501,"line_end":501,"column_start":40,"column_end":60},"name":"from_usize_truncated","qualname":"<EnumSet<T>>::from_usize_truncated","value":"pub fn from_usize_truncated(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nusize\n`, ignoring invalid variants.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":289},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":23070,"byte_end":23081,"line_start":631,"line_end":631,"column_start":12,"column_end":23},"name":"EnumSetIter","qualname":"::EnumSetIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" The iterator used by [`EnumSet`]s.\n","sig":null,"attributes":[{"value":"/ The iterator used by [`EnumSet`]s.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":22996,"byte_end":23034,"line_start":629,"line_end":629,"column_start":1,"column_end":39}}]}],"impls":[{"id":5,"kind":"Inherent","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":9802,"byte_end":9809,"line_start":267,"line_end":267,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":19609,"byte_end":19616,"line_start":505,"line_end":505,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":19747,"byte_end":19754,"line_start":512,"line_end":512,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":19942,"byte_end":19949,"line_start":521,"line_end":521,"column_start":55,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":20127,"byte_end":20134,"line_start":527,"line_end":527,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":20316,"byte_end":20323,"line_start":533,"line_end":533,"column_start":57,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":20498,"byte_end":20505,"line_start":539,"line_end":539,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":20702,"byte_end":20709,"line_start":546,"line_end":546,"column_start":61,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":20854,"byte_end":20861,"line_start":551,"line_end":551,"column_start":64,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":21008,"byte_end":21015,"line_start":556,"line_end":556,"column_start":63,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":21162,"byte_end":21169,"line_start":561,"line_end":561,"column_start":64,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":21285,"byte_end":21292,"line_start":567,"line_end":567,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":21426,"byte_end":21433,"line_start":574,"line_end":574,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":21540,"byte_end":21547,"line_start":580,"line_end":580,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":21718,"byte_end":21725,"line_start":585,"line_end":585,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":22082,"byte_end":22089,"line_start":599,"line_end":599,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":22233,"byte_end":22240,"line_start":604,"line_end":604,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":22421,"byte_end":22428,"line_start":609,"line_end":609,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":23151,"byte_end":23162,"line_start":632,"line_end":632,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":23759,"byte_end":23770,"line_start":652,"line_end":652,"column_start":44,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":23813,"byte_end":23820,"line_start":654,"line_end":654,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":23999,"byte_end":24006,"line_start":660,"line_end":660,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":24208,"byte_end":24215,"line_start":668,"line_end":668,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":24416,"byte_end":24423,"line_start":674,"line_end":674,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":4915,"byte_end":4922,"line_start":141,"line_end":141,"column_start":9,"column_end":16},"kind":"SuperTrait","from":{"krate":5,"index":502},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":4925,"byte_end":4936,"line_start":141,"line_end":141,"column_start":19,"column_end":30},"kind":"SuperTrait","from":{"krate":5,"index":698},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":4939,"byte_end":4949,"line_start":141,"line_end":141,"column_start":33,"column_end":43},"kind":"SuperTrait","from":{"krate":5,"index":558},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":4952,"byte_end":4957,"line_start":141,"line_end":141,"column_start":46,"column_end":51},"kind":"SuperTrait","from":{"krate":1,"index":9553},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":4960,"byte_end":4964,"line_start":141,"line_end":141,"column_start":54,"column_end":58},"kind":"SuperTrait","from":{"krate":1,"index":9760},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":4967,"byte_end":4980,"line_start":141,"line_end":141,"column_start":61,"column_end":74},"kind":"SuperTrait","from":{"krate":5,"index":316},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":4983,"byte_end":4994,"line_start":141,"line_end":141,"column_start":77,"column_end":88},"kind":"SuperTrait","from":{"krate":5,"index":290},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":5005,"byte_end":5016,"line_start":142,"line_end":142,"column_start":9,"column_end":20},"kind":"SuperTrait","from":{"krate":5,"index":349},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":5023,"byte_end":5034,"line_start":142,"line_end":142,"column_start":27,"column_end":38},"kind":"SuperTrait","from":{"krate":5,"index":349},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":5042,"byte_end":5053,"line_start":142,"line_end":142,"column_start":46,"column_end":57},"kind":"SuperTrait","from":{"krate":5,"index":349},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":5061,"byte_end":5072,"line_start":142,"line_end":142,"column_start":65,"column_end":76},"kind":"SuperTrait","from":{"krate":5,"index":349},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":5088,"byte_end":5099,"line_start":143,"line_end":143,"column_start":9,"column_end":20},"kind":"SuperTrait","from":{"krate":5,"index":349},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":5108,"byte_end":5119,"line_start":143,"line_end":143,"column_start":29,"column_end":40},"kind":"SuperTrait","from":{"krate":5,"index":349},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7912,"byte_end":7916,"line_start":232,"line_end":232,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":3029},"to":{"krate":0,"index":62}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7919,"byte_end":7921,"line_start":232,"line_end":232,"column_start":38,"column_end":40},"kind":"SuperTrait","from":{"krate":1,"index":2675},"to":{"krate":0,"index":62}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":7924,"byte_end":7942,"line_start":232,"line_end":232,"column_start":43,"column_end":61},"kind":"SuperTrait","from":{"krate":0,"index":40},"to":{"krate":0,"index":62}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":9802,"byte_end":9809,"line_start":267,"line_end":267,"column_start":23,"column_end":30},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":19609,"byte_end":19616,"line_start":505,"line_end":505,"column_start":35,"column_end":42},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":226},"to":{"krate":1,"index":2997}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":19747,"byte_end":19754,"line_start":512,"line_end":512,"column_start":40,"column_end":47},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":226},"to":{"krate":1,"index":7633}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":19942,"byte_end":19949,"line_start":521,"line_end":521,"column_start":55,"column_end":62},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":226},"to":{"krate":1,"index":3091}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":20127,"byte_end":20134,"line_start":527,"line_end":527,"column_start":58,"column_end":65},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":226},"to":{"krate":1,"index":3142}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":20316,"byte_end":20323,"line_start":533,"line_end":533,"column_start":57,"column_end":64},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":226},"to":{"krate":1,"index":3147}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":20498,"byte_end":20505,"line_start":539,"line_end":539,"column_start":58,"column_end":65},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":226},"to":{"krate":1,"index":3152}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":20702,"byte_end":20709,"line_start":546,"line_end":546,"column_start":61,"column_end":68},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":226},"to":{"krate":1,"index":3121}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":20854,"byte_end":20861,"line_start":551,"line_end":551,"column_start":64,"column_end":71},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":226},"to":{"krate":1,"index":3169}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":21008,"byte_end":21015,"line_start":556,"line_end":556,"column_start":63,"column_end":70},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":226},"to":{"krate":1,"index":3173}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":21162,"byte_end":21169,"line_start":561,"line_end":561,"column_start":64,"column_end":71},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":226},"to":{"krate":1,"index":3177}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":21285,"byte_end":21292,"line_start":567,"line_end":567,"column_start":31,"column_end":38},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":226},"to":{"krate":1,"index":3138}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":21426,"byte_end":21433,"line_start":574,"line_end":574,"column_start":35,"column_end":42},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":226},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":21540,"byte_end":21547,"line_start":580,"line_end":580,"column_start":40,"column_end":47},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":226},"to":{"krate":1,"index":2670}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":21718,"byte_end":21725,"line_start":585,"line_end":585,"column_start":41,"column_end":48},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":226},"to":{"krate":1,"index":9553}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":22082,"byte_end":22089,"line_start":599,"line_end":599,"column_start":32,"column_end":39},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":226},"to":{"krate":1,"index":9760}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":22233,"byte_end":22240,"line_start":604,"line_end":604,"column_start":38,"column_end":45},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":226},"to":{"krate":1,"index":2717}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":22421,"byte_end":22428,"line_start":609,"line_end":609,"column_start":31,"column_end":38},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":226},"to":{"krate":1,"index":2706}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":23151,"byte_end":23162,"line_start":632,"line_end":632,"column_start":36,"column_end":47},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":289},"to":{"krate":1,"index":7822}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":23759,"byte_end":23770,"line_start":652,"line_end":652,"column_start":44,"column_end":55},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":289},"to":{"krate":1,"index":7702}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":23813,"byte_end":23820,"line_start":654,"line_end":654,"column_start":36,"column_end":43},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":226},"to":{"krate":1,"index":7642}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":23999,"byte_end":24006,"line_start":660,"line_end":660,"column_start":42,"column_end":49},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":226},"to":{"krate":1,"index":7629}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":24208,"byte_end":24215,"line_start":668,"line_end":668,"column_start":45,"column_end":52},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":226},"to":{"krate":1,"index":7642}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer_enumset-1.0.1/src/lib.rs","byte_start":24416,"byte_end":24423,"line_start":674,"line_end":674,"column_start":51,"column_end":58},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":226},"to":{"krate":1,"index":7629}}]}