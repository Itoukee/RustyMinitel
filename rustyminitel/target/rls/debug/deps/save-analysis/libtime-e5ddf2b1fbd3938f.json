{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9","program":"/home/matheo/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","time","--edition=2018","/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","--json=diagnostic-rendered-ansi,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"formatting\"","--cfg","feature=\"itoa\"","--cfg","feature=\"local-offset\"","--cfg","feature=\"std\"","-C","metadata=e5ddf2b1fbd3938f","-C","extra-filename=-e5ddf2b1fbd3938f","--out-dir","/home/matheo/Bureau/RustyMinitel/rustyminitel/target/rls/debug/deps","-L","dependency=/home/matheo/Bureau/RustyMinitel/rustyminitel/target/rls/debug/deps","--extern","itoa=/home/matheo/Bureau/RustyMinitel/rustyminitel/target/rls/debug/deps/libitoa-7d53874c7ef85679.rmeta","--extern","libc=/home/matheo/Bureau/RustyMinitel/rustyminitel/target/rls/debug/deps/liblibc-d750c14aa193b6fb.rmeta","--extern","num_threads=/home/matheo/Bureau/RustyMinitel/rustyminitel/target/rls/debug/deps/libnum_threads-723770e299a2b93e.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/matheo/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/matheo/Bureau/RustyMinitel/rustyminitel/target/rls/debug/deps/libtime-e5ddf2b1fbd3938f.rmeta"},"prelude":{"crate_id":{"name":"time","disambiguator":[3490777646963790054,0]},"crate_root":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src","external_crates":[{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14026078687029744792,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","num":2,"id":{"name":"core","disambiguator":[5443730852259234579,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4162025702538114948,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17612152343462746361,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5560808256873132085,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[135160560163186024,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5800521777261530329,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7095478770525139037,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17225897750877482818,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15613653607383163471,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[12428323400248712701,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[11893279639181573711,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[13583305032161054644,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16609837797022023111,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[18098459435141129808,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[15244551393771456017,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[6576340271055396708,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[15284510821186066958,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12982807908830018159,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/formatting/mod.rs","num":20,"id":{"name":"itoa","disambiguator":[5510977470187001259,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/sys/local_offset_at/unix.rs","num":21,"id":{"name":"libc","disambiguator":[4287381645232922677,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/sys/local_offset_at/unix.rs","num":22,"id":{"name":"num_threads","disambiguator":[11375299926538223934,0]}}],"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":0,"byte_end":10985,"line_start":1,"line_end":330,"column_start":1,"column_end":53}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1722},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/mod.rs","byte_start":82316,"byte_end":82330,"line_start":22,"line_end":22,"column_start":26,"column_end":40},"alias_span":null,"name":"ComponentRange","value":"","parent":{"krate":0,"index":326}},{"kind":"Use","ref_id":{"krate":0,"index":1743},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/mod.rs","byte_start":82358,"byte_end":82373,"line_start":23,"line_end":23,"column_start":27,"column_end":42},"alias_span":null,"name":"ConversionRange","value":"","parent":{"krate":0,"index":326}},{"kind":"Use","ref_id":{"krate":0,"index":1744},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/mod.rs","byte_start":82358,"byte_end":82373,"line_start":23,"line_end":23,"column_start":27,"column_end":42},"alias_span":null,"name":"ConversionRange","value":"","parent":{"krate":0,"index":326}},{"kind":"Use","ref_id":{"krate":0,"index":1756},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/mod.rs","byte_start":82402,"byte_end":82418,"line_start":24,"line_end":24,"column_start":28,"column_end":44},"alias_span":null,"name":"DifferentVariant","value":"","parent":{"krate":0,"index":326}},{"kind":"Use","ref_id":{"krate":0,"index":1757},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/mod.rs","byte_start":82402,"byte_end":82418,"line_start":24,"line_end":24,"column_start":28,"column_end":44},"alias_span":null,"name":"DifferentVariant","value":"","parent":{"krate":0,"index":326}},{"kind":"Use","ref_id":{"krate":0,"index":1769},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/mod.rs","byte_start":82467,"byte_end":82473,"line_start":26,"line_end":26,"column_start":17,"column_end":23},"alias_span":null,"name":"Format","value":"","parent":{"krate":0,"index":326}},{"kind":"Use","ref_id":{"krate":0,"index":1780},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/mod.rs","byte_start":82538,"byte_end":82557,"line_start":28,"line_end":28,"column_start":31,"column_end":50},"alias_span":null,"name":"IndeterminateOffset","value":"","parent":{"krate":0,"index":326}},{"kind":"Use","ref_id":{"krate":0,"index":1781},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/mod.rs","byte_start":82538,"byte_end":82557,"line_start":28,"line_end":28,"column_start":31,"column_end":50},"alias_span":null,"name":"IndeterminateOffset","value":"","parent":{"krate":0,"index":326}},{"kind":"Use","ref_id":{"krate":0,"index":1793},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/mod.rs","byte_start":82676,"byte_end":82700,"line_start":30,"line_end":30,"column_start":37,"column_end":61},"alias_span":null,"name":"InvalidFormatDescription","value":"","parent":{"krate":0,"index":326}},{"kind":"Use","ref_id":{"krate":0,"index":1815},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/mod.rs","byte_start":82727,"byte_end":82741,"line_start":31,"line_end":31,"column_start":26,"column_end":40},"alias_span":null,"name":"InvalidVariant","value":"","parent":{"krate":0,"index":326}},{"kind":"Use","ref_id":{"krate":0,"index":1816},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/mod.rs","byte_start":82727,"byte_end":82741,"line_start":31,"line_end":31,"column_start":26,"column_end":40},"alias_span":null,"name":"InvalidVariant","value":"","parent":{"krate":0,"index":326}},{"kind":"Use","ref_id":{"krate":0,"index":1852},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":107736,"byte_end":107745,"line_start":19,"line_end":19,"column_start":26,"column_end":35},"alias_span":null,"name":"Component","value":"","parent":{"krate":0,"index":557}},{"kind":"Use","ref_id":{"krate":0,"index":653},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":107794,"byte_end":107799,"line_start":21,"line_end":21,"column_start":22,"column_end":27},"alias_span":null,"name":"parse","value":"","parent":{"krate":0,"index":557}},{"kind":"Use","ref_id":{"krate":0,"index":746},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/formatting/mod.rs","byte_start":142666,"byte_end":142677,"line_start":7,"line_end":7,"column_start":28,"column_end":39},"alias_span":null,"name":"Formattable","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":1557},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":10491,"byte_end":10495,"line_start":317,"line_end":317,"column_start":22,"column_end":26},"alias_span":null,"name":"Date","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1605},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":10522,"byte_end":10530,"line_start":318,"line_end":318,"column_start":26,"column_end":34},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1828},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":10554,"byte_end":10559,"line_start":319,"line_end":319,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2391},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":10609,"byte_end":10616,"line_start":321,"line_end":321,"column_start":25,"column_end":32},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2392},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":10609,"byte_end":10616,"line_start":321,"line_end":321,"column_start":25,"column_end":32},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2425},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":10640,"byte_end":10645,"line_start":322,"line_end":322,"column_start":23,"column_end":28},"alias_span":null,"name":"Month","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2476},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":10680,"byte_end":10694,"line_start":323,"line_end":323,"column_start":34,"column_end":48},"alias_span":null,"name":"OffsetDateTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2499},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":10732,"byte_end":10749,"line_start":324,"line_end":324,"column_start":37,"column_end":54},"alias_span":null,"name":"PrimitiveDateTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2548},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":10772,"byte_end":10776,"line_start":325,"line_end":325,"column_start":22,"column_end":26},"alias_span":null,"name":"Time","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2579},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":10805,"byte_end":10814,"line_start":326,"line_end":326,"column_start":28,"column_end":37},"alias_span":null,"name":"UtcOffset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2602},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":10840,"byte_end":10847,"line_start":327,"line_end":327,"column_start":25,"column_end":32},"alias_span":null,"name":"Weekday","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":0,"byte_end":10985,"line_start":1,"line_end":330,"column_start":1,"column_end":53},"name":"","qualname":"::","value":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":139},{"krate":0,"index":326},{"krate":0,"index":491},{"krate":0,"index":557},{"krate":0,"index":699},{"krate":0,"index":909},{"krate":0,"index":998},{"krate":0,"index":1029},{"krate":0,"index":1197},{"krate":0,"index":1317},{"krate":0,"index":1349},{"krate":0,"index":1433},{"krate":0,"index":1482},{"krate":0,"index":1498},{"krate":0,"index":1525},{"krate":0,"index":1528},{"krate":0,"index":1531},{"krate":0,"index":1534},{"krate":0,"index":1535},{"krate":0,"index":1537},{"krate":0,"index":1540},{"krate":0,"index":1543},{"krate":0,"index":1546},{"krate":0,"index":1549},{"krate":0,"index":1552},{"krate":0,"index":1555}],"decl_id":null,"docs":" # Feature flags","sig":null,"attributes":[{"value":"/ # Feature flags","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":0,"byte_end":19,"line_start":1,"line_end":1,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":20,"byte_end":23,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate exposes a number of features. These can be enabled or disabled as shown","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":24,"byte_end":110,"line_start":3,"line_end":3,"column_start":1,"column_end":87}},{"value":"/ [in Cargo's documentation](https://doc.rust-lang.org/cargo/reference/features.html). Features","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":111,"byte_end":208,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/ are _disabled_ by default unless otherwise noted.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":209,"byte_end":262,"line_start":5,"line_end":5,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":263,"byte_end":266,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Reliance on a given feature is always indicated alongside the item definition.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":267,"byte_end":349,"line_start":7,"line_end":7,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":350,"byte_end":353,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ - `std` (_enabled by default, implicitly enables `alloc`_)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":354,"byte_end":416,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":417,"byte_end":420,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/   This enables a number of features that depend on the standard library.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":421,"byte_end":497,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":498,"byte_end":501,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ - `alloc` (_enabled by default via `std`_)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":502,"byte_end":548,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":549,"byte_end":552,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/   Enables a number of features that require the ability to dynamically allocate memory.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":553,"byte_end":644,"line_start":15,"line_end":15,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":645,"byte_end":648,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ - `macros`","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":649,"byte_end":663,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":664,"byte_end":667,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/   Enables macros that provide compile-time verification of values and intuitive syntax.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":668,"byte_end":759,"line_start":19,"line_end":19,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":760,"byte_end":763,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ - `formatting` (_implicitly enables `std`_)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":764,"byte_end":811,"line_start":21,"line_end":21,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":812,"byte_end":815,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/   Enables formatting of most structs.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":816,"byte_end":857,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":858,"byte_end":861,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ - `parsing`","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":862,"byte_end":877,"line_start":25,"line_end":25,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":878,"byte_end":881,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/   Enables parsing of most structs.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":882,"byte_end":920,"line_start":27,"line_end":27,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":921,"byte_end":924,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ - `local-offset` (_implicitly enables `std`_)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":925,"byte_end":974,"line_start":29,"line_end":29,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":975,"byte_end":978,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/   This feature enables a number of methods that allow obtaining the system's UTC offset.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":979,"byte_end":1071,"line_start":31,"line_end":31,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":1072,"byte_end":1075,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ - `large-dates`","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":1076,"byte_end":1095,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":1096,"byte_end":1099,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/   By default, only years within the ±9999 range (inclusive) are supported. If you need support","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":1100,"byte_end":1199,"line_start":35,"line_end":35,"column_start":1,"column_end":99}},{"value":"/   for years outside this range, consider enabling this feature; the supported range will be","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":1200,"byte_end":1295,"line_start":36,"line_end":36,"column_start":1,"column_end":96}},{"value":"/   increased to ±999,999.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":1296,"byte_end":1325,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":1326,"byte_end":1329,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/   Note that enabling this feature has some costs, as it means forgoing some optimizations.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":1330,"byte_end":1424,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/   Ambiguities may be introduced when parsing that would not otherwise exist.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":1425,"byte_end":1505,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":1506,"byte_end":1509,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/   If you are using this feature, **please leave a comment**","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":1510,"byte_end":1573,"line_start":42,"line_end":42,"column_start":1,"column_end":64}},{"value":"/   [on this discussion](https://github.com/time-rs/time/discussions/306) with your use case. If","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":1574,"byte_end":1672,"line_start":43,"line_end":43,"column_start":1,"column_end":99}},{"value":"/   there is not sufficient demand for this feature, it will be dropped in a future release.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":1673,"byte_end":1767,"line_start":44,"line_end":44,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":1768,"byte_end":1771,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ - `serde`","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":1772,"byte_end":1785,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":1786,"byte_end":1789,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/   Enables [serde](https://docs.rs/serde) support for all types except [`Instant`].","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":1790,"byte_end":1876,"line_start":48,"line_end":48,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":1877,"byte_end":1880,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ - `serde-human-readable` (_implicitly enables `serde`, `formatting`, and `parsing`_)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":1881,"byte_end":1969,"line_start":50,"line_end":50,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":1970,"byte_end":1973,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/   Allows serde representations to use a human-readable format. This is determined by the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":1974,"byte_end":2066,"line_start":52,"line_end":52,"column_start":1,"column_end":93}},{"value":"/   serializer, not the user. If this feature is not enabled or if the serializer requests a","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":2067,"byte_end":2161,"line_start":53,"line_end":53,"column_start":1,"column_end":95}},{"value":"/   non-human-readable format, a format optimized for binary representation will be used.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":2162,"byte_end":2253,"line_start":54,"line_end":54,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":2254,"byte_end":2257,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/   Libraries should never enable this feature, as the decision of what format to use should be up","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":2258,"byte_end":2358,"line_start":56,"line_end":56,"column_start":1,"column_end":101}},{"value":"/   to the user.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":2359,"byte_end":2377,"line_start":57,"line_end":57,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":2378,"byte_end":2381,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ - `serde-well-known` (_implicitly enables `serde/alloc`, `formatting`, and `parsing`_)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":2382,"byte_end":2472,"line_start":59,"line_end":59,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":2473,"byte_end":2476,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/   Enables support for serializing and deserializing well-known formats using serde's","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":2477,"byte_end":2565,"line_start":61,"line_end":61,"column_start":1,"column_end":89}},{"value":"/   [`#[with]` attribute](https://serde.rs/field-attrs.html#with).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":2566,"byte_end":2634,"line_start":62,"line_end":62,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":2635,"byte_end":2638,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ - `rand`","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":2639,"byte_end":2651,"line_start":64,"line_end":64,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":2652,"byte_end":2655,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/   Enables [rand](https://docs.rs/rand) support for all types.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":2656,"byte_end":2721,"line_start":66,"line_end":66,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":2722,"byte_end":2725,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ - `quickcheck` (_implicitly enables `alloc`_)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":2726,"byte_end":2775,"line_start":68,"line_end":68,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":2776,"byte_end":2779,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/   Enables [quickcheck](https://docs.rs/quickcheck) support for all types except [`Instant`].","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":2780,"byte_end":2876,"line_start":70,"line_end":70,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":2877,"byte_end":2880,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ One pseudo-feature flag that is only available to end users is the `unsound_local_offset` cfg.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":2881,"byte_end":2979,"line_start":72,"line_end":72,"column_start":1,"column_end":99}},{"value":"/ As the name indicates, using the feature is unsound, and [may cause unexpected segmentation","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":2980,"byte_end":3075,"line_start":73,"line_end":73,"column_start":1,"column_end":96}},{"value":"/ faults](https://github.com/time-rs/time/issues/293). Unlike other flags, this is deliberately","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":3076,"byte_end":3173,"line_start":74,"line_end":74,"column_start":1,"column_end":98}},{"value":"/ only available to end users; this is to ensure that a user doesn't have unsound behavior without","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":3174,"byte_end":3274,"line_start":75,"line_end":75,"column_start":1,"column_end":101}},{"value":"/ knowing it. To enable this behavior, you must use `RUSTFLAGS=\"--cfg unsound_local_offset\" cargo","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":3275,"byte_end":3374,"line_start":76,"line_end":76,"column_start":1,"column_end":100}},{"value":"/ build` or similar. Note: This flag is _not tested anywhere_, including in the regular test of","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":3375,"byte_end":3472,"line_start":77,"line_end":77,"column_start":1,"column_end":98}},{"value":"/ the powerset of all feature flags. Use at your own risk. Without this flag, any method that","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":3473,"byte_end":3568,"line_start":78,"line_end":78,"column_start":1,"column_end":96}},{"value":"/ requires the local offset will return the `Err` variant.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":3569,"byte_end":3629,"line_start":79,"line_end":79,"column_start":1,"column_end":61}},{"value":"deny(anonymous_parameters, clippy :: all, const_err,\n       illegal_floating_point_literal_pattern, late_bound_lifetime_arguments,\n       path_statements, patterns_in_fns_without_body, rust_2018_idioms,\n       trivial_casts, trivial_numeric_casts, unreachable_pub, unsafe_code,\n       unsafe_op_in_unsafe_fn, unused_extern_crates)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":3926,"byte_end":4288,"line_start":88,"line_end":103,"column_start":1,"column_end":3}},{"value":"warn(clippy :: dbg_macro, clippy :: decimal_literal_representation, clippy\n       :: get_unwrap, clippy :: missing_docs_in_private_items, clippy ::\n       nursery, clippy :: print_stdout, clippy :: todo, clippy ::\n       unimplemented, clippy :: unnested_or_patterns, clippy ::\n       unwrap_in_result, clippy :: unwrap_used, clippy :: use_debug,\n       deprecated_in_future, missing_copy_implementations,\n       missing_debug_implementations, unused_qualifications,\n       variant_size_differences)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":4289,"byte_end":4789,"line_start":104,"line_end":122,"column_start":1,"column_end":3}},{"value":"allow(clippy :: redundant_pub_crate)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":4790,"byte_end":4828,"line_start":123,"line_end":123,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1557},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":12232,"byte_end":12236,"line_start":36,"line_end":36,"column_start":12,"column_end":16},"name":"Date","qualname":"::date::Date","value":"Date {  }","parent":null,"children":[{"krate":0,"index":1558}],"decl_id":null,"docs":" Date in the proleptic Gregorian calendar.","sig":null,"attributes":[{"value":"/ Date in the proleptic Gregorian calendar.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":11863,"byte_end":11908,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":11909,"byte_end":11912,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ By default, years between ±9999 inclusive are representable. This can be expanded to ±999,999","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":11913,"byte_end":12012,"line_start":32,"line_end":32,"column_start":1,"column_end":98}},{"value":"/ inclusive by enabling the `large-dates` crate feature. Doing so has performance implications","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":12013,"byte_end":12109,"line_start":33,"line_end":33,"column_start":1,"column_end":97}},{"value":"/ and introduces some ambiguities when parsing.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":12110,"byte_end":12159,"line_start":34,"line_end":34,"column_start":1,"column_end":50}}]},{"kind":"Const","id":{"krate":0,"index":71},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":12961,"byte_end":12964,"line_start":58,"line_end":58,"column_start":15,"column_end":18},"name":"MIN","qualname":"::date::Date::MIN","value":"Self","parent":{"krate":0,"index":70},"children":[],"decl_id":null,"docs":" The minimum valid `Date`.","sig":null,"attributes":[{"value":"/ The minimum valid `Date`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":12834,"byte_end":12863,"line_start":55,"line_end":55,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":12868,"byte_end":12871,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The value of this may vary depending on the feature flags enabled.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":12876,"byte_end":12946,"line_start":57,"line_end":57,"column_start":5,"column_end":75}}]},{"kind":"Const","id":{"krate":0,"index":72},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":13155,"byte_end":13158,"line_start":63,"line_end":63,"column_start":15,"column_end":18},"name":"MAX","qualname":"::date::Date::MAX","value":"Self","parent":{"krate":0,"index":70},"children":[],"decl_id":null,"docs":" The maximum valid `Date`.","sig":null,"attributes":[{"value":"/ The maximum valid `Date`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":13028,"byte_end":13057,"line_start":60,"line_end":60,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":13062,"byte_end":13065,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The value of this may vary depending on the feature flags enabled.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":13070,"byte_end":13140,"line_start":62,"line_end":62,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":13428,"byte_end":13457,"line_start":69,"line_end":69,"column_start":18,"column_end":47},"name":"__from_ordinal_date_unchecked","qualname":"<Date>::__from_ordinal_date_unchecked","value":"pub const fn __from_ordinal_date_unchecked(i32, u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a `Date` from the year and ordinal values, the validity of which must be\n guaranteed by the caller.\n","sig":null,"attributes":[{"value":"/ Construct a `Date` from the year and ordinal values, the validity of which must be","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":13271,"byte_end":13357,"line_start":66,"line_end":66,"column_start":5,"column_end":91}},{"value":"/ guaranteed by the caller.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":13362,"byte_end":13391,"line_start":67,"line_end":67,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":14059,"byte_end":14077,"line_start":87,"line_end":87,"column_start":18,"column_end":36},"name":"from_calendar_date","qualname":"<Date>::from_calendar_date","value":"pub const fn from_calendar_date(i32, Month, u8)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Date` from the year, month, and day.","sig":null,"attributes":[{"value":"/ Attempt to create a `Date` from the year, month, and day.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":13578,"byte_end":13639,"line_start":75,"line_end":75,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":13644,"byte_end":13647,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":13652,"byte_end":13663,"line_start":77,"line_end":77,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, Month};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":13668,"byte_end":13698,"line_start":78,"line_end":78,"column_start":5,"column_end":35}},{"value":"/ assert!(Date::from_calendar_date(2019, Month::January, 1).is_ok());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":13703,"byte_end":13774,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/ assert!(Date::from_calendar_date(2019, Month::December, 31).is_ok());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":13779,"byte_end":13852,"line_start":80,"line_end":80,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":13857,"byte_end":13864,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":13869,"byte_end":13872,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":13877,"byte_end":13888,"line_start":83,"line_end":83,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, Month};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":13893,"byte_end":13923,"line_start":84,"line_end":84,"column_start":5,"column_end":35}},{"value":"/ assert!(Date::from_calendar_date(2019, Month::February, 29).is_err()); // 2019 isn't a leap year.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":13928,"byte_end":14029,"line_start":85,"line_end":85,"column_start":5,"column_end":106}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":14034,"byte_end":14041,"line_start":86,"line_end":86,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":15268,"byte_end":15285,"line_start":120,"line_end":120,"column_start":18,"column_end":35},"name":"from_ordinal_date","qualname":"<Date>::from_ordinal_date","value":"pub const fn from_ordinal_date(i32, u16)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Date` from the year and ordinal day number.","sig":null,"attributes":[{"value":"/ Attempt to create a `Date` from the year and ordinal day number.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":14849,"byte_end":14917,"line_start":108,"line_end":108,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":14922,"byte_end":14925,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":14930,"byte_end":14941,"line_start":110,"line_end":110,"column_start":5,"column_end":16}},{"value":"/ # use time::Date;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":14946,"byte_end":14967,"line_start":111,"line_end":111,"column_start":5,"column_end":26}},{"value":"/ assert!(Date::from_ordinal_date(2019, 1).is_ok());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":14972,"byte_end":15026,"line_start":112,"line_end":112,"column_start":5,"column_end":59}},{"value":"/ assert!(Date::from_ordinal_date(2019, 365).is_ok());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":15031,"byte_end":15087,"line_start":113,"line_end":113,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":15092,"byte_end":15099,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":15104,"byte_end":15107,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":15112,"byte_end":15123,"line_start":116,"line_end":116,"column_start":5,"column_end":16}},{"value":"/ # use time::Date;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":15128,"byte_end":15149,"line_start":117,"line_end":117,"column_start":5,"column_end":26}},{"value":"/ assert!(Date::from_ordinal_date(2019, 366).is_err()); // 2019 isn't a leap year.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":15154,"byte_end":15238,"line_start":118,"line_end":118,"column_start":5,"column_end":89}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":15243,"byte_end":15250,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":16115,"byte_end":16133,"line_start":139,"line_end":139,"column_start":18,"column_end":36},"name":"from_iso_week_date","qualname":"<Date>::from_iso_week_date","value":"pub const fn from_iso_week_date(i32, u8, Weekday)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Date` from the ISO year, week, and weekday.","sig":null,"attributes":[{"value":"/ Attempt to create a `Date` from the ISO year, week, and weekday.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":15570,"byte_end":15638,"line_start":126,"line_end":126,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":15643,"byte_end":15646,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":15651,"byte_end":15662,"line_start":128,"line_end":128,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, Weekday::*};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":15667,"byte_end":15702,"line_start":129,"line_end":129,"column_start":5,"column_end":40}},{"value":"/ assert!(Date::from_iso_week_date(2019, 1, Monday).is_ok());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":15707,"byte_end":15770,"line_start":130,"line_end":130,"column_start":5,"column_end":68}},{"value":"/ assert!(Date::from_iso_week_date(2019, 1, Tuesday).is_ok());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":15775,"byte_end":15839,"line_start":131,"line_end":131,"column_start":5,"column_end":69}},{"value":"/ assert!(Date::from_iso_week_date(2020, 53, Friday).is_ok());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":15844,"byte_end":15908,"line_start":132,"line_end":132,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":15913,"byte_end":15920,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":15925,"byte_end":15928,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":15933,"byte_end":15944,"line_start":135,"line_end":135,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, Weekday::*};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":15949,"byte_end":15984,"line_start":136,"line_end":136,"column_start":5,"column_end":40}},{"value":"/ assert!(Date::from_iso_week_date(2019, 53, Monday).is_err()); // 2019 doesn't have 53 weeks.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":15989,"byte_end":16085,"line_start":137,"line_end":137,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":16090,"byte_end":16097,"line_start":138,"line_end":138,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":18008,"byte_end":18023,"line_start":186,"line_end":186,"column_start":18,"column_end":33},"name":"from_julian_day","qualname":"<Date>::from_julian_day","value":"pub const fn from_julian_day(i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Date` from the Julian day.","sig":null,"attributes":[{"value":"/ Create a `Date` from the Julian day.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":17308,"byte_end":17348,"line_start":173,"line_end":173,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":17353,"byte_end":17356,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ The algorithm to perform this conversion is derived from one provided by Peter Baum; it is","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":17361,"byte_end":17455,"line_start":175,"line_end":175,"column_start":5,"column_end":99}},{"value":"/ freely available [here](https://www.researchgate.net/publication/316558298_Date_Algorithms).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":17460,"byte_end":17556,"line_start":176,"line_end":176,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":17561,"byte_end":17564,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":17569,"byte_end":17580,"line_start":178,"line_end":178,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, macros::date};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":17585,"byte_end":17622,"line_start":179,"line_end":179,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Date::from_julian_day(0), Ok(date!(-4713 - 11 - 24)));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":17627,"byte_end":17696,"line_start":180,"line_end":180,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(Date::from_julian_day(2_451_545), Ok(date!(2000 - 01 - 01)));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":17701,"byte_end":17777,"line_start":181,"line_end":181,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(Date::from_julian_day(2_458_485), Ok(date!(2019 - 01 - 01)));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":17782,"byte_end":17858,"line_start":182,"line_end":182,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(Date::from_julian_day(2_458_849), Ok(date!(2019 - 12 - 31)));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":17863,"byte_end":17939,"line_start":183,"line_end":183,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":17944,"byte_end":17951,"line_start":184,"line_end":184,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":20040,"byte_end":20044,"line_start":239,"line_end":239,"column_start":18,"column_end":22},"name":"year","qualname":"<Date>::year","value":"pub const fn year(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the year of the date.","sig":null,"attributes":[{"value":"/ Get the year of the date.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":19755,"byte_end":19784,"line_start":231,"line_end":231,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":19789,"byte_end":19792,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":19797,"byte_end":19808,"line_start":233,"line_end":233,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":19813,"byte_end":19842,"line_start":234,"line_end":234,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).year(), 2019);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":19847,"byte_end":19898,"line_start":235,"line_end":235,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).year(), 2019);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":19903,"byte_end":19954,"line_start":236,"line_end":236,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(date!(2020 - 01 - 01).year(), 2020);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":19959,"byte_end":20010,"line_start":237,"line_end":237,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":20015,"byte_end":20022,"line_start":238,"line_end":238,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":20345,"byte_end":20350,"line_start":250,"line_end":250,"column_start":18,"column_end":23},"name":"month","qualname":"<Date>::month","value":"pub const fn month(Self) -> Month","parent":null,"children":[],"decl_id":null,"docs":" Get the month.","sig":null,"attributes":[{"value":"/ Get the month.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":20095,"byte_end":20113,"line_start":243,"line_end":243,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":20118,"byte_end":20121,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":20126,"byte_end":20137,"line_start":245,"line_end":245,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::date, Month};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":20142,"byte_end":20180,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).month(), Month::January);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":20185,"byte_end":20247,"line_start":247,"line_end":247,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).month(), Month::December);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":20252,"byte_end":20315,"line_start":248,"line_end":248,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":20320,"byte_end":20327,"line_start":249,"line_end":249,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":20701,"byte_end":20704,"line_start":263,"line_end":263,"column_start":18,"column_end":21},"name":"day","qualname":"<Date>::day","value":"pub const fn day(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the month.","sig":null,"attributes":[{"value":"/ Get the day of the month.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":20406,"byte_end":20435,"line_start":254,"line_end":254,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":20440,"byte_end":20443,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=31`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":20448,"byte_end":20508,"line_start":256,"line_end":256,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":20513,"byte_end":20516,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":20521,"byte_end":20532,"line_start":258,"line_end":258,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":20537,"byte_end":20566,"line_start":259,"line_end":259,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).day(), 1);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":20571,"byte_end":20618,"line_start":260,"line_end":260,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).day(), 31);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":20623,"byte_end":20671,"line_start":261,"line_end":261,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":20676,"byte_end":20683,"line_start":262,"line_end":262,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":22949,"byte_end":22956,"line_start":317,"line_end":317,"column_start":18,"column_end":25},"name":"ordinal","qualname":"<Date>::ordinal","value":"pub const fn ordinal(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the year.","sig":null,"attributes":[{"value":"/ Get the day of the year.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":22616,"byte_end":22644,"line_start":308,"line_end":308,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":22649,"byte_end":22652,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=366` (`1..=365` for common years).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":22657,"byte_end":22747,"line_start":310,"line_end":310,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":22752,"byte_end":22755,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":22760,"byte_end":22771,"line_start":312,"line_end":312,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":22776,"byte_end":22805,"line_start":313,"line_end":313,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).ordinal(), 1);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":22810,"byte_end":22861,"line_start":314,"line_end":314,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).ordinal(), 365);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":22866,"byte_end":22919,"line_start":315,"line_end":315,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":22924,"byte_end":22931,"line_start":316,"line_end":316,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":23909,"byte_end":23917,"line_start":344,"line_end":344,"column_start":18,"column_end":26},"name":"iso_week","qualname":"<Date>::iso_week","value":"pub const fn iso_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO week number.","sig":null,"attributes":[{"value":"/ Get the ISO week number.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":23432,"byte_end":23460,"line_start":332,"line_end":332,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":23465,"byte_end":23468,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=53`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":23473,"byte_end":23533,"line_start":334,"line_end":334,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":23538,"byte_end":23541,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":23546,"byte_end":23557,"line_start":336,"line_end":336,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":23562,"byte_end":23591,"line_start":337,"line_end":337,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).iso_week(), 1);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":23596,"byte_end":23648,"line_start":338,"line_end":338,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(date!(2019 - 10 - 04).iso_week(), 40);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":23653,"byte_end":23706,"line_start":339,"line_end":339,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(date!(2020 - 01 - 01).iso_week(), 1);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":23711,"byte_end":23763,"line_start":340,"line_end":340,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(date!(2020 - 12 - 31).iso_week(), 53);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":23768,"byte_end":23821,"line_start":341,"line_end":341,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(date!(2021 - 01 - 01).iso_week(), 53);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":23826,"byte_end":23879,"line_start":342,"line_end":342,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":23884,"byte_end":23891,"line_start":343,"line_end":343,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":24464,"byte_end":24481,"line_start":359,"line_end":359,"column_start":18,"column_end":35},"name":"sunday_based_week","qualname":"<Date>::sunday_based_week","value":"pub const fn sunday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Sunday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Sunday.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":23974,"byte_end":24038,"line_start":348,"line_end":348,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":24043,"byte_end":24046,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":24051,"byte_end":24111,"line_start":350,"line_end":350,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":24116,"byte_end":24119,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":24124,"byte_end":24135,"line_start":352,"line_end":352,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":24140,"byte_end":24169,"line_start":353,"line_end":353,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).sunday_based_week(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":24174,"byte_end":24235,"line_start":354,"line_end":354,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(date!(2020 - 01 - 01).sunday_based_week(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":24240,"byte_end":24301,"line_start":355,"line_end":355,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(date!(2020 - 12 - 31).sunday_based_week(), 52);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":24306,"byte_end":24368,"line_start":356,"line_end":356,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(date!(2021 - 01 - 01).sunday_based_week(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":24373,"byte_end":24434,"line_start":357,"line_end":357,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":24439,"byte_end":24446,"line_start":358,"line_end":358,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":25094,"byte_end":25111,"line_start":374,"line_end":374,"column_start":18,"column_end":35},"name":"monday_based_week","qualname":"<Date>::monday_based_week","value":"pub const fn monday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Monday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Monday.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":24604,"byte_end":24668,"line_start":363,"line_end":363,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":24673,"byte_end":24676,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":24681,"byte_end":24741,"line_start":365,"line_end":365,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":24746,"byte_end":24749,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":24754,"byte_end":24765,"line_start":367,"line_end":367,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":24770,"byte_end":24799,"line_start":368,"line_end":368,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).monday_based_week(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":24804,"byte_end":24865,"line_start":369,"line_end":369,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(date!(2020 - 01 - 01).monday_based_week(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":24870,"byte_end":24931,"line_start":370,"line_end":370,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(date!(2020 - 12 - 31).monday_based_week(), 52);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":24936,"byte_end":24998,"line_start":371,"line_end":371,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(date!(2021 - 01 - 01).monday_based_week(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":25003,"byte_end":25064,"line_start":372,"line_end":372,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":25069,"byte_end":25076,"line_start":373,"line_end":373,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":25487,"byte_end":25503,"line_start":387,"line_end":387,"column_start":18,"column_end":34},"name":"to_calendar_date","qualname":"<Date>::to_calendar_date","value":"pub const fn to_calendar_date(Self) -> (i32, Month, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the year, month, and day.","sig":null,"attributes":[{"value":"/ Get the year, month, and day.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":25234,"byte_end":25267,"line_start":378,"line_end":378,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":25272,"byte_end":25275,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":25280,"byte_end":25291,"line_start":380,"line_end":380,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::date, Month};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":25296,"byte_end":25334,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":25339,"byte_end":25354,"line_start":382,"line_end":382,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 01 - 01).to_calendar_date(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":25359,"byte_end":25408,"line_start":383,"line_end":383,"column_start":5,"column_end":54}},{"value":"/     (2019, Month::January, 1)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":25413,"byte_end":25446,"line_start":384,"line_end":384,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":25451,"byte_end":25457,"line_start":385,"line_end":385,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":25462,"byte_end":25469,"line_start":386,"line_end":386,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":25822,"byte_end":25837,"line_start":398,"line_end":398,"column_start":18,"column_end":33},"name":"to_ordinal_date","qualname":"<Date>::to_ordinal_date","value":"pub const fn to_ordinal_date(Self) -> (i32, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the year and ordinal day number.","sig":null,"attributes":[{"value":"/ Get the year and ordinal day number.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":25622,"byte_end":25662,"line_start":392,"line_end":392,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":25667,"byte_end":25670,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":25675,"byte_end":25686,"line_start":394,"line_end":394,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":25691,"byte_end":25720,"line_start":395,"line_end":395,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).to_ordinal_date(), (2019, 1));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":25725,"byte_end":25792,"line_start":396,"line_end":396,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":25797,"byte_end":25804,"line_start":397,"line_end":397,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":26545,"byte_end":26561,"line_start":418,"line_end":418,"column_start":18,"column_end":34},"name":"to_iso_week_date","qualname":"<Date>::to_iso_week_date","value":"pub const fn to_iso_week_date(Self) -> (i32, u8, Weekday)","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO 8601 year, week number, and weekday.","sig":null,"attributes":[{"value":"/ Get the ISO 8601 year, week number, and weekday.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":25909,"byte_end":25961,"line_start":402,"line_end":402,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":25966,"byte_end":25969,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":25974,"byte_end":25985,"line_start":404,"line_end":404,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::date};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":25990,"byte_end":26033,"line_start":405,"line_end":405,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).to_iso_week_date(), (2019, 1, Tuesday));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":26038,"byte_end":26115,"line_start":406,"line_end":406,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(date!(2019 - 10 - 04).to_iso_week_date(), (2019, 40, Friday));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":26120,"byte_end":26197,"line_start":407,"line_end":407,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":26202,"byte_end":26217,"line_start":408,"line_end":408,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 01 - 01).to_iso_week_date(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":26222,"byte_end":26271,"line_start":409,"line_end":409,"column_start":5,"column_end":54}},{"value":"/     (2020, 1, Wednesday)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":26276,"byte_end":26304,"line_start":410,"line_end":410,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":26309,"byte_end":26315,"line_start":411,"line_end":411,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":26320,"byte_end":26335,"line_start":412,"line_end":412,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).to_iso_week_date(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":26340,"byte_end":26389,"line_start":413,"line_end":413,"column_start":5,"column_end":54}},{"value":"/     (2020, 53, Thursday)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":26394,"byte_end":26422,"line_start":414,"line_end":414,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":26427,"byte_end":26433,"line_start":415,"line_end":415,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(date!(2021 - 01 - 01).to_iso_week_date(), (2020, 53, Friday));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":26438,"byte_end":26515,"line_start":416,"line_end":416,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":26520,"byte_end":26527,"line_start":417,"line_end":417,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":27833,"byte_end":27840,"line_start":446,"line_end":446,"column_start":18,"column_end":25},"name":"weekday","qualname":"<Date>::weekday","value":"pub const fn weekday(Self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" Get the weekday.","sig":null,"attributes":[{"value":"/ Get the weekday.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":26970,"byte_end":26990,"line_start":429,"line_end":429,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":26995,"byte_end":26998,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":27003,"byte_end":27014,"line_start":431,"line_end":431,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::date};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":27019,"byte_end":27062,"line_start":432,"line_end":432,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).weekday(), Tuesday);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":27067,"byte_end":27124,"line_start":433,"line_end":433,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(date!(2019 - 02 - 01).weekday(), Friday);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":27129,"byte_end":27185,"line_start":434,"line_end":434,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 03 - 01).weekday(), Friday);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":27190,"byte_end":27246,"line_start":435,"line_end":435,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 04 - 01).weekday(), Monday);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":27251,"byte_end":27307,"line_start":436,"line_end":436,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 05 - 01).weekday(), Wednesday);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":27312,"byte_end":27371,"line_start":437,"line_end":437,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(date!(2019 - 06 - 01).weekday(), Saturday);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":27376,"byte_end":27434,"line_start":438,"line_end":438,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(date!(2019 - 07 - 01).weekday(), Monday);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":27439,"byte_end":27495,"line_start":439,"line_end":439,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 08 - 01).weekday(), Thursday);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":27500,"byte_end":27558,"line_start":440,"line_end":440,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(date!(2019 - 09 - 01).weekday(), Sunday);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":27563,"byte_end":27619,"line_start":441,"line_end":441,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 10 - 01).weekday(), Tuesday);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":27624,"byte_end":27681,"line_start":442,"line_end":442,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(date!(2019 - 11 - 01).weekday(), Friday);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":27686,"byte_end":27742,"line_start":443,"line_end":443,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 12 - 01).weekday(), Sunday);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":27747,"byte_end":27803,"line_start":444,"line_end":444,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":27808,"byte_end":27815,"line_start":445,"line_end":445,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":28724,"byte_end":28732,"line_start":476,"line_end":476,"column_start":18,"column_end":26},"name":"next_day","qualname":"<Date>::next_day","value":"pub const fn next_day(Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Get the next calendar date.","sig":null,"attributes":[{"value":"/ Get the next calendar date.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":28198,"byte_end":28229,"line_start":458,"line_end":458,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":28234,"byte_end":28237,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":28242,"byte_end":28253,"line_start":460,"line_end":460,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, macros::date};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":28258,"byte_end":28295,"line_start":461,"line_end":461,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":28300,"byte_end":28315,"line_start":462,"line_end":462,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 01 - 01).next_day(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":28320,"byte_end":28361,"line_start":463,"line_end":463,"column_start":5,"column_end":46}},{"value":"/     Some(date!(2019 - 01 - 02))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":28366,"byte_end":28401,"line_start":464,"line_end":464,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":28406,"byte_end":28412,"line_start":465,"line_end":465,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":28417,"byte_end":28432,"line_start":466,"line_end":466,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 01 - 31).next_day(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":28437,"byte_end":28478,"line_start":467,"line_end":467,"column_start":5,"column_end":46}},{"value":"/     Some(date!(2019 - 02 - 01))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":28483,"byte_end":28518,"line_start":468,"line_end":468,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":28523,"byte_end":28529,"line_start":469,"line_end":469,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":28534,"byte_end":28549,"line_start":470,"line_end":470,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 12 - 31).next_day(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":28554,"byte_end":28595,"line_start":471,"line_end":471,"column_start":5,"column_end":46}},{"value":"/     Some(date!(2020 - 01 - 01))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":28600,"byte_end":28635,"line_start":472,"line_end":472,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":28640,"byte_end":28646,"line_start":473,"line_end":473,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(Date::MAX.next_day(), None);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":28651,"byte_end":28694,"line_start":474,"line_end":474,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":28699,"byte_end":28706,"line_start":475,"line_end":475,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":29692,"byte_end":29704,"line_start":508,"line_end":508,"column_start":18,"column_end":30},"name":"previous_day","qualname":"<Date>::previous_day","value":"pub const fn previous_day(Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Get the previous calendar date.","sig":null,"attributes":[{"value":"/ Get the previous calendar date.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":29146,"byte_end":29181,"line_start":490,"line_end":490,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":29186,"byte_end":29189,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":29194,"byte_end":29205,"line_start":492,"line_end":492,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, macros::date};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":29210,"byte_end":29247,"line_start":493,"line_end":493,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":29252,"byte_end":29267,"line_start":494,"line_end":494,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 01 - 02).previous_day(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":29272,"byte_end":29317,"line_start":495,"line_end":495,"column_start":5,"column_end":50}},{"value":"/     Some(date!(2019 - 01 - 01))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":29322,"byte_end":29357,"line_start":496,"line_end":496,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":29362,"byte_end":29368,"line_start":497,"line_end":497,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":29373,"byte_end":29388,"line_start":498,"line_end":498,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 02 - 01).previous_day(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":29393,"byte_end":29438,"line_start":499,"line_end":499,"column_start":5,"column_end":50}},{"value":"/     Some(date!(2019 - 01 - 31))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":29443,"byte_end":29478,"line_start":500,"line_end":500,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":29483,"byte_end":29489,"line_start":501,"line_end":501,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":29494,"byte_end":29509,"line_start":502,"line_end":502,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 01 - 01).previous_day(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":29514,"byte_end":29559,"line_start":503,"line_end":503,"column_start":5,"column_end":50}},{"value":"/     Some(date!(2019 - 12 - 31))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":29564,"byte_end":29599,"line_start":504,"line_end":504,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":29604,"byte_end":29610,"line_start":505,"line_end":505,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(Date::MIN.previous_day(), None);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":29615,"byte_end":29662,"line_start":506,"line_end":506,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":29667,"byte_end":29674,"line_start":507,"line_end":507,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":30699,"byte_end":30712,"line_start":535,"line_end":535,"column_start":18,"column_end":31},"name":"to_julian_day","qualname":"<Date>::to_julian_day","value":"pub const fn to_julian_day(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the Julian day for the date.","sig":null,"attributes":[{"value":"/ Get the Julian day for the date.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":30094,"byte_end":30130,"line_start":523,"line_end":523,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":30135,"byte_end":30138,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ The algorithm to perform this conversion is derived from one provided by Peter Baum; it is","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":30143,"byte_end":30237,"line_start":525,"line_end":525,"column_start":5,"column_end":99}},{"value":"/ freely available [here](https://www.researchgate.net/publication/316558298_Date_Algorithms).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":30242,"byte_end":30338,"line_start":526,"line_end":526,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":30343,"byte_end":30346,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":30351,"byte_end":30362,"line_start":528,"line_end":528,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":30367,"byte_end":30396,"line_start":529,"line_end":529,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(-4713 - 11 - 24).to_julian_day(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":30401,"byte_end":30459,"line_start":530,"line_end":530,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(date!(2000 - 01 - 01).to_julian_day(), 2_451_545);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":30464,"byte_end":30529,"line_start":531,"line_end":531,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).to_julian_day(), 2_458_485);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":30534,"byte_end":30599,"line_start":532,"line_end":532,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).to_julian_day(), 2_458_849);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":30604,"byte_end":30669,"line_start":533,"line_end":533,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":30674,"byte_end":30681,"line_start":534,"line_end":534,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":32055,"byte_end":32066,"line_start":575,"line_end":575,"column_start":18,"column_end":29},"name":"checked_add","qualname":"<Date>::checked_add","value":"pub const fn checked_add(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, returning `None` if an overflow occurred.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":31015,"byte_end":31088,"line_start":546,"line_end":546,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":31093,"byte_end":31096,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":31101,"byte_end":31112,"line_start":548,"line_end":548,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":31117,"byte_end":31178,"line_start":549,"line_end":549,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.checked_add(1.days()), None);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":31183,"byte_end":31237,"line_start":550,"line_end":550,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(Date::MIN.checked_add((-2).days()), None);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":31242,"byte_end":31299,"line_start":551,"line_end":551,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":31304,"byte_end":31319,"line_start":552,"line_end":552,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_add(2.days()),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":31324,"byte_end":31376,"line_start":553,"line_end":553,"column_start":5,"column_end":57}},{"value":"/     Some(date!(2021 - 01 - 02))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":31381,"byte_end":31416,"line_start":554,"line_end":554,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":31421,"byte_end":31427,"line_start":555,"line_end":555,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":31432,"byte_end":31439,"line_start":556,"line_end":556,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":31444,"byte_end":31447,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":31452,"byte_end":31462,"line_start":558,"line_end":558,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":31467,"byte_end":31470,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ This function only takes whole days into account.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":31475,"byte_end":31528,"line_start":560,"line_end":560,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":31533,"byte_end":31536,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":31541,"byte_end":31552,"line_start":562,"line_end":562,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":31557,"byte_end":31618,"line_start":563,"line_end":563,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.checked_add(23.hours()), Some(Date::MAX));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":31623,"byte_end":31690,"line_start":564,"line_end":564,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(Date::MIN.checked_add((-23).hours()), Some(Date::MIN));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":31695,"byte_end":31765,"line_start":565,"line_end":565,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":31770,"byte_end":31785,"line_start":566,"line_end":566,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_add(23.hours()),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":31790,"byte_end":31844,"line_start":567,"line_end":567,"column_start":5,"column_end":59}},{"value":"/     Some(date!(2020 - 12 - 31))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":31849,"byte_end":31884,"line_start":568,"line_end":568,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":31889,"byte_end":31895,"line_start":569,"line_end":569,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":31900,"byte_end":31915,"line_start":570,"line_end":570,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_add(47.hours()),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":31920,"byte_end":31974,"line_start":571,"line_end":571,"column_start":5,"column_end":59}},{"value":"/     Some(date!(2021 - 01 - 01))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":31979,"byte_end":32014,"line_start":572,"line_end":572,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":32019,"byte_end":32025,"line_start":573,"line_end":573,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":32030,"byte_end":32037,"line_start":574,"line_end":574,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":33533,"byte_end":33544,"line_start":618,"line_end":618,"column_start":18,"column_end":29},"name":"checked_sub","qualname":"<Date>::checked_sub","value":"pub const fn checked_sub(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, returning `None` if an overflow occurred.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":32501,"byte_end":32574,"line_start":589,"line_end":589,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":32579,"byte_end":32582,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":32587,"byte_end":32594,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":32599,"byte_end":32660,"line_start":592,"line_end":592,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.checked_sub((-2).days()), None);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":32665,"byte_end":32722,"line_start":593,"line_end":593,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(Date::MIN.checked_sub(1.days()), None);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":32727,"byte_end":32781,"line_start":594,"line_end":594,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":32786,"byte_end":32801,"line_start":595,"line_end":595,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_sub(2.days()),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":32806,"byte_end":32858,"line_start":596,"line_end":596,"column_start":5,"column_end":57}},{"value":"/     Some(date!(2020 - 12 - 29))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":32863,"byte_end":32898,"line_start":597,"line_end":597,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":32903,"byte_end":32909,"line_start":598,"line_end":598,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":32914,"byte_end":32921,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":32926,"byte_end":32929,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":32934,"byte_end":32944,"line_start":601,"line_end":601,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":32949,"byte_end":32952,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ This function only takes whole days into account.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":32957,"byte_end":33010,"line_start":603,"line_end":603,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":33015,"byte_end":33018,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":33023,"byte_end":33030,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":33035,"byte_end":33096,"line_start":606,"line_end":606,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.checked_sub((-23).hours()), Some(Date::MAX));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":33101,"byte_end":33171,"line_start":607,"line_end":607,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(Date::MIN.checked_sub(23.hours()), Some(Date::MIN));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":33176,"byte_end":33243,"line_start":608,"line_end":608,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":33248,"byte_end":33263,"line_start":609,"line_end":609,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_sub(23.hours()),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":33268,"byte_end":33322,"line_start":610,"line_end":610,"column_start":5,"column_end":59}},{"value":"/     Some(date!(2020 - 12 - 31))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":33327,"byte_end":33362,"line_start":611,"line_end":611,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":33367,"byte_end":33373,"line_start":612,"line_end":612,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":33378,"byte_end":33393,"line_start":613,"line_end":613,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_sub(47.hours()),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":33398,"byte_end":33452,"line_start":614,"line_end":614,"column_start":5,"column_end":59}},{"value":"/     Some(date!(2020 - 12 - 30))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":33457,"byte_end":33492,"line_start":615,"line_end":615,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":33497,"byte_end":33503,"line_start":616,"line_end":616,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":33508,"byte_end":33515,"line_start":617,"line_end":617,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":34935,"byte_end":34949,"line_start":661,"line_end":661,"column_start":18,"column_end":32},"name":"saturating_add","qualname":"<Date>::saturating_add","value":"pub const fn saturating_add(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, saturating value on overflow.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":34053,"byte_end":34114,"line_start":634,"line_end":634,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":34119,"byte_end":34122,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":34127,"byte_end":34138,"line_start":636,"line_end":636,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":34143,"byte_end":34204,"line_start":637,"line_end":637,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.saturating_add(1.days()), Date::MAX);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":34209,"byte_end":34271,"line_start":638,"line_end":638,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(Date::MIN.saturating_add((-2).days()), Date::MIN);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":34276,"byte_end":34341,"line_start":639,"line_end":639,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":34346,"byte_end":34361,"line_start":640,"line_end":640,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_add(2.days()),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":34366,"byte_end":34421,"line_start":641,"line_end":641,"column_start":5,"column_end":60}},{"value":"/     date!(2021 - 01 - 02)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":34426,"byte_end":34455,"line_start":642,"line_end":642,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":34460,"byte_end":34466,"line_start":643,"line_end":643,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":34471,"byte_end":34478,"line_start":644,"line_end":644,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":34483,"byte_end":34486,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":34491,"byte_end":34501,"line_start":646,"line_end":646,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":34506,"byte_end":34509,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ This function only takes whole days into account.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":34514,"byte_end":34567,"line_start":648,"line_end":648,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":34572,"byte_end":34575,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":34580,"byte_end":34591,"line_start":650,"line_end":650,"column_start":5,"column_end":16}},{"value":"/ # use time::{ext::NumericalDuration, macros::date};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":34596,"byte_end":34651,"line_start":651,"line_end":651,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":34656,"byte_end":34671,"line_start":652,"line_end":652,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_add(23.hours()),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":34676,"byte_end":34733,"line_start":653,"line_end":653,"column_start":5,"column_end":62}},{"value":"/     date!(2020 - 12 - 31)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":34738,"byte_end":34767,"line_start":654,"line_end":654,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":34772,"byte_end":34778,"line_start":655,"line_end":655,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":34783,"byte_end":34798,"line_start":656,"line_end":656,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_add(47.hours()),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":34803,"byte_end":34860,"line_start":657,"line_end":657,"column_start":5,"column_end":62}},{"value":"/     date!(2021 - 01 - 01)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":34865,"byte_end":34894,"line_start":658,"line_end":658,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":34899,"byte_end":34905,"line_start":659,"line_end":659,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":34910,"byte_end":34917,"line_start":660,"line_end":660,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":36067,"byte_end":36081,"line_start":698,"line_end":698,"column_start":18,"column_end":32},"name":"saturating_sub","qualname":"<Date>::saturating_sub","value":"pub const fn saturating_sub(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, saturating value on overflow.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":35193,"byte_end":35254,"line_start":671,"line_end":671,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":35259,"byte_end":35262,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":35267,"byte_end":35274,"line_start":673,"line_end":673,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":35279,"byte_end":35340,"line_start":674,"line_end":674,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.saturating_sub((-2).days()), Date::MAX);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":35345,"byte_end":35410,"line_start":675,"line_end":675,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(Date::MIN.saturating_sub(1.days()), Date::MIN);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":35415,"byte_end":35477,"line_start":676,"line_end":676,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":35482,"byte_end":35497,"line_start":677,"line_end":677,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_sub(2.days()),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":35502,"byte_end":35557,"line_start":678,"line_end":678,"column_start":5,"column_end":60}},{"value":"/     date!(2020 - 12 - 29)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":35562,"byte_end":35591,"line_start":679,"line_end":679,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":35596,"byte_end":35602,"line_start":680,"line_end":680,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":35607,"byte_end":35614,"line_start":681,"line_end":681,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":35619,"byte_end":35622,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":35627,"byte_end":35637,"line_start":683,"line_end":683,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":35642,"byte_end":35645,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ This function only takes whole days into account.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":35650,"byte_end":35703,"line_start":685,"line_end":685,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":35708,"byte_end":35711,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":35716,"byte_end":35723,"line_start":687,"line_end":687,"column_start":5,"column_end":12}},{"value":"/ # use time::{ext::NumericalDuration, macros::date};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":35728,"byte_end":35783,"line_start":688,"line_end":688,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":35788,"byte_end":35803,"line_start":689,"line_end":689,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_sub(23.hours()),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":35808,"byte_end":35865,"line_start":690,"line_end":690,"column_start":5,"column_end":62}},{"value":"/     date!(2020 - 12 - 31)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":35870,"byte_end":35899,"line_start":691,"line_end":691,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":35904,"byte_end":35910,"line_start":692,"line_end":692,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":35915,"byte_end":35930,"line_start":693,"line_end":693,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_sub(47.hours()),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":35935,"byte_end":35992,"line_start":694,"line_end":694,"column_start":5,"column_end":62}},{"value":"/     date!(2020 - 12 - 30)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":35997,"byte_end":36026,"line_start":695,"line_end":695,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":36031,"byte_end":36037,"line_start":696,"line_end":696,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":36042,"byte_end":36049,"line_start":697,"line_end":697,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":36955,"byte_end":36967,"line_start":722,"line_end":722,"column_start":18,"column_end":30},"name":"replace_year","qualname":"<Date>::replace_year","value":"pub const fn replace_year(Self, i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the year. The month and day will be unchanged.","sig":null,"attributes":[{"value":"/ Replace the year. The month and day will be unchanged.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":36389,"byte_end":36447,"line_start":710,"line_end":710,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":36452,"byte_end":36455,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":36460,"byte_end":36471,"line_start":712,"line_end":712,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":36476,"byte_end":36505,"line_start":713,"line_end":713,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":36510,"byte_end":36525,"line_start":714,"line_end":714,"column_start":5,"column_end":20}},{"value":"/     date!(2022 - 02 - 18).replace_year(2019),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":36530,"byte_end":36579,"line_start":715,"line_end":715,"column_start":5,"column_end":54}},{"value":"/     Ok(date!(2019 - 02 - 18))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":36584,"byte_end":36617,"line_start":716,"line_end":716,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":36622,"byte_end":36628,"line_start":717,"line_end":717,"column_start":5,"column_end":11}},{"value":"/ assert!(date!(2022 - 02 - 18).replace_year(-1_000_000_000).is_err()); // -1_000_000_000 isn't a valid year","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":36633,"byte_end":36743,"line_start":718,"line_end":718,"column_start":5,"column_end":115}},{"value":"/ assert!(date!(2022 - 02 - 18).replace_year(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid year","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":36748,"byte_end":36856,"line_start":719,"line_end":719,"column_start":5,"column_end":113}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":36861,"byte_end":36868,"line_start":720,"line_end":720,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Date`.\"","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":36873,"byte_end":36937,"line_start":721,"line_end":721,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":38836,"byte_end":38849,"line_start":775,"line_end":775,"column_start":18,"column_end":31},"name":"replace_month","qualname":"<Date>::replace_month","value":"pub const fn replace_month(Self, Month) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the month of the year.","sig":null,"attributes":[{"value":"/ Replace the month of the year.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":38312,"byte_end":38346,"line_start":759,"line_end":759,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":38351,"byte_end":38354,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":38359,"byte_end":38370,"line_start":761,"line_end":761,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":38375,"byte_end":38404,"line_start":762,"line_end":762,"column_start":5,"column_end":34}},{"value":"/ # use time::Month;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":38409,"byte_end":38431,"line_start":763,"line_end":763,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":38436,"byte_end":38451,"line_start":764,"line_end":764,"column_start":5,"column_end":20}},{"value":"/     date!(2022 - 02 - 18).replace_month(Month::January),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":38456,"byte_end":38516,"line_start":765,"line_end":765,"column_start":5,"column_end":65}},{"value":"/     Ok(date!(2022 - 01 - 18))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":38521,"byte_end":38554,"line_start":766,"line_end":766,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":38559,"byte_end":38565,"line_start":767,"line_end":767,"column_start":5,"column_end":11}},{"value":"/ assert!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":38570,"byte_end":38582,"line_start":768,"line_end":768,"column_start":5,"column_end":17}},{"value":"/     date!(2022 - 01 - 30)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":38587,"byte_end":38616,"line_start":769,"line_end":769,"column_start":5,"column_end":34}},{"value":"/         .replace_month(Month::February)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":38621,"byte_end":38664,"line_start":770,"line_end":770,"column_start":5,"column_end":48}},{"value":"/         .is_err()","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":38669,"byte_end":38690,"line_start":771,"line_end":771,"column_start":5,"column_end":26}},{"value":"/ ); // 30 isn't a valid day in February","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":38695,"byte_end":38737,"line_start":772,"line_end":772,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":38742,"byte_end":38749,"line_start":773,"line_end":773,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Date`.\"","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":38754,"byte_end":38818,"line_start":774,"line_end":774,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":39524,"byte_end":39535,"line_start":792,"line_end":792,"column_start":18,"column_end":29},"name":"replace_day","qualname":"<Date>::replace_day","value":"pub const fn replace_day(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the day of the month.","sig":null,"attributes":[{"value":"/ Replace the day of the month.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":39027,"byte_end":39060,"line_start":780,"line_end":780,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":39065,"byte_end":39068,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":39073,"byte_end":39084,"line_start":782,"line_end":782,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":39089,"byte_end":39118,"line_start":783,"line_end":783,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":39123,"byte_end":39138,"line_start":784,"line_end":784,"column_start":5,"column_end":20}},{"value":"/     date!(2022 - 02 - 18).replace_day(1),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":39143,"byte_end":39188,"line_start":785,"line_end":785,"column_start":5,"column_end":50}},{"value":"/     Ok(date!(2022 - 02 - 01))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":39193,"byte_end":39226,"line_start":786,"line_end":786,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":39231,"byte_end":39237,"line_start":787,"line_end":787,"column_start":5,"column_end":11}},{"value":"/ assert!(date!(2022 - 02 - 18).replace_day(0).is_err()); // 0 isn't a valid day","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":39242,"byte_end":39324,"line_start":788,"line_end":788,"column_start":5,"column_end":87}},{"value":"/ assert!(date!(2022 - 02 - 18).replace_day(30).is_err()); // 30 isn't a valid day in February","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":39329,"byte_end":39425,"line_start":789,"line_end":789,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":39430,"byte_end":39437,"line_start":790,"line_end":790,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Date`.\"","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":39442,"byte_end":39506,"line_start":791,"line_end":791,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":40459,"byte_end":40467,"line_start":818,"line_end":818,"column_start":18,"column_end":26},"name":"midnight","qualname":"<Date>::midnight","value":"pub const fn midnight(Self) -> PrimitiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Create a [`PrimitiveDateTime`] using the existing date. The [`Time`] component will be set\n to midnight.","sig":null,"attributes":[{"value":"/ Create a [`PrimitiveDateTime`] using the existing date. The [`Time`] component will be set","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":40166,"byte_end":40260,"line_start":811,"line_end":811,"column_start":5,"column_end":99}},{"value":"/ to midnight.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":40265,"byte_end":40281,"line_start":812,"line_end":812,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":40286,"byte_end":40289,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":40294,"byte_end":40305,"line_start":814,"line_end":814,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{date, datetime};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":40310,"byte_end":40351,"line_start":815,"line_end":815,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(date!(1970-01-01).midnight(), datetime!(1970-01-01 0:00));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":40356,"byte_end":40429,"line_start":816,"line_end":816,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":40434,"byte_end":40441,"line_start":817,"line_end":817,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":40877,"byte_end":40886,"line_start":831,"line_end":831,"column_start":18,"column_end":27},"name":"with_time","qualname":"<Date>::with_time","value":"pub const fn with_time(Self, Time) -> PrimitiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Create a [`PrimitiveDateTime`] using the existing date and the provided [`Time`].","sig":null,"attributes":[{"value":"/ Create a [`PrimitiveDateTime`] using the existing date and the provided [`Time`].","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":40561,"byte_end":40646,"line_start":822,"line_end":822,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":40651,"byte_end":40654,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":40659,"byte_end":40670,"line_start":824,"line_end":824,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{date, datetime, time};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":40675,"byte_end":40722,"line_start":825,"line_end":825,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":40727,"byte_end":40742,"line_start":826,"line_end":826,"column_start":5,"column_end":20}},{"value":"/     date!(1970-01-01).with_time(time!(0:00)),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":40747,"byte_end":40796,"line_start":827,"line_end":827,"column_start":5,"column_end":54}},{"value":"/     datetime!(1970-01-01 0:00),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":40801,"byte_end":40836,"line_start":828,"line_end":828,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":40841,"byte_end":40847,"line_start":829,"line_end":829,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":40852,"byte_end":40859,"line_start":830,"line_end":830,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":41296,"byte_end":41304,"line_start":842,"line_end":842,"column_start":18,"column_end":26},"name":"with_hms","qualname":"<Date>::with_hms","value":"pub const fn with_hms(Self, u8, u8, u8)\n-> Result<PrimitiveDateTime, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","sig":null,"attributes":[{"value":"/ Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":40982,"byte_end":41074,"line_start":835,"line_end":835,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":41079,"byte_end":41082,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":41087,"byte_end":41098,"line_start":837,"line_end":837,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":41103,"byte_end":41132,"line_start":838,"line_end":838,"column_start":5,"column_end":34}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms(0, 0, 0).is_ok());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":41137,"byte_end":41198,"line_start":839,"line_end":839,"column_start":5,"column_end":66}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms(24, 0, 0).is_err());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":41203,"byte_end":41266,"line_start":840,"line_end":840,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":41271,"byte_end":41278,"line_start":841,"line_end":841,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":41907,"byte_end":41921,"line_start":861,"line_end":861,"column_start":18,"column_end":32},"name":"with_hms_milli","qualname":"<Date>::with_hms_milli","value":"pub const fn with_hms_milli(Self, u8, u8, u8, u16)\n-> Result<PrimitiveDateTime, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","sig":null,"attributes":[{"value":"/ Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":41575,"byte_end":41667,"line_start":854,"line_end":854,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":41672,"byte_end":41675,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":41680,"byte_end":41691,"line_start":856,"line_end":856,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":41696,"byte_end":41725,"line_start":857,"line_end":857,"column_start":5,"column_end":34}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_milli(0, 0, 0, 0).is_ok());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":41730,"byte_end":41800,"line_start":858,"line_end":858,"column_start":5,"column_end":75}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_milli(24, 0, 0, 0).is_err());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":41805,"byte_end":41877,"line_start":859,"line_end":859,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":41882,"byte_end":41889,"line_start":860,"line_end":860,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":42569,"byte_end":42583,"line_start":881,"line_end":881,"column_start":18,"column_end":32},"name":"with_hms_micro","qualname":"<Date>::with_hms_micro","value":"pub const fn with_hms_micro(Self, u8, u8, u8, u32)\n-> Result<PrimitiveDateTime, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","sig":null,"attributes":[{"value":"/ Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":42237,"byte_end":42329,"line_start":874,"line_end":874,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":42334,"byte_end":42337,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":42342,"byte_end":42353,"line_start":876,"line_end":876,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":42358,"byte_end":42387,"line_start":877,"line_end":877,"column_start":5,"column_end":34}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_micro(0, 0, 0, 0).is_ok());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":42392,"byte_end":42462,"line_start":878,"line_end":878,"column_start":5,"column_end":75}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_micro(24, 0, 0, 0).is_err());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":42467,"byte_end":42539,"line_start":879,"line_end":879,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":42544,"byte_end":42551,"line_start":880,"line_end":880,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":43229,"byte_end":43242,"line_start":901,"line_end":901,"column_start":18,"column_end":31},"name":"with_hms_nano","qualname":"<Date>::with_hms_nano","value":"pub const fn with_hms_nano(Self, u8, u8, u8, u32)\n-> Result<PrimitiveDateTime, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","sig":null,"attributes":[{"value":"/ Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":42899,"byte_end":42991,"line_start":894,"line_end":894,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":42996,"byte_end":42999,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":43004,"byte_end":43015,"line_start":896,"line_end":896,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":43020,"byte_end":43049,"line_start":897,"line_end":897,"column_start":5,"column_end":34}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_nano(0, 0, 0, 0).is_ok());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":43054,"byte_end":43123,"line_start":898,"line_end":898,"column_start":5,"column_end":74}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_nano(24, 0, 0, 0).is_err());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":43128,"byte_end":43199,"line_start":899,"line_end":899,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":43204,"byte_end":43211,"line_start":900,"line_end":900,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":43758,"byte_end":43769,"line_start":920,"line_end":920,"column_start":12,"column_end":23},"name":"format_into","qualname":"<Date>::format_into","value":"pub fn format_into<impl io::Write: io::Write,\n                   impl Formattable + ?Sized: Formattable +\n                   ?Sized>(Self, &mut impl io::Write,\n                           &impl Formattable + ?Sized)\n-> Result<usize, error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `Date` using the provided [format description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `Date` using the provided [format description](crate::format_description).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":43657,"byte_end":43746,"line_start":919,"line_end":919,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":44353,"byte_end":44359,"line_start":936,"line_end":936,"column_start":12,"column_end":18},"name":"format","qualname":"<Date>::format","value":"pub fn format<impl Formattable + ?Sized: Formattable +\n              ?Sized>(Self, &impl Formattable + ?Sized)\n-> Result<String, error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `Date` using the provided [format description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `Date` using the provided [format description](crate::format_description).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":43978,"byte_end":44067,"line_start":928,"line_end":928,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":44072,"byte_end":44075,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":44080,"byte_end":44091,"line_start":930,"line_end":930,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::date};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":44096,"byte_end":44147,"line_start":931,"line_end":931,"column_start":5,"column_end":56}},{"value":"/ let format = format_description::parse(\"[year]-[month]-[day]\")?;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":44152,"byte_end":44220,"line_start":932,"line_end":932,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(date!(2020 - 01 - 02).format(&format)?, \"2020-01-02\");","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":44225,"byte_end":44294,"line_start":933,"line_end":933,"column_start":5,"column_end":74}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":44299,"byte_end":44329,"line_start":934,"line_end":934,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":44334,"byte_end":44341,"line_start":935,"line_end":935,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1605},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":48141,"byte_end":48149,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"Duration","qualname":"::duration::Duration","value":"Duration {  }","parent":null,"children":[{"krate":0,"index":1606},{"krate":0,"index":1607},{"krate":0,"index":1608}],"decl_id":null,"docs":" A span of time with nanosecond precision.","sig":null,"attributes":[{"value":"/ A span of time with nanosecond precision.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":47803,"byte_end":47848,"line_start":29,"line_end":29,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":47849,"byte_end":47852,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Each `Duration` is composed of a whole number of seconds and a fractional part represented in","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":47853,"byte_end":47950,"line_start":31,"line_end":31,"column_start":1,"column_end":98}},{"value":"/ nanoseconds.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":47951,"byte_end":47967,"line_start":32,"line_end":32,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":47968,"byte_end":47971,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ This implementation allows for negative durations, unlike [`core::time::Duration`].","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":47972,"byte_end":48059,"line_start":34,"line_end":34,"column_start":1,"column_end":88}}]},{"kind":"Const","id":{"krate":0,"index":192},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":48924,"byte_end":48928,"line_start":62,"line_end":62,"column_start":15,"column_end":19},"name":"ZERO","qualname":"::duration::Duration::ZERO","value":"Self","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" Equivalent to `0.seconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `0.seconds()`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":48736,"byte_end":48768,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":48773,"byte_end":48776,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":48781,"byte_end":48792,"line_start":58,"line_end":58,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":48797,"byte_end":48848,"line_start":59,"line_end":59,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::ZERO, 0.seconds());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":48853,"byte_end":48897,"line_start":60,"line_end":60,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":48902,"byte_end":48909,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":193},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":49162,"byte_end":49172,"line_start":70,"line_end":70,"column_start":15,"column_end":25},"name":"NANOSECOND","qualname":"::duration::Duration::NANOSECOND","value":"Self","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" Equivalent to `1.nanoseconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.nanoseconds()`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":48960,"byte_end":48996,"line_start":64,"line_end":64,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":49001,"byte_end":49004,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":49009,"byte_end":49020,"line_start":66,"line_end":66,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":49025,"byte_end":49076,"line_start":67,"line_end":67,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::NANOSECOND, 1.nanoseconds());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":49081,"byte_end":49135,"line_start":68,"line_end":68,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":49140,"byte_end":49147,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":194},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":49413,"byte_end":49424,"line_start":78,"line_end":78,"column_start":15,"column_end":26},"name":"MICROSECOND","qualname":"::duration::Duration::MICROSECOND","value":"Self","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" Equivalent to `1.microseconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.microseconds()`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":49208,"byte_end":49245,"line_start":72,"line_end":72,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":49250,"byte_end":49253,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":49258,"byte_end":49269,"line_start":74,"line_end":74,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":49274,"byte_end":49325,"line_start":75,"line_end":75,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::MICROSECOND, 1.microseconds());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":49330,"byte_end":49386,"line_start":76,"line_end":76,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":49391,"byte_end":49398,"line_start":77,"line_end":77,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":195},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":49666,"byte_end":49677,"line_start":86,"line_end":86,"column_start":15,"column_end":26},"name":"MILLISECOND","qualname":"::duration::Duration::MILLISECOND","value":"Self","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" Equivalent to `1.milliseconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.milliseconds()`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":49461,"byte_end":49498,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":49503,"byte_end":49506,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":49511,"byte_end":49522,"line_start":82,"line_end":82,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":49527,"byte_end":49578,"line_start":83,"line_end":83,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::MILLISECOND, 1.milliseconds());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":49583,"byte_end":49639,"line_start":84,"line_end":84,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":49644,"byte_end":49651,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":196},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":49904,"byte_end":49910,"line_start":94,"line_end":94,"column_start":15,"column_end":21},"name":"SECOND","qualname":"::duration::Duration::SECOND","value":"Self","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" Equivalent to `1.seconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.seconds()`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":49714,"byte_end":49746,"line_start":88,"line_end":88,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":49751,"byte_end":49754,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":49759,"byte_end":49770,"line_start":90,"line_end":90,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":49775,"byte_end":49826,"line_start":91,"line_end":91,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::SECOND, 1.seconds());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":49831,"byte_end":49877,"line_start":92,"line_end":92,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":49882,"byte_end":49889,"line_start":93,"line_end":93,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":197},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":50132,"byte_end":50138,"line_start":102,"line_end":102,"column_start":15,"column_end":21},"name":"MINUTE","qualname":"::duration::Duration::MINUTE","value":"Self","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" Equivalent to `1.minutes()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.minutes()`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":49942,"byte_end":49974,"line_start":96,"line_end":96,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":49979,"byte_end":49982,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":49987,"byte_end":49998,"line_start":98,"line_end":98,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":50003,"byte_end":50054,"line_start":99,"line_end":99,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::MINUTE, 1.minutes());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":50059,"byte_end":50105,"line_start":100,"line_end":100,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":50110,"byte_end":50117,"line_start":101,"line_end":101,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":198},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":50354,"byte_end":50358,"line_start":110,"line_end":110,"column_start":15,"column_end":19},"name":"HOUR","qualname":"::duration::Duration::HOUR","value":"Self","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" Equivalent to `1.hours()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.hours()`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":50170,"byte_end":50200,"line_start":104,"line_end":104,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":50205,"byte_end":50208,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":50213,"byte_end":50224,"line_start":106,"line_end":106,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":50229,"byte_end":50280,"line_start":107,"line_end":107,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::HOUR, 1.hours());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":50285,"byte_end":50327,"line_start":108,"line_end":108,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":50332,"byte_end":50339,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":199},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":50569,"byte_end":50572,"line_start":118,"line_end":118,"column_start":15,"column_end":18},"name":"DAY","qualname":"::duration::Duration::DAY","value":"Self","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" Equivalent to `1.days()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.days()`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":50388,"byte_end":50417,"line_start":112,"line_end":112,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":50422,"byte_end":50425,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":50430,"byte_end":50441,"line_start":114,"line_end":114,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":50446,"byte_end":50497,"line_start":115,"line_end":115,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::DAY, 1.days());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":50502,"byte_end":50542,"line_start":116,"line_end":116,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":50547,"byte_end":50554,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":200},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":50785,"byte_end":50789,"line_start":126,"line_end":126,"column_start":15,"column_end":19},"name":"WEEK","qualname":"::duration::Duration::WEEK","value":"Self","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" Equivalent to `1.weeks()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.weeks()`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":50601,"byte_end":50631,"line_start":120,"line_end":120,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":50636,"byte_end":50639,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":50644,"byte_end":50655,"line_start":122,"line_end":122,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":50660,"byte_end":50711,"line_start":123,"line_end":123,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::WEEK, 1.weeks());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":50716,"byte_end":50758,"line_start":124,"line_end":124,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":50763,"byte_end":50770,"line_start":125,"line_end":125,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":201},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":50929,"byte_end":50932,"line_start":129,"line_end":129,"column_start":15,"column_end":18},"name":"MIN","qualname":"::duration::Duration::MIN","value":"Self","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" The minimum possible duration. Adding any negative duration to this will cause an overflow.\n","sig":null,"attributes":[{"value":"/ The minimum possible duration. Adding any negative duration to this will cause an overflow.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":50819,"byte_end":50914,"line_start":128,"line_end":128,"column_start":5,"column_end":100}}]},{"kind":"Const","id":{"krate":0,"index":202},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":51101,"byte_end":51104,"line_start":132,"line_end":132,"column_start":15,"column_end":18},"name":"MAX","qualname":"::duration::Duration::MAX","value":"Self","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" The maximum possible duration. Adding any positive duration to this will cause an overflow.\n","sig":null,"attributes":[{"value":"/ The maximum possible duration. Adding any positive duration to this will cause an overflow.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":50991,"byte_end":51086,"line_start":131,"line_end":131,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":51437,"byte_end":51444,"line_start":143,"line_end":143,"column_start":18,"column_end":25},"name":"is_zero","qualname":"<Duration>::is_zero","value":"pub const fn is_zero(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a duration is exactly zero.","sig":null,"attributes":[{"value":"/ Check if a duration is exactly zero.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":51214,"byte_end":51254,"line_start":136,"line_end":136,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":51259,"byte_end":51262,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":51267,"byte_end":51278,"line_start":138,"line_end":138,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":51283,"byte_end":51322,"line_start":139,"line_end":139,"column_start":5,"column_end":44}},{"value":"/ assert!(0.seconds().is_zero());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":51327,"byte_end":51362,"line_start":140,"line_end":140,"column_start":5,"column_end":40}},{"value":"/ assert!(!1.nanoseconds().is_zero());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":51367,"byte_end":51407,"line_start":141,"line_end":141,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":51412,"byte_end":51419,"line_start":142,"line_end":142,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":51794,"byte_end":51805,"line_start":155,"line_end":155,"column_start":18,"column_end":29},"name":"is_negative","qualname":"<Duration>::is_negative","value":"pub const fn is_negative(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a duration is negative.","sig":null,"attributes":[{"value":"/ Check if a duration is negative.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":51523,"byte_end":51559,"line_start":147,"line_end":147,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":51564,"byte_end":51567,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":51572,"byte_end":51583,"line_start":149,"line_end":149,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":51588,"byte_end":51627,"line_start":150,"line_end":150,"column_start":5,"column_end":44}},{"value":"/ assert!((-1).seconds().is_negative());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":51632,"byte_end":51674,"line_start":151,"line_end":151,"column_start":5,"column_end":47}},{"value":"/ assert!(!0.seconds().is_negative());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":51679,"byte_end":51719,"line_start":152,"line_end":152,"column_start":5,"column_end":45}},{"value":"/ assert!(!1.seconds().is_negative());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":51724,"byte_end":51764,"line_start":153,"line_end":153,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":51769,"byte_end":51776,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":52153,"byte_end":52164,"line_start":167,"line_end":167,"column_start":18,"column_end":29},"name":"is_positive","qualname":"<Duration>::is_positive","value":"pub const fn is_positive(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a duration is positive.","sig":null,"attributes":[{"value":"/ Check if a duration is positive.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":51882,"byte_end":51918,"line_start":159,"line_end":159,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":51923,"byte_end":51926,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":51931,"byte_end":51942,"line_start":161,"line_end":161,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":51947,"byte_end":51986,"line_start":162,"line_end":162,"column_start":5,"column_end":44}},{"value":"/ assert!(1.seconds().is_positive());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":51991,"byte_end":52030,"line_start":163,"line_end":163,"column_start":5,"column_end":44}},{"value":"/ assert!(!0.seconds().is_positive());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":52035,"byte_end":52075,"line_start":164,"line_end":164,"column_start":5,"column_end":45}},{"value":"/ assert!(!(-1).seconds().is_positive());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":52080,"byte_end":52123,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":52128,"byte_end":52135,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":52676,"byte_end":52679,"line_start":183,"line_end":183,"column_start":18,"column_end":21},"name":"abs","qualname":"<Duration>::abs","value":"pub const fn abs(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the absolute value of the duration.","sig":null,"attributes":[{"value":"/ Get the absolute value of the duration.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":52287,"byte_end":52330,"line_start":173,"line_end":173,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":52335,"byte_end":52338,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ This method saturates the returned value if it would otherwise overflow.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":52343,"byte_end":52419,"line_start":175,"line_end":175,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":52424,"byte_end":52427,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":52432,"byte_end":52443,"line_start":177,"line_end":177,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":52448,"byte_end":52487,"line_start":178,"line_end":178,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.seconds().abs(), 1.seconds());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":52492,"byte_end":52539,"line_start":179,"line_end":179,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(0.seconds().abs(), 0.seconds());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":52544,"byte_end":52591,"line_start":180,"line_end":180,"column_start":5,"column_end":52}},{"value":"/ assert_eq!((-1).seconds().abs(), 1.seconds());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":52596,"byte_end":52646,"line_start":181,"line_end":181,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":52651,"byte_end":52658,"line_start":182,"line_end":182,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":53987,"byte_end":53990,"line_start":215,"line_end":215,"column_start":18,"column_end":21},"name":"new","qualname":"<Duration>::new","value":"pub const fn new(i64, i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the provided seconds and nanoseconds. If nanoseconds is at\n least ±10<sup>9</sup>, it will wrap to the number of seconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the provided seconds and nanoseconds. If nanoseconds is at","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":53537,"byte_end":53628,"line_start":206,"line_end":206,"column_start":5,"column_end":96}},{"value":"/ least ±10<sup>9</sup>, it will wrap to the number of seconds.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":53633,"byte_end":53699,"line_start":207,"line_end":207,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":53704,"byte_end":53707,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":53712,"byte_end":53723,"line_start":209,"line_end":209,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":53728,"byte_end":53779,"line_start":210,"line_end":210,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::new(1, 0), 1.seconds());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":53784,"byte_end":53833,"line_start":211,"line_end":211,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(Duration::new(-1, 0), (-1).seconds());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":53838,"byte_end":53891,"line_start":212,"line_end":212,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(Duration::new(1, 2_000_000_000), 3.seconds());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":53896,"byte_end":53957,"line_start":213,"line_end":213,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":53962,"byte_end":53969,"line_start":214,"line_end":214,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":54726,"byte_end":54731,"line_start":237,"line_end":237,"column_start":18,"column_end":23},"name":"weeks","qualname":"<Duration>::weeks","value":"pub const fn weeks(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of weeks. Equivalent to\n `Duration::seconds(weeks * 604_800)`.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of weeks. Equivalent to","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":54438,"byte_end":54511,"line_start":230,"line_end":230,"column_start":5,"column_end":78}},{"value":"/ `Duration::seconds(weeks * 604_800)`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":54516,"byte_end":54557,"line_start":231,"line_end":231,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":54562,"byte_end":54565,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":54570,"byte_end":54581,"line_start":233,"line_end":233,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":54586,"byte_end":54637,"line_start":234,"line_end":234,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::weeks(1), 604_800.seconds());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":54642,"byte_end":54696,"line_start":235,"line_end":235,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":54701,"byte_end":54708,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":55087,"byte_end":55091,"line_start":248,"line_end":248,"column_start":18,"column_end":22},"name":"days","qualname":"<Duration>::days","value":"pub const fn days(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of days. Equivalent to\n `Duration::seconds(days * 86_400)`.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of days. Equivalent to","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":54804,"byte_end":54876,"line_start":241,"line_end":241,"column_start":5,"column_end":77}},{"value":"/ `Duration::seconds(days * 86_400)`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":54881,"byte_end":54920,"line_start":242,"line_end":242,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":54925,"byte_end":54928,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":54933,"byte_end":54944,"line_start":244,"line_end":244,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":54949,"byte_end":55000,"line_start":245,"line_end":245,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::days(1), 86_400.seconds());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":55005,"byte_end":55057,"line_start":246,"line_end":246,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":55062,"byte_end":55069,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":55445,"byte_end":55450,"line_start":259,"line_end":259,"column_start":18,"column_end":23},"name":"hours","qualname":"<Duration>::hours","value":"pub const fn hours(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of hours. Equivalent to\n `Duration::seconds(hours * 3_600)`.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of hours. Equivalent to","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":55161,"byte_end":55234,"line_start":252,"line_end":252,"column_start":5,"column_end":78}},{"value":"/ `Duration::seconds(hours * 3_600)`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":55239,"byte_end":55278,"line_start":253,"line_end":253,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":55283,"byte_end":55286,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":55291,"byte_end":55302,"line_start":255,"line_end":255,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":55307,"byte_end":55358,"line_start":256,"line_end":256,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::hours(1), 3_600.seconds());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":55363,"byte_end":55415,"line_start":257,"line_end":257,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":55420,"byte_end":55427,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":55805,"byte_end":55812,"line_start":270,"line_end":270,"column_start":18,"column_end":25},"name":"minutes","qualname":"<Duration>::minutes","value":"pub const fn minutes(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of minutes. Equivalent to\n `Duration::seconds(minutes * 60)`.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of minutes. Equivalent to","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":55521,"byte_end":55596,"line_start":263,"line_end":263,"column_start":5,"column_end":80}},{"value":"/ `Duration::seconds(minutes * 60)`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":55601,"byte_end":55639,"line_start":264,"line_end":264,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":55644,"byte_end":55647,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":55652,"byte_end":55663,"line_start":266,"line_end":266,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":55668,"byte_end":55719,"line_start":267,"line_end":267,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::minutes(1), 60.seconds());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":55724,"byte_end":55775,"line_start":268,"line_end":268,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":55780,"byte_end":55787,"line_start":269,"line_end":269,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":56119,"byte_end":56126,"line_start":280,"line_end":280,"column_start":18,"column_end":25},"name":"seconds","qualname":"<Duration>::seconds","value":"pub const fn seconds(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of seconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of seconds.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":55884,"byte_end":55945,"line_start":274,"line_end":274,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":55950,"byte_end":55953,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":55958,"byte_end":55969,"line_start":276,"line_end":276,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":55974,"byte_end":56025,"line_start":277,"line_end":277,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::seconds(1), 1_000.milliseconds());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":56030,"byte_end":56089,"line_start":278,"line_end":278,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":56094,"byte_end":56101,"line_start":279,"line_end":279,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":56521,"byte_end":56532,"line_start":291,"line_end":291,"column_start":12,"column_end":23},"name":"seconds_f64","qualname":"<Duration>::seconds_f64","value":"pub fn seconds_f64(f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Duration` from the specified number of seconds represented as `f64`.","sig":null,"attributes":[{"value":"/ Creates a new `Duration` from the specified number of seconds represented as `f64`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":56202,"byte_end":56289,"line_start":284,"line_end":284,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":56294,"byte_end":56297,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":56302,"byte_end":56313,"line_start":286,"line_end":286,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":56318,"byte_end":56369,"line_start":287,"line_end":287,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::seconds_f64(0.5), 0.5.seconds());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":56374,"byte_end":56432,"line_start":288,"line_end":288,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(Duration::seconds_f64(-0.5), -0.5.seconds());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":56437,"byte_end":56497,"line_start":289,"line_end":289,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":56502,"byte_end":56509,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":56971,"byte_end":56982,"line_start":302,"line_end":302,"column_start":12,"column_end":23},"name":"seconds_f32","qualname":"<Duration>::seconds_f32","value":"pub fn seconds_f32(f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Duration` from the specified number of seconds represented as `f32`.","sig":null,"attributes":[{"value":"/ Creates a new `Duration` from the specified number of seconds represented as `f32`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":56650,"byte_end":56737,"line_start":295,"line_end":295,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":56742,"byte_end":56745,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":56750,"byte_end":56761,"line_start":297,"line_end":297,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":56766,"byte_end":56817,"line_start":298,"line_end":298,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::seconds_f32(0.5), 0.5.seconds());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":56822,"byte_end":56880,"line_start":299,"line_end":299,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(Duration::seconds_f32(-0.5), (-0.5).seconds());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":56885,"byte_end":56947,"line_start":300,"line_end":300,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":56952,"byte_end":56959,"line_start":301,"line_end":301,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":57418,"byte_end":57430,"line_start":313,"line_end":313,"column_start":18,"column_end":30},"name":"milliseconds","qualname":"<Duration>::milliseconds","value":"pub const fn milliseconds(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of milliseconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of milliseconds.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":57100,"byte_end":57166,"line_start":306,"line_end":306,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":57171,"byte_end":57174,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":57179,"byte_end":57190,"line_start":308,"line_end":308,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":57195,"byte_end":57246,"line_start":309,"line_end":309,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::milliseconds(1), 1_000.microseconds());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":57251,"byte_end":57315,"line_start":310,"line_end":310,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(Duration::milliseconds(-1), (-1_000).microseconds());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":57320,"byte_end":57388,"line_start":311,"line_end":311,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":57393,"byte_end":57400,"line_start":312,"line_end":312,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":57915,"byte_end":57927,"line_start":327,"line_end":327,"column_start":18,"column_end":30},"name":"microseconds","qualname":"<Duration>::microseconds","value":"pub const fn microseconds(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of microseconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of microseconds.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":57599,"byte_end":57665,"line_start":320,"line_end":320,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":57670,"byte_end":57673,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":57678,"byte_end":57689,"line_start":322,"line_end":322,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":57694,"byte_end":57745,"line_start":323,"line_end":323,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::microseconds(1), 1_000.nanoseconds());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":57750,"byte_end":57813,"line_start":324,"line_end":324,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(Duration::microseconds(-1), (-1_000).nanoseconds());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":57818,"byte_end":57885,"line_start":325,"line_end":325,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":57890,"byte_end":57897,"line_start":326,"line_end":326,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":58423,"byte_end":58434,"line_start":341,"line_end":341,"column_start":18,"column_end":29},"name":"nanoseconds","qualname":"<Duration>::nanoseconds","value":"pub const fn nanoseconds(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of nanoseconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of nanoseconds.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":58100,"byte_end":58165,"line_start":334,"line_end":334,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":58170,"byte_end":58173,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":58178,"byte_end":58189,"line_start":336,"line_end":336,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":58194,"byte_end":58245,"line_start":337,"line_end":337,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::nanoseconds(1), 1.microseconds() / 1_000);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":58250,"byte_end":58317,"line_start":338,"line_end":338,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(Duration::nanoseconds(-1), (-1).microseconds() / 1_000);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":58322,"byte_end":58393,"line_start":339,"line_end":339,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":58398,"byte_end":58405,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":59433,"byte_end":59444,"line_start":370,"line_end":370,"column_start":18,"column_end":29},"name":"whole_weeks","qualname":"<Duration>::whole_weeks","value":"pub const fn whole_weeks(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole weeks in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole weeks in the duration.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":59088,"byte_end":59138,"line_start":361,"line_end":361,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":59143,"byte_end":59146,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":59151,"byte_end":59162,"line_start":363,"line_end":363,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":59167,"byte_end":59206,"line_start":364,"line_end":364,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.weeks().whole_weeks(), 1);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":59211,"byte_end":59254,"line_start":365,"line_end":365,"column_start":5,"column_end":48}},{"value":"/ assert_eq!((-1).weeks().whole_weeks(), -1);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":59259,"byte_end":59306,"line_start":366,"line_end":366,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(6.days().whole_weeks(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":59311,"byte_end":59353,"line_start":367,"line_end":367,"column_start":5,"column_end":47}},{"value":"/ assert_eq!((-6).days().whole_weeks(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":59358,"byte_end":59403,"line_start":368,"line_end":368,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":59408,"byte_end":59415,"line_start":369,"line_end":369,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":59852,"byte_end":59862,"line_start":383,"line_end":383,"column_start":18,"column_end":28},"name":"whole_days","qualname":"<Duration>::whole_days","value":"pub const fn whole_days(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole days in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole days in the duration.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":59510,"byte_end":59559,"line_start":374,"line_end":374,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":59564,"byte_end":59567,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":59572,"byte_end":59583,"line_start":376,"line_end":376,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":59588,"byte_end":59627,"line_start":377,"line_end":377,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.days().whole_days(), 1);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":59632,"byte_end":59673,"line_start":378,"line_end":378,"column_start":5,"column_end":46}},{"value":"/ assert_eq!((-1).days().whole_days(), -1);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":59678,"byte_end":59723,"line_start":379,"line_end":379,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(23.hours().whole_days(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":59728,"byte_end":59771,"line_start":380,"line_end":380,"column_start":5,"column_end":48}},{"value":"/ assert_eq!((-23).hours().whole_days(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":59776,"byte_end":59822,"line_start":381,"line_end":381,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":59827,"byte_end":59834,"line_start":382,"line_end":382,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":60280,"byte_end":60291,"line_start":396,"line_end":396,"column_start":18,"column_end":29},"name":"whole_hours","qualname":"<Duration>::whole_hours","value":"pub const fn whole_hours(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole hours in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole hours in the duration.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":59927,"byte_end":59977,"line_start":387,"line_end":387,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":59982,"byte_end":59985,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":59990,"byte_end":60001,"line_start":389,"line_end":389,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":60006,"byte_end":60045,"line_start":390,"line_end":390,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.hours().whole_hours(), 1);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":60050,"byte_end":60093,"line_start":391,"line_end":391,"column_start":5,"column_end":48}},{"value":"/ assert_eq!((-1).hours().whole_hours(), -1);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":60098,"byte_end":60145,"line_start":392,"line_end":392,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(59.minutes().whole_hours(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":60150,"byte_end":60196,"line_start":393,"line_end":393,"column_start":5,"column_end":51}},{"value":"/ assert_eq!((-59).minutes().whole_hours(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":60201,"byte_end":60250,"line_start":394,"line_end":394,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":60255,"byte_end":60262,"line_start":395,"line_end":395,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":60722,"byte_end":60735,"line_start":409,"line_end":409,"column_start":18,"column_end":31},"name":"whole_minutes","qualname":"<Duration>::whole_minutes","value":"pub const fn whole_minutes(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole minutes in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole minutes in the duration.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":60355,"byte_end":60407,"line_start":400,"line_end":400,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":60412,"byte_end":60415,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":60420,"byte_end":60431,"line_start":402,"line_end":402,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":60436,"byte_end":60475,"line_start":403,"line_end":403,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.minutes().whole_minutes(), 1);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":60480,"byte_end":60527,"line_start":404,"line_end":404,"column_start":5,"column_end":52}},{"value":"/ assert_eq!((-1).minutes().whole_minutes(), -1);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":60532,"byte_end":60583,"line_start":405,"line_end":405,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(59.seconds().whole_minutes(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":60588,"byte_end":60636,"line_start":406,"line_end":406,"column_start":5,"column_end":53}},{"value":"/ assert_eq!((-59).seconds().whole_minutes(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":60641,"byte_end":60692,"line_start":407,"line_end":407,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":60697,"byte_end":60704,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":61164,"byte_end":61177,"line_start":422,"line_end":422,"column_start":18,"column_end":31},"name":"whole_seconds","qualname":"<Duration>::whole_seconds","value":"pub const fn whole_seconds(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole seconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole seconds in the duration.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":60796,"byte_end":60848,"line_start":413,"line_end":413,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":60853,"byte_end":60856,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":60861,"byte_end":60872,"line_start":415,"line_end":415,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":60877,"byte_end":60916,"line_start":416,"line_end":416,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.seconds().whole_seconds(), 1);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":60921,"byte_end":60968,"line_start":417,"line_end":417,"column_start":5,"column_end":52}},{"value":"/ assert_eq!((-1).seconds().whole_seconds(), -1);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":60973,"byte_end":61024,"line_start":418,"line_end":418,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(1.minutes().whole_seconds(), 60);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":61029,"byte_end":61077,"line_start":419,"line_end":419,"column_start":5,"column_end":53}},{"value":"/ assert_eq!((-1).minutes().whole_seconds(), -60);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":61082,"byte_end":61134,"line_start":420,"line_end":420,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":61139,"byte_end":61146,"line_start":421,"line_end":421,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":61492,"byte_end":61506,"line_start":433,"line_end":433,"column_start":12,"column_end":26},"name":"as_seconds_f64","qualname":"<Duration>::as_seconds_f64","value":"pub fn as_seconds_f64(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of fractional seconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of fractional seconds in the duration.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":61225,"byte_end":61282,"line_start":426,"line_end":426,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":61287,"byte_end":61290,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":61295,"byte_end":61306,"line_start":428,"line_end":428,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":61311,"byte_end":61350,"line_start":429,"line_end":429,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.5.seconds().as_seconds_f64(), 1.5);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":61355,"byte_end":61407,"line_start":430,"line_end":430,"column_start":5,"column_end":57}},{"value":"/ assert_eq!((-1.5).seconds().as_seconds_f64(), -1.5);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":61412,"byte_end":61468,"line_start":431,"line_end":431,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":61473,"byte_end":61480,"line_start":432,"line_end":432,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":61871,"byte_end":61885,"line_start":444,"line_end":444,"column_start":12,"column_end":26},"name":"as_seconds_f32","qualname":"<Duration>::as_seconds_f32","value":"pub fn as_seconds_f32(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Get the number of fractional seconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of fractional seconds in the duration.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":61604,"byte_end":61661,"line_start":437,"line_end":437,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":61666,"byte_end":61669,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":61674,"byte_end":61685,"line_start":439,"line_end":439,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":61690,"byte_end":61729,"line_start":440,"line_end":440,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.5.seconds().as_seconds_f32(), 1.5);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":61734,"byte_end":61786,"line_start":441,"line_end":441,"column_start":5,"column_end":57}},{"value":"/ assert_eq!((-1.5).seconds().as_seconds_f32(), -1.5);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":61791,"byte_end":61847,"line_start":442,"line_end":442,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":61852,"byte_end":61859,"line_start":443,"line_end":443,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":62392,"byte_end":62410,"line_start":457,"line_end":457,"column_start":18,"column_end":36},"name":"whole_milliseconds","qualname":"<Duration>::whole_milliseconds","value":"pub const fn whole_milliseconds(Self) -> i128","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole milliseconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole milliseconds in the duration.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":61983,"byte_end":62040,"line_start":448,"line_end":448,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":62045,"byte_end":62048,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":62053,"byte_end":62064,"line_start":450,"line_end":450,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":62069,"byte_end":62108,"line_start":451,"line_end":451,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.seconds().whole_milliseconds(), 1_000);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":62113,"byte_end":62169,"line_start":452,"line_end":452,"column_start":5,"column_end":61}},{"value":"/ assert_eq!((-1).seconds().whole_milliseconds(), -1_000);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":62174,"byte_end":62234,"line_start":453,"line_end":453,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(1.milliseconds().whole_milliseconds(), 1);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":62239,"byte_end":62296,"line_start":454,"line_end":454,"column_start":5,"column_end":62}},{"value":"/ assert_eq!((-1).milliseconds().whole_milliseconds(), -1);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":62301,"byte_end":62362,"line_start":455,"line_end":455,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":62367,"byte_end":62374,"line_start":456,"line_end":456,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":62933,"byte_end":62952,"line_start":471,"line_end":471,"column_start":18,"column_end":37},"name":"subsec_milliseconds","qualname":"<Duration>::subsec_milliseconds","value":"pub const fn subsec_milliseconds(Self) -> i16","parent":null,"children":[],"decl_id":null,"docs":" Get the number of milliseconds past the number of whole seconds.","sig":null,"attributes":[{"value":"/ Get the number of milliseconds past the number of whole seconds.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":62514,"byte_end":62582,"line_start":461,"line_end":461,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":62587,"byte_end":62590,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ Always in the range `-1_000..1_000`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":62595,"byte_end":62635,"line_start":463,"line_end":463,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":62640,"byte_end":62643,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":62648,"byte_end":62659,"line_start":465,"line_end":465,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":62664,"byte_end":62703,"line_start":466,"line_end":466,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.4.seconds().subsec_milliseconds(), 400);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":62708,"byte_end":62765,"line_start":467,"line_end":467,"column_start":5,"column_end":62}},{"value":"/ assert_eq!((-1.4).seconds().subsec_milliseconds(), -400);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":62770,"byte_end":62831,"line_start":468,"line_end":468,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":62836,"byte_end":62843,"line_start":469,"line_end":469,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":63442,"byte_end":63460,"line_start":484,"line_end":484,"column_start":18,"column_end":36},"name":"whole_microseconds","qualname":"<Duration>::whole_microseconds","value":"pub const fn whole_microseconds(Self) -> i128","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole microseconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole microseconds in the duration.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":63023,"byte_end":63080,"line_start":475,"line_end":475,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":63085,"byte_end":63088,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":63093,"byte_end":63104,"line_start":477,"line_end":477,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":63109,"byte_end":63148,"line_start":478,"line_end":478,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.milliseconds().whole_microseconds(), 1_000);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":63153,"byte_end":63214,"line_start":479,"line_end":479,"column_start":5,"column_end":66}},{"value":"/ assert_eq!((-1).milliseconds().whole_microseconds(), -1_000);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":63219,"byte_end":63284,"line_start":480,"line_end":480,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(1.microseconds().whole_microseconds(), 1);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":63289,"byte_end":63346,"line_start":481,"line_end":481,"column_start":5,"column_end":62}},{"value":"/ assert_eq!((-1).microseconds().whole_microseconds(), -1);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":63351,"byte_end":63412,"line_start":482,"line_end":482,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":63417,"byte_end":63424,"line_start":483,"line_end":483,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":63925,"byte_end":63944,"line_start":497,"line_end":497,"column_start":18,"column_end":37},"name":"subsec_microseconds","qualname":"<Duration>::subsec_microseconds","value":"pub const fn subsec_microseconds(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the number of microseconds past the number of whole seconds.","sig":null,"attributes":[{"value":"/ Get the number of microseconds past the number of whole seconds.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":63564,"byte_end":63632,"line_start":488,"line_end":488,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":63637,"byte_end":63640,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ Always in the range `-1_000_000..1_000_000`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":63645,"byte_end":63693,"line_start":490,"line_end":490,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":63698,"byte_end":63701,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":63706,"byte_end":63717,"line_start":492,"line_end":492,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":63722,"byte_end":63761,"line_start":493,"line_end":493,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.0004.seconds().subsec_microseconds(), 400);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":63766,"byte_end":63826,"line_start":494,"line_end":494,"column_start":5,"column_end":65}},{"value":"/ assert_eq!((-1.0004).seconds().subsec_microseconds(), -400);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":63831,"byte_end":63895,"line_start":495,"line_end":495,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":63900,"byte_end":63907,"line_start":496,"line_end":496,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":64410,"byte_end":64427,"line_start":510,"line_end":510,"column_start":18,"column_end":35},"name":"whole_nanoseconds","qualname":"<Duration>::whole_nanoseconds","value":"pub const fn whole_nanoseconds(Self) -> i128","parent":null,"children":[],"decl_id":null,"docs":" Get the number of nanoseconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of nanoseconds in the duration.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":64004,"byte_end":64054,"line_start":501,"line_end":501,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":64059,"byte_end":64062,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":64067,"byte_end":64078,"line_start":503,"line_end":503,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":64083,"byte_end":64122,"line_start":504,"line_end":504,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.microseconds().whole_nanoseconds(), 1_000);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":64127,"byte_end":64187,"line_start":505,"line_end":505,"column_start":5,"column_end":65}},{"value":"/ assert_eq!((-1).microseconds().whole_nanoseconds(), -1_000);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":64192,"byte_end":64256,"line_start":506,"line_end":506,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(1.nanoseconds().whole_nanoseconds(), 1);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":64261,"byte_end":64316,"line_start":507,"line_end":507,"column_start":5,"column_end":60}},{"value":"/ assert_eq!((-1).nanoseconds().whole_nanoseconds(), -1);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":64321,"byte_end":64380,"line_start":508,"line_end":508,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":64385,"byte_end":64392,"line_start":509,"line_end":509,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":64934,"byte_end":64952,"line_start":523,"line_end":523,"column_start":18,"column_end":36},"name":"subsec_nanoseconds","qualname":"<Duration>::subsec_nanoseconds","value":"pub const fn subsec_nanoseconds(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the number of nanoseconds past the number of whole seconds.","sig":null,"attributes":[{"value":"/ Get the number of nanoseconds past the number of whole seconds.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":64527,"byte_end":64594,"line_start":514,"line_end":514,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":64599,"byte_end":64602,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `-1_000_000_000..1_000_000_000`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":64607,"byte_end":64690,"line_start":516,"line_end":516,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":64695,"byte_end":64698,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":64703,"byte_end":64714,"line_start":518,"line_end":518,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":64719,"byte_end":64758,"line_start":519,"line_end":519,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.000_000_400.seconds().subsec_nanoseconds(), 400);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":64763,"byte_end":64829,"line_start":520,"line_end":520,"column_start":5,"column_end":71}},{"value":"/ assert_eq!((-1.000_000_400).seconds().subsec_nanoseconds(), -400);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":64834,"byte_end":64904,"line_start":521,"line_end":521,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":64909,"byte_end":64916,"line_start":522,"line_end":522,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":65469,"byte_end":65480,"line_start":537,"line_end":537,"column_start":18,"column_end":29},"name":"checked_add","qualname":"<Duration>::checked_add","value":"pub const fn checked_add(Self, Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + rhs`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + rhs`, returning `None` if an overflow occurred.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":65063,"byte_end":65131,"line_start":529,"line_end":529,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":65136,"byte_end":65139,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":65144,"byte_end":65155,"line_start":531,"line_end":531,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":65160,"byte_end":65211,"line_start":532,"line_end":532,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().checked_add(5.seconds()), Some(10.seconds()));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":65216,"byte_end":65289,"line_start":533,"line_end":533,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(Duration::MAX.checked_add(1.nanoseconds()), None);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":65294,"byte_end":65359,"line_start":534,"line_end":534,"column_start":5,"column_end":70}},{"value":"/ assert_eq!((-5).seconds().checked_add(5.seconds()), Some(0.seconds()));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":65364,"byte_end":65439,"line_start":535,"line_end":535,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":65444,"byte_end":65451,"line_start":536,"line_end":536,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":66519,"byte_end":66530,"line_start":560,"line_end":560,"column_start":18,"column_end":29},"name":"checked_sub","qualname":"<Duration>::checked_sub","value":"pub const fn checked_sub(Self, Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - rhs`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - rhs`, returning `None` if an overflow occurred.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":66110,"byte_end":66178,"line_start":552,"line_end":552,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":66183,"byte_end":66186,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":66191,"byte_end":66202,"line_start":554,"line_end":554,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":66207,"byte_end":66258,"line_start":555,"line_end":555,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().checked_sub(5.seconds()), Some(Duration::ZERO));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":66263,"byte_end":66338,"line_start":556,"line_end":556,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(Duration::MIN.checked_sub(1.nanoseconds()), None);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":66343,"byte_end":66408,"line_start":557,"line_end":557,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(5.seconds().checked_sub(10.seconds()), Some((-5).seconds()));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":66413,"byte_end":66489,"line_start":558,"line_end":558,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":66494,"byte_end":66501,"line_start":559,"line_end":559,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":67657,"byte_end":67668,"line_start":585,"line_end":585,"column_start":18,"column_end":29},"name":"checked_mul","qualname":"<Duration>::checked_mul","value":"pub const fn checked_mul(Self, i32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self * rhs`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self * rhs`, returning `None` if an overflow occurred.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":67160,"byte_end":67228,"line_start":575,"line_end":575,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":67233,"byte_end":67236,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":67241,"byte_end":67252,"line_start":577,"line_end":577,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":67257,"byte_end":67308,"line_start":578,"line_end":578,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().checked_mul(2), Some(10.seconds()));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":67313,"byte_end":67376,"line_start":579,"line_end":579,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(5.seconds().checked_mul(-2), Some((-10).seconds()));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":67381,"byte_end":67448,"line_start":580,"line_end":580,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(5.seconds().checked_mul(0), Some(0.seconds()));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":67453,"byte_end":67515,"line_start":581,"line_end":581,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(Duration::MAX.checked_mul(2), None);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":67520,"byte_end":67571,"line_start":582,"line_end":582,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::MIN.checked_mul(2), None);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":67576,"byte_end":67627,"line_start":583,"line_end":583,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":67632,"byte_end":67639,"line_start":584,"line_end":584,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":68546,"byte_end":68557,"line_start":605,"line_end":605,"column_start":18,"column_end":29},"name":"checked_div","qualname":"<Duration>::checked_div","value":"pub const fn checked_div(Self, i32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self / rhs`, returning `None` if `rhs == 0` or if the result would overflow.","sig":null,"attributes":[{"value":"/ Computes `self / rhs`, returning `None` if `rhs == 0` or if the result would overflow.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":68164,"byte_end":68254,"line_start":597,"line_end":597,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":68259,"byte_end":68262,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":68267,"byte_end":68278,"line_start":599,"line_end":599,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":68283,"byte_end":68322,"line_start":600,"line_end":600,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(10.seconds().checked_div(2), Some(5.seconds()));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":68327,"byte_end":68390,"line_start":601,"line_end":601,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(10.seconds().checked_div(-2), Some((-5).seconds()));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":68395,"byte_end":68462,"line_start":602,"line_end":602,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(1.seconds().checked_div(0), None);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":68467,"byte_end":68516,"line_start":603,"line_end":603,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":68521,"byte_end":68528,"line_start":604,"line_end":604,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":69587,"byte_end":69601,"line_start":628,"line_end":628,"column_start":18,"column_end":32},"name":"saturating_add","qualname":"<Duration>::saturating_add","value":"pub const fn saturating_add(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + rhs`, saturating if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + rhs`, saturating if an overflow occurred.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":69059,"byte_end":69121,"line_start":616,"line_end":616,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":69126,"byte_end":69129,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":69134,"byte_end":69145,"line_start":618,"line_end":618,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":69150,"byte_end":69201,"line_start":619,"line_end":619,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().saturating_add(5.seconds()), 10.seconds());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":69206,"byte_end":69276,"line_start":620,"line_end":620,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(Duration::MAX.saturating_add(1.nanoseconds()), Duration::MAX);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":69281,"byte_end":69358,"line_start":621,"line_end":621,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":69363,"byte_end":69378,"line_start":622,"line_end":622,"column_start":5,"column_end":20}},{"value":"/     Duration::MIN.saturating_add((-1).nanoseconds()),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":69383,"byte_end":69440,"line_start":623,"line_end":623,"column_start":5,"column_end":62}},{"value":"/     Duration::MIN","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":69445,"byte_end":69466,"line_start":624,"line_end":624,"column_start":5,"column_end":26}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":69471,"byte_end":69477,"line_start":625,"line_end":625,"column_start":5,"column_end":11}},{"value":"/ assert_eq!((-5).seconds().saturating_add(5.seconds()), Duration::ZERO);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":69482,"byte_end":69557,"line_start":626,"line_end":626,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":69562,"byte_end":69569,"line_start":627,"line_end":627,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":71069,"byte_end":71083,"line_start":667,"line_end":667,"column_start":18,"column_end":32},"name":"saturating_sub","qualname":"<Duration>::saturating_sub","value":"pub const fn saturating_sub(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - rhs`, saturating if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - rhs`, saturating if an overflow occurred.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":70541,"byte_end":70603,"line_start":655,"line_end":655,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":70608,"byte_end":70611,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":70616,"byte_end":70627,"line_start":657,"line_end":657,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":70632,"byte_end":70683,"line_start":658,"line_end":658,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().saturating_sub(5.seconds()), Duration::ZERO);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":70688,"byte_end":70760,"line_start":659,"line_end":659,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(Duration::MIN.saturating_sub(1.nanoseconds()), Duration::MIN);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":70765,"byte_end":70842,"line_start":660,"line_end":660,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":70847,"byte_end":70862,"line_start":661,"line_end":661,"column_start":5,"column_end":20}},{"value":"/     Duration::MAX.saturating_sub((-1).nanoseconds()),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":70867,"byte_end":70924,"line_start":662,"line_end":662,"column_start":5,"column_end":62}},{"value":"/     Duration::MAX","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":70929,"byte_end":70950,"line_start":663,"line_end":663,"column_start":5,"column_end":26}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":70955,"byte_end":70961,"line_start":664,"line_end":664,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(5.seconds().saturating_sub(10.seconds()), (-5).seconds());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":70966,"byte_end":71039,"line_start":665,"line_end":665,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":71044,"byte_end":71051,"line_start":666,"line_end":666,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":72670,"byte_end":72684,"line_start":706,"line_end":706,"column_start":18,"column_end":32},"name":"saturating_mul","qualname":"<Duration>::saturating_mul","value":"pub const fn saturating_mul(Self, i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self * rhs`, saturating if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self * rhs`, saturating if an overflow occurred.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":72023,"byte_end":72085,"line_start":694,"line_end":694,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":72090,"byte_end":72093,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":72098,"byte_end":72109,"line_start":696,"line_end":696,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":72114,"byte_end":72165,"line_start":697,"line_end":697,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().saturating_mul(2), 10.seconds());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":72170,"byte_end":72230,"line_start":698,"line_end":698,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(5.seconds().saturating_mul(-2), (-10).seconds());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":72235,"byte_end":72299,"line_start":699,"line_end":699,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(5.seconds().saturating_mul(0), Duration::ZERO);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":72304,"byte_end":72366,"line_start":700,"line_end":700,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(Duration::MAX.saturating_mul(2), Duration::MAX);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":72371,"byte_end":72434,"line_start":701,"line_end":701,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(Duration::MIN.saturating_mul(2), Duration::MIN);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":72439,"byte_end":72502,"line_start":702,"line_end":702,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(Duration::MAX.saturating_mul(-2), Duration::MIN);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":72507,"byte_end":72571,"line_start":703,"line_end":703,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(Duration::MIN.saturating_mul(-2), Duration::MAX);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":72576,"byte_end":72640,"line_start":704,"line_end":704,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":72645,"byte_end":72652,"line_start":705,"line_end":705,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":73750,"byte_end":73757,"line_start":733,"line_end":733,"column_start":12,"column_end":19},"name":"time_fn","qualname":"<Duration>::time_fn","value":"pub fn time_fn<T, impl FnOnce() -> T: FnOnce() -> T>(impl FnOnce() -> T)\n-> (Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Runs a closure, returning the duration of time it took to run. The return value of the\n closure is provided in the second part of the tuple.\n","sig":null,"attributes":[{"value":"/ Runs a closure, returning the duration of time it took to run. The return value of the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":73559,"byte_end":73649,"line_start":730,"line_end":730,"column_start":5,"column_end":95}},{"value":"/ closure is provided in the second part of the tuple.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":73654,"byte_end":73710,"line_start":731,"line_end":731,"column_start":5,"column_end":61}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":73715,"byte_end":73738,"line_start":732,"line_end":732,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":326},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/mod.rs","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":348},{"krate":0,"index":366},{"krate":0,"index":381},{"krate":0,"index":408},{"krate":0,"index":426},{"krate":0,"index":448},{"krate":0,"index":463},{"krate":0,"index":466},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":475},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":481},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":1828},{"krate":0,"index":1850},{"krate":0,"index":487},{"krate":0,"index":489}],"decl_id":null,"docs":" Various error types returned by methods in the time crate.\n","sig":null,"attributes":[{"value":"/ Various error types returned by methods in the time crate.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/mod.rs","byte_start":81764,"byte_end":81826,"line_start":1,"line_end":1,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1722},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/component_range.rs","byte_start":86415,"byte_end":86429,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"ComponentRange","qualname":"::error::component_range::ComponentRange","value":"ComponentRange {  }","parent":null,"children":[{"krate":0,"index":1723},{"krate":0,"index":1724},{"krate":0,"index":1725},{"krate":0,"index":1726},{"krate":0,"index":1727}],"decl_id":null,"docs":" An error type indicating that a component provided to a method was out of range, causing a\n failure.\n","sig":null,"attributes":[{"value":"/ An error type indicating that a component provided to a method was out of range, causing a","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/component_range.rs","byte_start":86146,"byte_end":86240,"line_start":8,"line_end":8,"column_start":1,"column_end":95}},{"value":"/ failure.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/component_range.rs","byte_start":86241,"byte_end":86253,"line_start":9,"line_end":9,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/component_range.rs","byte_start":86951,"byte_end":86955,"line_start":28,"line_end":28,"column_start":18,"column_end":22},"name":"name","qualname":"<ComponentRange>::name","value":"pub const fn name(Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Obtain the name of the component whose value was out of range.\n","sig":null,"attributes":[{"value":"/ Obtain the name of the component whose value was out of range.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/component_range.rs","byte_start":86867,"byte_end":86933,"line_start":27,"line_end":27,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/component_range.rs","byte_start":87199,"byte_end":87213,"line_start":34,"line_end":34,"column_start":18,"column_end":32},"name":"is_conditional","qualname":"<ComponentRange>::is_conditional","value":"pub const fn is_conditional(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the value's permitted range is conditional, i.e. whether an input with this\n value could have succeeded if the values of other components were different.\n","sig":null,"attributes":[{"value":"/ Whether the value's permitted range is conditional, i.e. whether an input with this","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/component_range.rs","byte_start":87009,"byte_end":87096,"line_start":32,"line_end":32,"column_start":5,"column_end":92}},{"value":"/ value could have succeeded if the values of other components were different.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/component_range.rs","byte_start":87101,"byte_end":87181,"line_start":33,"line_end":33,"column_start":5,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":1743},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/conversion_range.rs","byte_start":89042,"byte_end":89057,"line_start":11,"line_end":11,"column_start":12,"column_end":27},"name":"ConversionRange","qualname":"::error::conversion_range::ConversionRange","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error type indicating that a conversion failed because the target type could not store the\n initial value.\n","sig":null,"attributes":[{"value":"/ An error type indicating that a conversion failed because the target type could not store the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/conversion_range.rs","byte_start":88869,"byte_end":88966,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ initial value.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/conversion_range.rs","byte_start":88967,"byte_end":88985,"line_start":9,"line_end":9,"column_start":1,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":1756},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/different_variant.rs","byte_start":90024,"byte_end":90040,"line_start":9,"line_end":9,"column_start":12,"column_end":28},"name":"DifferentVariant","qualname":"::error::different_variant::DifferentVariant","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error type indicating that a [`TryFrom`](core::convert::TryFrom) call failed because the\n original value was of a different variant.\n","sig":null,"attributes":[{"value":"/ An error type indicating that a [`TryFrom`](core::convert::TryFrom) call failed because the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/different_variant.rs","byte_start":89825,"byte_end":89920,"line_start":6,"line_end":6,"column_start":1,"column_end":96}},{"value":"/ original value was of a different variant.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/different_variant.rs","byte_start":89921,"byte_end":89967,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1770},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/format.rs","byte_start":91122,"byte_end":91149,"line_start":17,"line_end":17,"column_start":5,"column_end":32},"name":"InsufficientTypeInformation","qualname":"::error::format::Format::InsufficientTypeInformation","value":"Format::InsufficientTypeInformation","parent":{"krate":0,"index":1769},"children":[],"decl_id":null,"docs":" The type being formatted does not contain sufficient information to format a component.\n","sig":null,"attributes":[{"value":"/ The type being formatted does not contain sufficient information to format a component.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/format.rs","byte_start":91004,"byte_end":91095,"line_start":15,"line_end":15,"column_start":5,"column_end":96}},{"value":"non_exhaustive","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/format.rs","byte_start":91100,"byte_end":91117,"line_start":16,"line_end":16,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1772},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/format.rs","byte_start":91324,"byte_end":91340,"line_start":21,"line_end":21,"column_start":5,"column_end":21},"name":"InvalidComponent","qualname":"::error::format::Format::InvalidComponent","value":"Format::InvalidComponent(&'static str)","parent":{"krate":0,"index":1769},"children":[],"decl_id":null,"docs":" The component named has a value that cannot be formatted into the requested format.","sig":null,"attributes":[{"value":"/ The component named has a value that cannot be formatted into the requested format.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/format.rs","byte_start":91155,"byte_end":91242,"line_start":18,"line_end":18,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/format.rs","byte_start":91247,"byte_end":91250,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ This variant is only returned when using well-known formats.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/format.rs","byte_start":91255,"byte_end":91319,"line_start":20,"line_end":20,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1775},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/format.rs","byte_start":91421,"byte_end":91426,"line_start":23,"line_end":23,"column_start":5,"column_end":10},"name":"StdIo","qualname":"::error::format::Format::StdIo","value":"Format::StdIo(io::Error)","parent":{"krate":0,"index":1769},"children":[],"decl_id":null,"docs":" A value of `std::io::Error` was returned internally.\n","sig":null,"attributes":[{"value":"/ A value of `std::io::Error` was returned internally.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/format.rs","byte_start":91360,"byte_end":91416,"line_start":22,"line_end":22,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":1769},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/format.rs","byte_start":90991,"byte_end":90997,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"name":"Format","qualname":"::error::format::Format","value":"pub enum Format {\n    InsufficientTypeInformation,\n    InvalidComponent(&'static str),\n    StdIo(io::Error),\n}","parent":null,"children":[{"krate":0,"index":1770},{"krate":0,"index":1772},{"krate":0,"index":1775}],"decl_id":null,"docs":" An error occurred when formatting.\n","sig":null,"attributes":[{"value":"/ An error occurred when formatting.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/format.rs","byte_start":90807,"byte_end":90845,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"non_exhaustive","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/format.rs","byte_start":90846,"byte_end":90863,"line_start":10,"line_end":10,"column_start":1,"column_end":18}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/format.rs","byte_start":90864,"byte_end":90902,"line_start":11,"line_end":11,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1780},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/indeterminate_offset.rs","byte_start":93834,"byte_end":93853,"line_start":11,"line_end":11,"column_start":12,"column_end":31},"name":"IndeterminateOffset","qualname":"::error::indeterminate_offset::IndeterminateOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" The system's UTC offset could not be determined at the given datetime.\n","sig":null,"attributes":[{"value":"/ The system's UTC offset could not be determined at the given datetime.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/indeterminate_offset.rs","byte_start":93639,"byte_end":93713,"line_start":8,"line_end":8,"column_start":1,"column_end":75}}]},{"kind":"StructVariant","id":{"krate":0,"index":1794},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/invalid_format_description.rs","byte_start":95173,"byte_end":95195,"line_start":19,"line_end":19,"column_start":5,"column_end":27},"name":"UnclosedOpeningBracket","qualname":"::error::invalid_format_description::InvalidFormatDescription::UnclosedOpeningBracket","value":"InvalidFormatDescription::UnclosedOpeningBracket { index }","parent":{"krate":0,"index":1793},"children":[],"decl_id":null,"docs":" There was a bracket pair that was opened but not closed.\n","sig":null,"attributes":[{"value":"/ There was a bracket pair that was opened but not closed.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/invalid_format_description.rs","byte_start":95086,"byte_end":95146,"line_start":17,"line_end":17,"column_start":5,"column_end":65}},{"value":"non_exhaustive","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/invalid_format_description.rs","byte_start":95151,"byte_end":95168,"line_start":18,"line_end":18,"column_start":5,"column_end":22}}]},{"kind":"StructVariant","id":{"krate":0,"index":1796},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/invalid_format_description.rs","byte_start":95349,"byte_end":95369,"line_start":25,"line_end":25,"column_start":5,"column_end":25},"name":"InvalidComponentName","qualname":"::error::invalid_format_description::InvalidFormatDescription::InvalidComponentName","value":"InvalidFormatDescription::InvalidComponentName { name, index }","parent":{"krate":0,"index":1793},"children":[],"decl_id":null,"docs":" A component name is not valid.\n","sig":null,"attributes":[{"value":"/ A component name is not valid.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/invalid_format_description.rs","byte_start":95288,"byte_end":95322,"line_start":23,"line_end":23,"column_start":5,"column_end":39}},{"value":"non_exhaustive","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/invalid_format_description.rs","byte_start":95327,"byte_end":95344,"line_start":24,"line_end":24,"column_start":5,"column_end":22}}]},{"kind":"StructVariant","id":{"krate":0,"index":1799},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/invalid_format_description.rs","byte_start":95597,"byte_end":95612,"line_start":33,"line_end":33,"column_start":5,"column_end":20},"name":"InvalidModifier","qualname":"::error::invalid_format_description::InvalidFormatDescription::InvalidModifier","value":"InvalidFormatDescription::InvalidModifier { value, index }","parent":{"krate":0,"index":1793},"children":[],"decl_id":null,"docs":" A modifier is not valid.\n","sig":null,"attributes":[{"value":"/ A modifier is not valid.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/invalid_format_description.rs","byte_start":95542,"byte_end":95570,"line_start":31,"line_end":31,"column_start":5,"column_end":33}},{"value":"non_exhaustive","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/invalid_format_description.rs","byte_start":95575,"byte_end":95592,"line_start":32,"line_end":32,"column_start":5,"column_end":22}}]},{"kind":"StructVariant","id":{"krate":0,"index":1802},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/invalid_format_description.rs","byte_start":95834,"byte_end":95854,"line_start":41,"line_end":41,"column_start":5,"column_end":25},"name":"MissingComponentName","qualname":"::error::invalid_format_description::InvalidFormatDescription::MissingComponentName","value":"InvalidFormatDescription::MissingComponentName { index }","parent":{"krate":0,"index":1793},"children":[],"decl_id":null,"docs":" A component name is missing.\n","sig":null,"attributes":[{"value":"/ A component name is missing.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/invalid_format_description.rs","byte_start":95775,"byte_end":95807,"line_start":39,"line_end":39,"column_start":5,"column_end":37}},{"value":"non_exhaustive","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/invalid_format_description.rs","byte_start":95812,"byte_end":95829,"line_start":40,"line_end":40,"column_start":5,"column_end":22}}]},{"kind":"Enum","id":{"krate":0,"index":1793},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/invalid_format_description.rs","byte_start":95055,"byte_end":95079,"line_start":16,"line_end":16,"column_start":10,"column_end":34},"name":"InvalidFormatDescription","qualname":"::error::invalid_format_description::InvalidFormatDescription","value":"pub enum InvalidFormatDescription {\n    UnclosedOpeningBracket {\n        index: usize,\n    },\n    InvalidComponentName {\n        name: String,\n        index: usize,\n    },\n    InvalidModifier {\n        value: String,\n        index: usize,\n    },\n    MissingComponentName {\n        index: usize,\n    },\n}","parent":null,"children":[{"krate":0,"index":1794},{"krate":0,"index":1796},{"krate":0,"index":1799},{"krate":0,"index":1802}],"decl_id":null,"docs":" The format description provided was not valid.\n","sig":null,"attributes":[{"value":"/ The format description provided was not valid.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/invalid_format_description.rs","byte_start":94816,"byte_end":94866,"line_start":9,"line_end":9,"column_start":1,"column_end":51}},{"value":"non_exhaustive","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/invalid_format_description.rs","byte_start":94989,"byte_end":95006,"line_start":14,"line_end":14,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1815},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/invalid_variant.rs","byte_start":97836,"byte_end":97850,"line_start":9,"line_end":9,"column_start":12,"column_end":26},"name":"InvalidVariant","qualname":"::error::invalid_variant::InvalidVariant","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error type indicating that a [`FromStr`](core::str::FromStr) call failed because the value\n was not a valid variant.\n","sig":null,"attributes":[{"value":"/ An error type indicating that a [`FromStr`](core::str::FromStr) call failed because the value","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/invalid_variant.rs","byte_start":97653,"byte_end":97750,"line_start":6,"line_end":6,"column_start":1,"column_end":98}},{"value":"/ was not a valid variant.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/invalid_variant.rs","byte_start":97751,"byte_end":97779,"line_start":7,"line_end":7,"column_start":1,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1829},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/mod.rs","byte_start":83399,"byte_end":83414,"line_start":48,"line_end":48,"column_start":5,"column_end":20},"name":"ConversionRange","qualname":"::error::Error::ConversionRange","value":"Error::ConversionRange(ConversionRange)","parent":{"krate":0,"index":1828},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1832},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/mod.rs","byte_start":83437,"byte_end":83451,"line_start":49,"line_end":49,"column_start":5,"column_end":19},"name":"ComponentRange","qualname":"::error::Error::ComponentRange","value":"Error::ComponentRange(ComponentRange)","parent":{"krate":0,"index":1828},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1835},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/mod.rs","byte_start":83510,"byte_end":83529,"line_start":51,"line_end":51,"column_start":5,"column_end":24},"name":"IndeterminateOffset","qualname":"::error::Error::IndeterminateOffset","value":"Error::IndeterminateOffset(IndeterminateOffset)","parent":{"krate":0,"index":1828},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"local-offset\")","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/mod.rs","byte_start":83473,"byte_end":83505,"line_start":50,"line_end":50,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1838},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/mod.rs","byte_start":83591,"byte_end":83597,"line_start":53,"line_end":53,"column_start":5,"column_end":11},"name":"Format","qualname":"::error::Error::Format","value":"Error::Format(Format)","parent":{"krate":0,"index":1828},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"formatting\")","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/mod.rs","byte_start":83556,"byte_end":83586,"line_start":52,"line_end":52,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1841},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/mod.rs","byte_start":83930,"byte_end":83954,"line_start":62,"line_end":62,"column_start":5,"column_end":29},"name":"InvalidFormatDescription","qualname":"::error::Error::InvalidFormatDescription","value":"Error::InvalidFormatDescription(InvalidFormatDescription)","parent":{"krate":0,"index":1828},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(all(any(feature = \"formatting\", feature = \"parsing\"), feature =\n          \"alloc\"))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/mod.rs","byte_start":83845,"byte_end":83925,"line_start":61,"line_end":61,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1844},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/mod.rs","byte_start":83986,"byte_end":84002,"line_start":63,"line_end":63,"column_start":5,"column_end":21},"name":"DifferentVariant","qualname":"::error::Error::DifferentVariant","value":"Error::DifferentVariant(DifferentVariant)","parent":{"krate":0,"index":1828},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1847},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/mod.rs","byte_start":84026,"byte_end":84040,"line_start":64,"line_end":64,"column_start":5,"column_end":19},"name":"InvalidVariant","qualname":"::error::Error::InvalidVariant","value":"Error::InvalidVariant(InvalidVariant)","parent":{"krate":0,"index":1828},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1828},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/mod.rs","byte_start":83387,"byte_end":83392,"line_start":47,"line_end":47,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error {\n    ConversionRange(ConversionRange),\n    ComponentRange(ComponentRange),\n    IndeterminateOffset(IndeterminateOffset),\n    Format(Format),\n    InvalidFormatDescription(InvalidFormatDescription),\n    DifferentVariant(DifferentVariant),\n    InvalidVariant(InvalidVariant),\n}","parent":null,"children":[{"krate":0,"index":1829},{"krate":0,"index":1832},{"krate":0,"index":1835},{"krate":0,"index":1838},{"krate":0,"index":1841},{"krate":0,"index":1844},{"krate":0,"index":1847}],"decl_id":null,"docs":" A unified error type for anything returned by a method in the time crate.","sig":null,"attributes":[{"value":"/ A unified error type for anything returned by a method in the time crate.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/mod.rs","byte_start":82944,"byte_end":83021,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/mod.rs","byte_start":83022,"byte_end":83025,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ This can be used when you either don't know or don't care about the exact error returned.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/mod.rs","byte_start":83026,"byte_end":83119,"line_start":41,"line_end":41,"column_start":1,"column_end":94}},{"value":"/ `Result<_, time::Error>` (or its alias `time::Result<_>`) will work in these situations.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/mod.rs","byte_start":83120,"byte_end":83212,"line_start":42,"line_end":42,"column_start":1,"column_end":93}},{"value":"allow(missing_copy_implementations, variant_size_differences)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/mod.rs","byte_start":83213,"byte_end":83277,"line_start":43,"line_end":43,"column_start":1,"column_end":65}},{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/mod.rs","byte_start":83278,"byte_end":83325,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"non_exhaustive","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/mod.rs","byte_start":83343,"byte_end":83360,"line_start":45,"line_end":45,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":491},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ext","qualname":"::ext","value":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":495},{"krate":0,"index":498},{"krate":0,"index":503},{"krate":0,"index":512},{"krate":0,"index":521},{"krate":0,"index":530},{"krate":0,"index":539},{"krate":0,"index":548}],"decl_id":null,"docs":" Extension traits.\n","sig":null,"attributes":[{"value":"/ Extension traits.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":98531,"byte_end":98552,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":499},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":98765,"byte_end":98771,"line_start":10,"line_end":10,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::ext::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":" A trait that cannot be implemented by downstream users.\n","sig":null,"attributes":[{"value":"/ A trait that cannot be implemented by downstream users.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":98691,"byte_end":98750,"line_start":9,"line_end":9,"column_start":5,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":503},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":100570,"byte_end":100587,"line_start":60,"line_end":60,"column_start":11,"column_end":28},"name":"NumericalDuration","qualname":"::ext::NumericalDuration","value":"NumericalDuration: sealed::Sealed","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511}],"decl_id":null,"docs":" Create [`Duration`]s from numeric literals.","sig":null,"attributes":[{"value":"/ Create [`Duration`]s from numeric literals.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":98888,"byte_end":98935,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":98936,"byte_end":98939,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":98940,"byte_end":98954,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":98955,"byte_end":98958,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Basic construction of [`Duration`]s.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":98959,"byte_end":98999,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":99000,"byte_end":99003,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":99004,"byte_end":99015,"line_start":23,"line_end":23,"column_start":1,"column_end":12}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":99016,"byte_end":99067,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(5.nanoseconds(), Duration::nanoseconds(5));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":99068,"byte_end":99126,"line_start":25,"line_end":25,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(5.microseconds(), Duration::microseconds(5));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":99127,"byte_end":99187,"line_start":26,"line_end":26,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(5.milliseconds(), Duration::milliseconds(5));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":99188,"byte_end":99248,"line_start":27,"line_end":27,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(5.seconds(), Duration::seconds(5));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":99249,"byte_end":99299,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(5.minutes(), Duration::minutes(5));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":99300,"byte_end":99350,"line_start":29,"line_end":29,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(5.hours(), Duration::hours(5));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":99351,"byte_end":99397,"line_start":30,"line_end":30,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(5.days(), Duration::days(5));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":99398,"byte_end":99442,"line_start":31,"line_end":31,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(5.weeks(), Duration::weeks(5));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":99443,"byte_end":99489,"line_start":32,"line_end":32,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":99490,"byte_end":99497,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":99498,"byte_end":99501,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Signed integers work as well!","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":99502,"byte_end":99535,"line_start":35,"line_end":35,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":99536,"byte_end":99539,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":99540,"byte_end":99551,"line_start":37,"line_end":37,"column_start":1,"column_end":12}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":99552,"byte_end":99603,"line_start":38,"line_end":38,"column_start":1,"column_end":52}},{"value":"/ assert_eq!((-5).nanoseconds(), Duration::nanoseconds(-5));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":99604,"byte_end":99666,"line_start":39,"line_end":39,"column_start":1,"column_end":63}},{"value":"/ assert_eq!((-5).microseconds(), Duration::microseconds(-5));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":99667,"byte_end":99731,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ assert_eq!((-5).milliseconds(), Duration::milliseconds(-5));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":99732,"byte_end":99796,"line_start":41,"line_end":41,"column_start":1,"column_end":65}},{"value":"/ assert_eq!((-5).seconds(), Duration::seconds(-5));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":99797,"byte_end":99851,"line_start":42,"line_end":42,"column_start":1,"column_end":55}},{"value":"/ assert_eq!((-5).minutes(), Duration::minutes(-5));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":99852,"byte_end":99906,"line_start":43,"line_end":43,"column_start":1,"column_end":55}},{"value":"/ assert_eq!((-5).hours(), Duration::hours(-5));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":99907,"byte_end":99957,"line_start":44,"line_end":44,"column_start":1,"column_end":51}},{"value":"/ assert_eq!((-5).days(), Duration::days(-5));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":99958,"byte_end":100006,"line_start":45,"line_end":45,"column_start":1,"column_end":49}},{"value":"/ assert_eq!((-5).weeks(), Duration::weeks(-5));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":100007,"byte_end":100057,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":100058,"byte_end":100065,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":100066,"byte_end":100069,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Just like any other [`Duration`], they can be added, subtracted, etc.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":100070,"byte_end":100143,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":100144,"byte_end":100147,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":100148,"byte_end":100159,"line_start":51,"line_end":51,"column_start":1,"column_end":12}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":100160,"byte_end":100199,"line_start":52,"line_end":52,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(2.seconds() + 500.milliseconds(), 2_500.milliseconds());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":100200,"byte_end":100271,"line_start":53,"line_end":53,"column_start":1,"column_end":72}},{"value":"/ assert_eq!(2.seconds() - 500.milliseconds(), 1_500.milliseconds());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":100272,"byte_end":100343,"line_start":54,"line_end":54,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":100344,"byte_end":100351,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":100352,"byte_end":100355,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ When called on floating point values, any remainder of the floating point value will be","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":100356,"byte_end":100447,"line_start":57,"line_end":57,"column_start":1,"column_end":92}},{"value":"/ truncated. Keep in mind that floating point numbers are inherently imprecise and have limited","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":100448,"byte_end":100545,"line_start":58,"line_end":58,"column_start":1,"column_end":98}},{"value":"/ capacity.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":100546,"byte_end":100559,"line_start":59,"line_end":59,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":100675,"byte_end":100686,"line_start":62,"line_end":62,"column_start":8,"column_end":19},"name":"nanoseconds","qualname":"::ext::NumericalDuration::nanoseconds","value":"pub fn nanoseconds(Self) -> Duration","parent":{"krate":0,"index":503},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of nanoseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of nanoseconds.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":100610,"byte_end":100667,"line_start":61,"line_end":61,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":100776,"byte_end":100788,"line_start":64,"line_end":64,"column_start":8,"column_end":20},"name":"microseconds","qualname":"::ext::NumericalDuration::microseconds","value":"pub fn microseconds(Self) -> Duration","parent":{"krate":0,"index":503},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of microseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of microseconds.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":100710,"byte_end":100768,"line_start":63,"line_end":63,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":100878,"byte_end":100890,"line_start":66,"line_end":66,"column_start":8,"column_end":20},"name":"milliseconds","qualname":"::ext::NumericalDuration::milliseconds","value":"pub fn milliseconds(Self) -> Duration","parent":{"krate":0,"index":503},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of milliseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of milliseconds.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":100812,"byte_end":100870,"line_start":65,"line_end":65,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":100975,"byte_end":100982,"line_start":68,"line_end":68,"column_start":8,"column_end":15},"name":"seconds","qualname":"::ext::NumericalDuration::seconds","value":"pub fn seconds(Self) -> Duration","parent":{"krate":0,"index":503},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of seconds.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of seconds.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":100914,"byte_end":100967,"line_start":67,"line_end":67,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":101067,"byte_end":101074,"line_start":70,"line_end":70,"column_start":8,"column_end":15},"name":"minutes","qualname":"::ext::NumericalDuration::minutes","value":"pub fn minutes(Self) -> Duration","parent":{"krate":0,"index":503},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of minutes.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of minutes.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":101006,"byte_end":101059,"line_start":69,"line_end":69,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":101157,"byte_end":101162,"line_start":72,"line_end":72,"column_start":8,"column_end":13},"name":"hours","qualname":"::ext::NumericalDuration::hours","value":"pub fn hours(Self) -> Duration","parent":{"krate":0,"index":503},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of hours.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of hours.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":101098,"byte_end":101149,"line_start":71,"line_end":71,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":101244,"byte_end":101248,"line_start":74,"line_end":74,"column_start":8,"column_end":12},"name":"days","qualname":"::ext::NumericalDuration::days","value":"pub fn days(Self) -> Duration","parent":{"krate":0,"index":503},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of days.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of days.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":101186,"byte_end":101236,"line_start":73,"line_end":73,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":101331,"byte_end":101336,"line_start":76,"line_end":76,"column_start":8,"column_end":13},"name":"weeks","qualname":"::ext::NumericalDuration::weeks","value":"pub fn weeks(Self) -> Duration","parent":{"krate":0,"index":503},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of weeks.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of weeks.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":101272,"byte_end":101323,"line_start":75,"line_end":75,"column_start":5,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":530},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":104225,"byte_end":104245,"line_start":185,"line_end":185,"column_start":11,"column_end":31},"name":"NumericalStdDuration","qualname":"::ext::NumericalStdDuration","value":"NumericalStdDuration: sealed::Sealed","parent":null,"children":[{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538}],"decl_id":null,"docs":" Create [`std::time::Duration`]s from numeric literals.","sig":null,"attributes":[{"value":"/ Create [`std::time::Duration`]s from numeric literals.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":102906,"byte_end":102964,"line_start":149,"line_end":149,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":102965,"byte_end":102968,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":102969,"byte_end":102983,"line_start":151,"line_end":151,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":102984,"byte_end":102987,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Basic construction of [`std::time::Duration`]s.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":102988,"byte_end":103039,"line_start":153,"line_end":153,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":103040,"byte_end":103043,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":103044,"byte_end":103055,"line_start":155,"line_end":155,"column_start":1,"column_end":12}},{"value":"/ # use time::ext::NumericalStdDuration;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":103056,"byte_end":103098,"line_start":156,"line_end":156,"column_start":1,"column_end":43}},{"value":"/ # use core::time::Duration;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":103099,"byte_end":103130,"line_start":157,"line_end":157,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(5.std_nanoseconds(), Duration::from_nanos(5));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":103131,"byte_end":103192,"line_start":158,"line_end":158,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(5.std_microseconds(), Duration::from_micros(5));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":103193,"byte_end":103256,"line_start":159,"line_end":159,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(5.std_milliseconds(), Duration::from_millis(5));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":103257,"byte_end":103320,"line_start":160,"line_end":160,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(5.std_seconds(), Duration::from_secs(5));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":103321,"byte_end":103377,"line_start":161,"line_end":161,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(5.std_minutes(), Duration::from_secs(5 * 60));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":103378,"byte_end":103439,"line_start":162,"line_end":162,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(5.std_hours(), Duration::from_secs(5 * 3_600));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":103440,"byte_end":103502,"line_start":163,"line_end":163,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(5.std_days(), Duration::from_secs(5 * 86_400));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":103503,"byte_end":103565,"line_start":164,"line_end":164,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(5.std_weeks(), Duration::from_secs(5 * 604_800));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":103566,"byte_end":103630,"line_start":165,"line_end":165,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":103631,"byte_end":103638,"line_start":166,"line_end":166,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":103639,"byte_end":103642,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ Just like any other [`std::time::Duration`], they can be added, subtracted, etc.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":103643,"byte_end":103727,"line_start":168,"line_end":168,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":103728,"byte_end":103731,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":103732,"byte_end":103743,"line_start":170,"line_end":170,"column_start":1,"column_end":12}},{"value":"/ # use time::ext::NumericalStdDuration;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":103744,"byte_end":103786,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":103787,"byte_end":103802,"line_start":172,"line_end":172,"column_start":1,"column_end":16}},{"value":"/     2.std_seconds() + 500.std_milliseconds(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":103803,"byte_end":103852,"line_start":173,"line_end":173,"column_start":1,"column_end":50}},{"value":"/     2_500.std_milliseconds()","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":103853,"byte_end":103885,"line_start":174,"line_end":174,"column_start":1,"column_end":33}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":103886,"byte_end":103892,"line_start":175,"line_end":175,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":103893,"byte_end":103908,"line_start":176,"line_end":176,"column_start":1,"column_end":16}},{"value":"/     2.std_seconds() - 500.std_milliseconds(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":103909,"byte_end":103958,"line_start":177,"line_end":177,"column_start":1,"column_end":50}},{"value":"/     1_500.std_milliseconds()","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":103959,"byte_end":103991,"line_start":178,"line_end":178,"column_start":1,"column_end":33}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":103992,"byte_end":103998,"line_start":179,"line_end":179,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":103999,"byte_end":104006,"line_start":180,"line_end":180,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":104007,"byte_end":104010,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ When called on floating point values, any remainder of the floating point value will be","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":104011,"byte_end":104102,"line_start":182,"line_end":182,"column_start":1,"column_end":92}},{"value":"/ truncated. Keep in mind that floating point numbers are inherently imprecise and have limited","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":104103,"byte_end":104200,"line_start":183,"line_end":183,"column_start":1,"column_end":98}},{"value":"/ capacity.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":104201,"byte_end":104214,"line_start":184,"line_end":184,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":104344,"byte_end":104359,"line_start":187,"line_end":187,"column_start":8,"column_end":23},"name":"std_nanoseconds","qualname":"::ext::NumericalStdDuration::std_nanoseconds","value":"pub fn std_nanoseconds(Self) -> StdDuration","parent":{"krate":0,"index":530},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of nanoseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of nanoseconds.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":104268,"byte_end":104336,"line_start":186,"line_end":186,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":104463,"byte_end":104479,"line_start":189,"line_end":189,"column_start":8,"column_end":24},"name":"std_microseconds","qualname":"::ext::NumericalStdDuration::std_microseconds","value":"pub fn std_microseconds(Self) -> StdDuration","parent":{"krate":0,"index":530},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of microseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of microseconds.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":104386,"byte_end":104455,"line_start":188,"line_end":188,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":104583,"byte_end":104599,"line_start":191,"line_end":191,"column_start":8,"column_end":24},"name":"std_milliseconds","qualname":"::ext::NumericalStdDuration::std_milliseconds","value":"pub fn std_milliseconds(Self) -> StdDuration","parent":{"krate":0,"index":530},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of milliseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of milliseconds.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":104506,"byte_end":104575,"line_start":190,"line_end":190,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":104698,"byte_end":104709,"line_start":193,"line_end":193,"column_start":8,"column_end":19},"name":"std_seconds","qualname":"::ext::NumericalStdDuration::std_seconds","value":"pub fn std_seconds(Self) -> StdDuration","parent":{"krate":0,"index":530},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of seconds.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of seconds.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":104626,"byte_end":104690,"line_start":192,"line_end":192,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":104808,"byte_end":104819,"line_start":195,"line_end":195,"column_start":8,"column_end":19},"name":"std_minutes","qualname":"::ext::NumericalStdDuration::std_minutes","value":"pub fn std_minutes(Self) -> StdDuration","parent":{"krate":0,"index":530},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of minutes.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of minutes.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":104736,"byte_end":104800,"line_start":194,"line_end":194,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":104916,"byte_end":104925,"line_start":197,"line_end":197,"column_start":8,"column_end":17},"name":"std_hours","qualname":"::ext::NumericalStdDuration::std_hours","value":"pub fn std_hours(Self) -> StdDuration","parent":{"krate":0,"index":530},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of hours.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of hours.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":104846,"byte_end":104908,"line_start":196,"line_end":196,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":105021,"byte_end":105029,"line_start":199,"line_end":199,"column_start":8,"column_end":16},"name":"std_days","qualname":"::ext::NumericalStdDuration::std_days","value":"pub fn std_days(Self) -> StdDuration","parent":{"krate":0,"index":530},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of days.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of days.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":104952,"byte_end":105013,"line_start":198,"line_end":198,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":105126,"byte_end":105135,"line_start":201,"line_end":201,"column_start":8,"column_end":17},"name":"std_weeks","qualname":"::ext::NumericalStdDuration::std_weeks","value":"pub fn std_weeks(Self) -> StdDuration","parent":{"krate":0,"index":530},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of weeks.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of weeks.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":105056,"byte_end":105118,"line_start":200,"line_end":200,"column_start":5,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":557},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"format_description","qualname":"::format_description","value":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","parent":null,"children":[{"krate":0,"index":558},{"krate":0,"index":604},{"krate":0,"index":622},{"krate":0,"index":654},{"krate":0,"index":657},{"krate":0,"index":660},{"krate":0,"index":663},{"krate":0,"index":666},{"krate":0,"index":669},{"krate":0,"index":672},{"krate":0,"index":676},{"krate":0,"index":2360},{"krate":0,"index":2377},{"krate":0,"index":2380},{"krate":0,"index":2382},{"krate":0,"index":2386},{"krate":0,"index":2388},{"krate":0,"index":677},{"krate":0,"index":679},{"krate":0,"index":681},{"krate":0,"index":684},{"krate":0,"index":687},{"krate":0,"index":691},{"krate":0,"index":693},{"krate":0,"index":695},{"krate":0,"index":697}],"decl_id":null,"docs":" Description of how types should be formatted and parsed.","sig":null,"attributes":[{"value":"cfg(any(feature = \"formatting\", feature = \"parsing\"))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":9696,"byte_end":9752,"line_start":286,"line_end":286,"column_start":1,"column_end":57}},{"value":"/ Description of how types should be formatted and parsed.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":107115,"byte_end":107175,"line_start":1,"line_end":1,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":107176,"byte_end":107179,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The formatted value will be output to the provided writer. Format descriptions can be","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":107180,"byte_end":107269,"line_start":3,"line_end":3,"column_start":1,"column_end":90}},{"value":"/ [well-known](crate::format_description::well_known) or obtained by using the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":107270,"byte_end":107350,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"/ [`format_description!`](crate::macros::format_description) macro, the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":107351,"byte_end":107424,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ [`format_description::parse`](crate::format_description::parse()) function.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":107425,"byte_end":107504,"line_start":6,"line_end":6,"column_start":1,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1853},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/component.rs","byte_start":113767,"byte_end":113770,"line_start":15,"line_end":15,"column_start":5,"column_end":8},"name":"Day","qualname":"::format_description::component::Component::Day","value":"Component::Day(modifier::Day)","parent":{"krate":0,"index":1852},"children":[],"decl_id":null,"docs":" Day of the month.\n","sig":null,"attributes":[{"value":"/ Day of the month.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/component.rs","byte_start":113741,"byte_end":113762,"line_start":14,"line_end":14,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1856},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/component.rs","byte_start":113818,"byte_end":113823,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Month","qualname":"::format_description::component::Component::Month","value":"Component::Month(modifier::Month)","parent":{"krate":0,"index":1852},"children":[],"decl_id":null,"docs":" Month of the year.\n","sig":null,"attributes":[{"value":"/ Month of the year.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/component.rs","byte_start":113791,"byte_end":113813,"line_start":16,"line_end":16,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1859},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/component.rs","byte_start":113879,"byte_end":113886,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"Ordinal","qualname":"::format_description::component::Component::Ordinal","value":"Component::Ordinal(modifier::Ordinal)","parent":{"krate":0,"index":1852},"children":[],"decl_id":null,"docs":" Ordinal day of the year.\n","sig":null,"attributes":[{"value":"/ Ordinal day of the year.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/component.rs","byte_start":113846,"byte_end":113874,"line_start":18,"line_end":18,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1862},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/component.rs","byte_start":113936,"byte_end":113943,"line_start":21,"line_end":21,"column_start":5,"column_end":12},"name":"Weekday","qualname":"::format_description::component::Component::Weekday","value":"Component::Weekday(modifier::Weekday)","parent":{"krate":0,"index":1852},"children":[],"decl_id":null,"docs":" Day of the week.\n","sig":null,"attributes":[{"value":"/ Day of the week.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/component.rs","byte_start":113911,"byte_end":113931,"line_start":20,"line_end":20,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1865},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/component.rs","byte_start":113998,"byte_end":114008,"line_start":23,"line_end":23,"column_start":5,"column_end":15},"name":"WeekNumber","qualname":"::format_description::component::Component::WeekNumber","value":"Component::WeekNumber(modifier::WeekNumber)","parent":{"krate":0,"index":1852},"children":[],"decl_id":null,"docs":" Week within the year.\n","sig":null,"attributes":[{"value":"/ Week within the year.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/component.rs","byte_start":113968,"byte_end":113993,"line_start":22,"line_end":22,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1868},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/component.rs","byte_start":114062,"byte_end":114066,"line_start":25,"line_end":25,"column_start":5,"column_end":9},"name":"Year","qualname":"::format_description::component::Component::Year","value":"Component::Year(modifier::Year)","parent":{"krate":0,"index":1852},"children":[],"decl_id":null,"docs":" Year of the date.\n","sig":null,"attributes":[{"value":"/ Year of the date.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/component.rs","byte_start":114036,"byte_end":114057,"line_start":24,"line_end":24,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1871},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/component.rs","byte_start":114113,"byte_end":114117,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"Hour","qualname":"::format_description::component::Component::Hour","value":"Component::Hour(modifier::Hour)","parent":{"krate":0,"index":1852},"children":[],"decl_id":null,"docs":" Hour of the day.\n","sig":null,"attributes":[{"value":"/ Hour of the day.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/component.rs","byte_start":114088,"byte_end":114108,"line_start":26,"line_end":26,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1874},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/component.rs","byte_start":114171,"byte_end":114177,"line_start":29,"line_end":29,"column_start":5,"column_end":11},"name":"Minute","qualname":"::format_description::component::Component::Minute","value":"Component::Minute(modifier::Minute)","parent":{"krate":0,"index":1852},"children":[],"decl_id":null,"docs":" Minute within the hour.\n","sig":null,"attributes":[{"value":"/ Minute within the hour.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/component.rs","byte_start":114139,"byte_end":114166,"line_start":28,"line_end":28,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1877},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/component.rs","byte_start":114233,"byte_end":114239,"line_start":31,"line_end":31,"column_start":5,"column_end":11},"name":"Period","qualname":"::format_description::component::Component::Period","value":"Component::Period(modifier::Period)","parent":{"krate":0,"index":1852},"children":[],"decl_id":null,"docs":" AM/PM part of the time.\n","sig":null,"attributes":[{"value":"/ AM/PM part of the time.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/component.rs","byte_start":114201,"byte_end":114228,"line_start":30,"line_end":30,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1880},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/component.rs","byte_start":114297,"byte_end":114303,"line_start":33,"line_end":33,"column_start":5,"column_end":11},"name":"Second","qualname":"::format_description::component::Component::Second","value":"Component::Second(modifier::Second)","parent":{"krate":0,"index":1852},"children":[],"decl_id":null,"docs":" Second within the minute.\n","sig":null,"attributes":[{"value":"/ Second within the minute.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/component.rs","byte_start":114263,"byte_end":114292,"line_start":32,"line_end":32,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1883},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/component.rs","byte_start":114364,"byte_end":114373,"line_start":35,"line_end":35,"column_start":5,"column_end":14},"name":"Subsecond","qualname":"::format_description::component::Component::Subsecond","value":"Component::Subsecond(modifier::Subsecond)","parent":{"krate":0,"index":1852},"children":[],"decl_id":null,"docs":" Subsecond within the second.\n","sig":null,"attributes":[{"value":"/ Subsecond within the second.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/component.rs","byte_start":114327,"byte_end":114359,"line_start":34,"line_end":34,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1886},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/component.rs","byte_start":114432,"byte_end":114442,"line_start":37,"line_end":37,"column_start":5,"column_end":15},"name":"OffsetHour","qualname":"::format_description::component::Component::OffsetHour","value":"Component::OffsetHour(modifier::OffsetHour)","parent":{"krate":0,"index":1852},"children":[],"decl_id":null,"docs":" Hour of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Hour of the UTC offset.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/component.rs","byte_start":114400,"byte_end":114427,"line_start":36,"line_end":36,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1889},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/component.rs","byte_start":114520,"byte_end":114532,"line_start":39,"line_end":39,"column_start":5,"column_end":17},"name":"OffsetMinute","qualname":"::format_description::component::Component::OffsetMinute","value":"Component::OffsetMinute(modifier::OffsetMinute)","parent":{"krate":0,"index":1852},"children":[],"decl_id":null,"docs":" Minute within the hour of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Minute within the hour of the UTC offset.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/component.rs","byte_start":114470,"byte_end":114515,"line_start":38,"line_end":38,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1892},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/component.rs","byte_start":114614,"byte_end":114626,"line_start":41,"line_end":41,"column_start":5,"column_end":17},"name":"OffsetSecond","qualname":"::format_description::component::Component::OffsetSecond","value":"Component::OffsetSecond(modifier::OffsetSecond)","parent":{"krate":0,"index":1852},"children":[],"decl_id":null,"docs":" Second within the minute of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Second within the minute of the UTC offset.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/component.rs","byte_start":114562,"byte_end":114609,"line_start":40,"line_end":40,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":1852},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/component.rs","byte_start":113725,"byte_end":113734,"line_start":13,"line_end":13,"column_start":10,"column_end":19},"name":"Component","qualname":"::format_description::component::Component","value":"pub enum Component {\n    Day(modifier::Day),\n    Month(modifier::Month),\n    Ordinal(modifier::Ordinal),\n    Weekday(modifier::Weekday),\n    WeekNumber(modifier::WeekNumber),\n    Year(modifier::Year),\n    Hour(modifier::Hour),\n    Minute(modifier::Minute),\n    Period(modifier::Period),\n    Second(modifier::Second),\n    Subsecond(modifier::Subsecond),\n    OffsetHour(modifier::OffsetHour),\n    OffsetMinute(modifier::OffsetMinute),\n    OffsetSecond(modifier::OffsetSecond),\n}","parent":null,"children":[{"krate":0,"index":1853},{"krate":0,"index":1856},{"krate":0,"index":1859},{"krate":0,"index":1862},{"krate":0,"index":1865},{"krate":0,"index":1868},{"krate":0,"index":1871},{"krate":0,"index":1874},{"krate":0,"index":1877},{"krate":0,"index":1880},{"krate":0,"index":1883},{"krate":0,"index":1886},{"krate":0,"index":1889},{"krate":0,"index":1892}],"decl_id":null,"docs":" A component of a larger format description.\n","sig":null,"attributes":[{"value":"/ A component of a larger format description.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/component.rs","byte_start":113605,"byte_end":113652,"line_start":10,"line_end":10,"column_start":1,"column_end":48}},{"value":"non_exhaustive","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/component.rs","byte_start":113653,"byte_end":113670,"line_start":11,"line_end":11,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":604},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"modifier","qualname":"::format_description::modifier","value":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","parent":null,"children":[{"krate":0,"index":605},{"krate":0,"index":608},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":615},{"krate":0,"index":1907},{"krate":0,"index":1909},{"krate":0,"index":1911},{"krate":0,"index":1913},{"krate":0,"index":1914},{"krate":0,"index":1915},{"krate":0,"index":1918},{"krate":0,"index":1919},{"krate":0,"index":1921},{"krate":0,"index":1928},{"krate":0,"index":1930},{"krate":0,"index":1932},{"krate":0,"index":1933},{"krate":0,"index":1934},{"krate":0,"index":1936},{"krate":0,"index":1937},{"krate":0,"index":1939},{"krate":0,"index":1943},{"krate":0,"index":1945},{"krate":0,"index":1947},{"krate":0,"index":1948},{"krate":0,"index":1949},{"krate":0,"index":1952},{"krate":0,"index":1953},{"krate":0,"index":1955},{"krate":0,"index":1957},{"krate":0,"index":1959},{"krate":0,"index":1961},{"krate":0,"index":1962},{"krate":0,"index":1963},{"krate":0,"index":1966},{"krate":0,"index":1967},{"krate":0,"index":1969},{"krate":0,"index":1978},{"krate":0,"index":1980},{"krate":0,"index":1982},{"krate":0,"index":1983},{"krate":0,"index":1984},{"krate":0,"index":1986},{"krate":0,"index":1987},{"krate":0,"index":1989},{"krate":0,"index":1993},{"krate":0,"index":1995},{"krate":0,"index":1997},{"krate":0,"index":1998},{"krate":0,"index":1999},{"krate":0,"index":2002},{"krate":0,"index":2003},{"krate":0,"index":2005},{"krate":0,"index":2012},{"krate":0,"index":2014},{"krate":0,"index":2016},{"krate":0,"index":2017},{"krate":0,"index":2018},{"krate":0,"index":2020},{"krate":0,"index":2021},{"krate":0,"index":2023},{"krate":0,"index":2026},{"krate":0,"index":2028},{"krate":0,"index":2030},{"krate":0,"index":2031},{"krate":0,"index":2032},{"krate":0,"index":2035},{"krate":0,"index":2036},{"krate":0,"index":2038},{"krate":0,"index":2043},{"krate":0,"index":2045},{"krate":0,"index":2047},{"krate":0,"index":2048},{"krate":0,"index":2049},{"krate":0,"index":2051},{"krate":0,"index":2052},{"krate":0,"index":2054},{"krate":0,"index":2059},{"krate":0,"index":2061},{"krate":0,"index":2063},{"krate":0,"index":2064},{"krate":0,"index":2065},{"krate":0,"index":2068},{"krate":0,"index":2069},{"krate":0,"index":2071},{"krate":0,"index":2074},{"krate":0,"index":2076},{"krate":0,"index":2078},{"krate":0,"index":2079},{"krate":0,"index":2080},{"krate":0,"index":2083},{"krate":0,"index":2084},{"krate":0,"index":2086},{"krate":0,"index":2088},{"krate":0,"index":2090},{"krate":0,"index":2092},{"krate":0,"index":2093},{"krate":0,"index":2094},{"krate":0,"index":2097},{"krate":0,"index":2098},{"krate":0,"index":2100},{"krate":0,"index":2103},{"krate":0,"index":2105},{"krate":0,"index":2107},{"krate":0,"index":2108},{"krate":0,"index":2109},{"krate":0,"index":2112},{"krate":0,"index":2113},{"krate":0,"index":2115},{"krate":0,"index":2117},{"krate":0,"index":2119},{"krate":0,"index":2121},{"krate":0,"index":2122},{"krate":0,"index":2123},{"krate":0,"index":2126},{"krate":0,"index":2127},{"krate":0,"index":2129},{"krate":0,"index":2150},{"krate":0,"index":2152},{"krate":0,"index":2154},{"krate":0,"index":2155},{"krate":0,"index":2156},{"krate":0,"index":2158},{"krate":0,"index":2159},{"krate":0,"index":2161},{"krate":0,"index":2163},{"krate":0,"index":2165},{"krate":0,"index":2167},{"krate":0,"index":2168},{"krate":0,"index":2169},{"krate":0,"index":2172},{"krate":0,"index":2173},{"krate":0,"index":2175},{"krate":0,"index":2178},{"krate":0,"index":2180},{"krate":0,"index":2182},{"krate":0,"index":2183},{"krate":0,"index":2184},{"krate":0,"index":2187},{"krate":0,"index":2188},{"krate":0,"index":2190},{"krate":0,"index":2192},{"krate":0,"index":2194},{"krate":0,"index":2196},{"krate":0,"index":2197},{"krate":0,"index":2198},{"krate":0,"index":2201},{"krate":0,"index":2202},{"krate":0,"index":2204},{"krate":0,"index":2206},{"krate":0,"index":2208},{"krate":0,"index":2210},{"krate":0,"index":2211},{"krate":0,"index":2212},{"krate":0,"index":2215},{"krate":0,"index":2216},{"krate":0,"index":2218},{"krate":0,"index":2225},{"krate":0,"index":2227},{"krate":0,"index":2229},{"krate":0,"index":2230},{"krate":0,"index":2231},{"krate":0,"index":2233},{"krate":0,"index":2234},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":2236},{"krate":0,"index":2237},{"krate":0,"index":2239},{"krate":0,"index":2240},{"krate":0,"index":2242},{"krate":0,"index":2243},{"krate":0,"index":2245},{"krate":0,"index":2246},{"krate":0,"index":2248},{"krate":0,"index":2249},{"krate":0,"index":2251},{"krate":0,"index":2252},{"krate":0,"index":2254},{"krate":0,"index":2255},{"krate":0,"index":2257},{"krate":0,"index":2258},{"krate":0,"index":2260},{"krate":0,"index":2261},{"krate":0,"index":2263},{"krate":0,"index":2264},{"krate":0,"index":2266},{"krate":0,"index":2267},{"krate":0,"index":2269},{"krate":0,"index":2270},{"krate":0,"index":2272},{"krate":0,"index":2273},{"krate":0,"index":2275},{"krate":0,"index":2276},{"krate":0,"index":2278},{"krate":0,"index":2279},{"krate":0,"index":2281},{"krate":0,"index":2282},{"krate":0,"index":2284},{"krate":0,"index":2285},{"krate":0,"index":2287},{"krate":0,"index":2288},{"krate":0,"index":2290},{"krate":0,"index":2291},{"krate":0,"index":2293},{"krate":0,"index":2294},{"krate":0,"index":2310},{"krate":0,"index":2323},{"krate":0,"index":2325},{"krate":0,"index":620}],"decl_id":null,"docs":" Various modifiers for components.\n","sig":null,"attributes":[{"value":"/ Various modifiers for components.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":119803,"byte_end":119840,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1907},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":120160,"byte_end":120163,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"Day","qualname":"::format_description::modifier::Day","value":"Day { padding }","parent":null,"children":[{"krate":0,"index":1908}],"decl_id":null,"docs":" Day of the month.\n","sig":null,"attributes":[{"value":"/ Day of the month.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":120064,"byte_end":120085,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"non_exhaustive","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":120086,"byte_end":120103,"line_start":13,"line_end":13,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1908},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":120223,"byte_end":120230,"line_start":17,"line_end":17,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Day::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":1907},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":120170,"byte_end":120214,"line_start":16,"line_end":16,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1922},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":120431,"byte_end":120440,"line_start":25,"line_end":25,"column_start":5,"column_end":14},"name":"Numerical","qualname":"::format_description::modifier::MonthRepr::Numerical","value":"MonthRepr::Numerical","parent":{"krate":0,"index":1921},"children":[],"decl_id":null,"docs":" The number of the month (January is 1, December is 12).\n","sig":null,"attributes":[{"value":"/ The number of the month (January is 1, December is 12).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":120367,"byte_end":120426,"line_start":24,"line_end":24,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1924},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":120504,"byte_end":120508,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"Long","qualname":"::format_description::modifier::MonthRepr::Long","value":"MonthRepr::Long","parent":{"krate":0,"index":1921},"children":[],"decl_id":null,"docs":" The long form of the month name (e.g. \"January\").\n","sig":null,"attributes":[{"value":"/ The long form of the month name (e.g. \"January\").","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":120446,"byte_end":120499,"line_start":26,"line_end":26,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1926},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":120569,"byte_end":120574,"line_start":29,"line_end":29,"column_start":5,"column_end":10},"name":"Short","qualname":"::format_description::modifier::MonthRepr::Short","value":"MonthRepr::Short","parent":{"krate":0,"index":1921},"children":[],"decl_id":null,"docs":" The short form of the month name (e.g. \"Jan\").\n","sig":null,"attributes":[{"value":"/ The short form of the month name (e.g. \"Jan\").","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":120514,"byte_end":120564,"line_start":28,"line_end":28,"column_start":5,"column_end":55}}]},{"kind":"Enum","id":{"krate":0,"index":1921},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":120351,"byte_end":120360,"line_start":23,"line_end":23,"column_start":10,"column_end":19},"name":"MonthRepr","qualname":"::format_description::modifier::MonthRepr","value":"pub enum MonthRepr { Numerical, Long, Short, }","parent":null,"children":[{"krate":0,"index":1922},{"krate":0,"index":1924},{"krate":0,"index":1926}],"decl_id":null,"docs":" The representation of a month.\n","sig":null,"attributes":[{"value":"/ The representation of a month.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":120244,"byte_end":120278,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"non_exhaustive","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":120279,"byte_end":120296,"line_start":21,"line_end":21,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1939},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":120676,"byte_end":120681,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"Month","qualname":"::format_description::modifier::Month","value":"Month { padding, repr, case_sensitive }","parent":null,"children":[{"krate":0,"index":1940},{"krate":0,"index":1941},{"krate":0,"index":1942}],"decl_id":null,"docs":" Month of the year.\n","sig":null,"attributes":[{"value":"/ Month of the year.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":120579,"byte_end":120601,"line_start":32,"line_end":32,"column_start":1,"column_end":23}},{"value":"non_exhaustive","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":120602,"byte_end":120619,"line_start":33,"line_end":33,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1940},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":120741,"byte_end":120748,"line_start":37,"line_end":37,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Month::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":1939},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":120688,"byte_end":120732,"line_start":36,"line_end":36,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":1941},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":120819,"byte_end":120823,"line_start":39,"line_end":39,"column_start":9,"column_end":13},"name":"repr","qualname":"::format_description::modifier::Month::repr","value":"format_description::modifier::MonthRepr","parent":{"krate":0,"index":1939},"children":[],"decl_id":null,"docs":" What form of representation should be used?\n","sig":null,"attributes":[{"value":"/ What form of representation should be used?","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":120763,"byte_end":120810,"line_start":38,"line_end":38,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1942},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":120894,"byte_end":120908,"line_start":41,"line_end":41,"column_start":9,"column_end":23},"name":"case_sensitive","qualname":"::format_description::modifier::Month::case_sensitive","value":"bool","parent":{"krate":0,"index":1939},"children":[],"decl_id":null,"docs":" Is the value case sensitive when parsing?\n","sig":null,"attributes":[{"value":"/ Is the value case sensitive when parsing?","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":120840,"byte_end":120885,"line_start":40,"line_end":40,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1955},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":121022,"byte_end":121029,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"Ordinal","qualname":"::format_description::modifier::Ordinal","value":"Ordinal { padding }","parent":null,"children":[{"krate":0,"index":1956}],"decl_id":null,"docs":" Ordinal day of the year.\n","sig":null,"attributes":[{"value":"/ Ordinal day of the year.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":120919,"byte_end":120947,"line_start":44,"line_end":44,"column_start":1,"column_end":29}},{"value":"non_exhaustive","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":120948,"byte_end":120965,"line_start":45,"line_end":45,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1956},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":121089,"byte_end":121096,"line_start":49,"line_end":49,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Ordinal::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":1955},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":121036,"byte_end":121080,"line_start":48,"line_end":48,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1970},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":121305,"byte_end":121310,"line_start":57,"line_end":57,"column_start":5,"column_end":10},"name":"Short","qualname":"::format_description::modifier::WeekdayRepr::Short","value":"WeekdayRepr::Short","parent":{"krate":0,"index":1969},"children":[],"decl_id":null,"docs":" The short form of the weekday (e.g. \"Mon\").\n","sig":null,"attributes":[{"value":"/ The short form of the weekday (e.g. \"Mon\").","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":121253,"byte_end":121300,"line_start":56,"line_end":56,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1972},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":121370,"byte_end":121374,"line_start":59,"line_end":59,"column_start":5,"column_end":9},"name":"Long","qualname":"::format_description::modifier::WeekdayRepr::Long","value":"WeekdayRepr::Long","parent":{"krate":0,"index":1969},"children":[],"decl_id":null,"docs":" The long form of the weekday (e.g. \"Monday\").\n","sig":null,"attributes":[{"value":"/ The long form of the weekday (e.g. \"Monday\").","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":121316,"byte_end":121365,"line_start":58,"line_end":58,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1974},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":121540,"byte_end":121546,"line_start":63,"line_end":63,"column_start":5,"column_end":11},"name":"Sunday","qualname":"::format_description::modifier::WeekdayRepr::Sunday","value":"WeekdayRepr::Sunday","parent":{"krate":0,"index":1969},"children":[],"decl_id":null,"docs":" A numerical representation using Sunday as the first day of the week.","sig":null,"attributes":[{"value":"/ A numerical representation using Sunday as the first day of the week.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":121380,"byte_end":121453,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":121458,"byte_end":121461,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Sunday is either 0 or 1, depending on the other modifier's value.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":121466,"byte_end":121535,"line_start":62,"line_end":62,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1976},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":121712,"byte_end":121718,"line_start":67,"line_end":67,"column_start":5,"column_end":11},"name":"Monday","qualname":"::format_description::modifier::WeekdayRepr::Monday","value":"WeekdayRepr::Monday","parent":{"krate":0,"index":1969},"children":[],"decl_id":null,"docs":" A numerical representation using Monday as the first day of the week.","sig":null,"attributes":[{"value":"/ A numerical representation using Monday as the first day of the week.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":121552,"byte_end":121625,"line_start":64,"line_end":64,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":121630,"byte_end":121633,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Monday is either 0 or 1, depending on the other modifier's value.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":121638,"byte_end":121707,"line_start":66,"line_end":66,"column_start":5,"column_end":74}}]},{"kind":"Enum","id":{"krate":0,"index":1969},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":121235,"byte_end":121246,"line_start":55,"line_end":55,"column_start":10,"column_end":21},"name":"WeekdayRepr","qualname":"::format_description::modifier::WeekdayRepr","value":"pub enum WeekdayRepr { Short, Long, Sunday, Monday, }","parent":null,"children":[{"krate":0,"index":1970},{"krate":0,"index":1972},{"krate":0,"index":1974},{"krate":0,"index":1976}],"decl_id":null,"docs":" The representation used for the day of the week.\n","sig":null,"attributes":[{"value":"/ The representation used for the day of the week.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":121110,"byte_end":121162,"line_start":52,"line_end":52,"column_start":1,"column_end":53}},{"value":"non_exhaustive","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":121163,"byte_end":121180,"line_start":53,"line_end":53,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1989},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":121818,"byte_end":121825,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"Weekday","qualname":"::format_description::modifier::Weekday","value":"Weekday { repr, one_indexed, case_sensitive }","parent":null,"children":[{"krate":0,"index":1990},{"krate":0,"index":1991},{"krate":0,"index":1992}],"decl_id":null,"docs":" Day of the week.\n","sig":null,"attributes":[{"value":"/ Day of the week.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":121723,"byte_end":121743,"line_start":70,"line_end":70,"column_start":1,"column_end":21}},{"value":"non_exhaustive","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":121744,"byte_end":121761,"line_start":71,"line_end":71,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1990},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":121888,"byte_end":121892,"line_start":75,"line_end":75,"column_start":9,"column_end":13},"name":"repr","qualname":"::format_description::modifier::Weekday::repr","value":"format_description::modifier::WeekdayRepr","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" What form of representation should be used?\n","sig":null,"attributes":[{"value":"/ What form of representation should be used?","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":121832,"byte_end":121879,"line_start":74,"line_end":74,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1991},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":121996,"byte_end":122007,"line_start":77,"line_end":77,"column_start":9,"column_end":20},"name":"one_indexed","qualname":"::format_description::modifier::Weekday::one_indexed","value":"bool","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" When using a numerical representation, should it be zero or one-indexed?\n","sig":null,"attributes":[{"value":"/ When using a numerical representation, should it be zero or one-indexed?","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":121911,"byte_end":121987,"line_start":76,"line_end":76,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":1992},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":122073,"byte_end":122087,"line_start":79,"line_end":79,"column_start":9,"column_end":23},"name":"case_sensitive","qualname":"::format_description::modifier::Weekday::case_sensitive","value":"bool","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" Is the value case sensitive when parsing?\n","sig":null,"attributes":[{"value":"/ Is the value case sensitive when parsing?","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":122019,"byte_end":122064,"line_start":78,"line_end":78,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2006},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":122292,"byte_end":122295,"line_start":87,"line_end":87,"column_start":5,"column_end":8},"name":"Iso","qualname":"::format_description::modifier::WeekNumberRepr::Iso","value":"WeekNumberRepr::Iso","parent":{"krate":0,"index":2005},"children":[],"decl_id":null,"docs":" Week 1 is the week that contains January 4.\n","sig":null,"attributes":[{"value":"/ Week 1 is the week that contains January 4.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":122240,"byte_end":122287,"line_start":86,"line_end":86,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2008},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":122365,"byte_end":122371,"line_start":89,"line_end":89,"column_start":5,"column_end":11},"name":"Sunday","qualname":"::format_description::modifier::WeekNumberRepr::Sunday","value":"WeekNumberRepr::Sunday","parent":{"krate":0,"index":2005},"children":[],"decl_id":null,"docs":" Week 1 begins on the first Sunday of the calendar year.\n","sig":null,"attributes":[{"value":"/ Week 1 begins on the first Sunday of the calendar year.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":122301,"byte_end":122360,"line_start":88,"line_end":88,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2010},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":122441,"byte_end":122447,"line_start":91,"line_end":91,"column_start":5,"column_end":11},"name":"Monday","qualname":"::format_description::modifier::WeekNumberRepr::Monday","value":"WeekNumberRepr::Monday","parent":{"krate":0,"index":2005},"children":[],"decl_id":null,"docs":" Week 1 begins on the first Monday of the calendar year.\n","sig":null,"attributes":[{"value":"/ Week 1 begins on the first Monday of the calendar year.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":122377,"byte_end":122436,"line_start":90,"line_end":90,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":2005},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":122219,"byte_end":122233,"line_start":85,"line_end":85,"column_start":10,"column_end":24},"name":"WeekNumberRepr","qualname":"::format_description::modifier::WeekNumberRepr","value":"pub enum WeekNumberRepr { Iso, Sunday, Monday, }","parent":null,"children":[{"krate":0,"index":2006},{"krate":0,"index":2008},{"krate":0,"index":2010}],"decl_id":null,"docs":" The representation used for the week number.\n","sig":null,"attributes":[{"value":"/ The representation used for the week number.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":122098,"byte_end":122146,"line_start":82,"line_end":82,"column_start":1,"column_end":49}},{"value":"non_exhaustive","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":122147,"byte_end":122164,"line_start":83,"line_end":83,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2023},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":122552,"byte_end":122562,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"WeekNumber","qualname":"::format_description::modifier::WeekNumber","value":"WeekNumber { padding, repr }","parent":null,"children":[{"krate":0,"index":2024},{"krate":0,"index":2025}],"decl_id":null,"docs":" Week within the year.\n","sig":null,"attributes":[{"value":"/ Week within the year.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":122452,"byte_end":122477,"line_start":94,"line_end":94,"column_start":1,"column_end":26}},{"value":"non_exhaustive","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":122478,"byte_end":122495,"line_start":95,"line_end":95,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2024},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":122622,"byte_end":122629,"line_start":99,"line_end":99,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::WeekNumber::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":122569,"byte_end":122613,"line_start":98,"line_end":98,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":2025},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":122700,"byte_end":122704,"line_start":101,"line_end":101,"column_start":9,"column_end":13},"name":"repr","qualname":"::format_description::modifier::WeekNumber::repr","value":"format_description::modifier::WeekNumberRepr","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" What kind of representation should be used?\n","sig":null,"attributes":[{"value":"/ What kind of representation should be used?","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":122644,"byte_end":122691,"line_start":100,"line_end":100,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2039},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":122894,"byte_end":122898,"line_start":109,"line_end":109,"column_start":5,"column_end":9},"name":"Full","qualname":"::format_description::modifier::YearRepr::Full","value":"YearRepr::Full","parent":{"krate":0,"index":2038},"children":[],"decl_id":null,"docs":" The full value of the year.\n","sig":null,"attributes":[{"value":"/ The full value of the year.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":122858,"byte_end":122889,"line_start":108,"line_end":108,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2041},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":122950,"byte_end":122957,"line_start":111,"line_end":111,"column_start":5,"column_end":12},"name":"LastTwo","qualname":"::format_description::modifier::YearRepr::LastTwo","value":"YearRepr::LastTwo","parent":{"krate":0,"index":2038},"children":[],"decl_id":null,"docs":" Only the last two digits of the year.\n","sig":null,"attributes":[{"value":"/ Only the last two digits of the year.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":122904,"byte_end":122945,"line_start":110,"line_end":110,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":2038},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":122843,"byte_end":122851,"line_start":107,"line_end":107,"column_start":10,"column_end":18},"name":"YearRepr","qualname":"::format_description::modifier::YearRepr","value":"pub enum YearRepr { Full, LastTwo, }","parent":null,"children":[{"krate":0,"index":2039},{"krate":0,"index":2041}],"decl_id":null,"docs":" The representation used for a year value.\n","sig":null,"attributes":[{"value":"/ The representation used for a year value.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":122725,"byte_end":122770,"line_start":104,"line_end":104,"column_start":1,"column_end":46}},{"value":"non_exhaustive","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":122771,"byte_end":122788,"line_start":105,"line_end":105,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2054},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":123058,"byte_end":123062,"line_start":117,"line_end":117,"column_start":12,"column_end":16},"name":"Year","qualname":"::format_description::modifier::Year","value":"Year { padding, repr, iso_week_based, sign_is_mandatory }","parent":null,"children":[{"krate":0,"index":2055},{"krate":0,"index":2056},{"krate":0,"index":2057},{"krate":0,"index":2058}],"decl_id":null,"docs":" Year of the date.\n","sig":null,"attributes":[{"value":"/ Year of the date.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":122962,"byte_end":122983,"line_start":114,"line_end":114,"column_start":1,"column_end":22}},{"value":"non_exhaustive","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":122984,"byte_end":123001,"line_start":115,"line_end":115,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2055},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":123122,"byte_end":123129,"line_start":119,"line_end":119,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Year::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":2054},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":123069,"byte_end":123113,"line_start":118,"line_end":118,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":2056},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":123200,"byte_end":123204,"line_start":121,"line_end":121,"column_start":9,"column_end":13},"name":"repr","qualname":"::format_description::modifier::Year::repr","value":"format_description::modifier::YearRepr","parent":{"krate":0,"index":2054},"children":[],"decl_id":null,"docs":" What kind of representation should be used?\n","sig":null,"attributes":[{"value":"/ What kind of representation should be used?","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":123144,"byte_end":123191,"line_start":120,"line_end":120,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2057},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":123309,"byte_end":123323,"line_start":123,"line_end":123,"column_start":9,"column_end":23},"name":"iso_week_based","qualname":"::format_description::modifier::Year::iso_week_based","value":"bool","parent":{"krate":0,"index":2054},"children":[],"decl_id":null,"docs":" Whether the value is based on the ISO week number or the Gregorian calendar.\n","sig":null,"attributes":[{"value":"/ Whether the value is based on the ISO week number or the Gregorian calendar.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":123220,"byte_end":123300,"line_start":122,"line_end":122,"column_start":5,"column_end":85}}]},{"kind":"Field","id":{"krate":0,"index":2058},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":123433,"byte_end":123450,"line_start":125,"line_end":125,"column_start":9,"column_end":26},"name":"sign_is_mandatory","qualname":"::format_description::modifier::Year::sign_is_mandatory","value":"bool","parent":{"krate":0,"index":2054},"children":[],"decl_id":null,"docs":" Whether the `+` sign is present when a positive year contains fewer than five digits.\n","sig":null,"attributes":[{"value":"/ Whether the `+` sign is present when a positive year contains fewer than five digits.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":123335,"byte_end":123424,"line_start":124,"line_end":124,"column_start":5,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":2071},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":123610,"byte_end":123614,"line_start":133,"line_end":133,"column_start":12,"column_end":16},"name":"Hour","qualname":"::format_description::modifier::Hour","value":"Hour { padding, is_12_hour_clock }","parent":null,"children":[{"krate":0,"index":2072},{"krate":0,"index":2073}],"decl_id":null,"docs":" Hour of the day.\n","sig":null,"attributes":[{"value":"/ Hour of the day.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":123515,"byte_end":123535,"line_start":130,"line_end":130,"column_start":1,"column_end":21}},{"value":"non_exhaustive","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":123536,"byte_end":123553,"line_start":131,"line_end":131,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2072},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":123674,"byte_end":123681,"line_start":135,"line_end":135,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Hour::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":2071},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":123621,"byte_end":123665,"line_start":134,"line_end":134,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":2073},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":123759,"byte_end":123775,"line_start":137,"line_end":137,"column_start":9,"column_end":25},"name":"is_12_hour_clock","qualname":"::format_description::modifier::Hour::is_12_hour_clock","value":"bool","parent":{"krate":0,"index":2071},"children":[],"decl_id":null,"docs":" Is the hour displayed using a 12 or 24-hour clock?\n","sig":null,"attributes":[{"value":"/ Is the hour displayed using a 12 or 24-hour clock?","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":123696,"byte_end":123750,"line_start":136,"line_end":136,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":2086},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":123888,"byte_end":123894,"line_start":143,"line_end":143,"column_start":12,"column_end":18},"name":"Minute","qualname":"::format_description::modifier::Minute","value":"Minute { padding }","parent":null,"children":[{"krate":0,"index":2087}],"decl_id":null,"docs":" Minute within the hour.\n","sig":null,"attributes":[{"value":"/ Minute within the hour.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":123786,"byte_end":123813,"line_start":140,"line_end":140,"column_start":1,"column_end":28}},{"value":"non_exhaustive","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":123814,"byte_end":123831,"line_start":141,"line_end":141,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2087},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":123954,"byte_end":123961,"line_start":145,"line_end":145,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Minute::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":2086},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":123901,"byte_end":123945,"line_start":144,"line_end":144,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2100},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":124077,"byte_end":124083,"line_start":151,"line_end":151,"column_start":12,"column_end":18},"name":"Period","qualname":"::format_description::modifier::Period","value":"Period { is_uppercase, case_sensitive }","parent":null,"children":[{"krate":0,"index":2101},{"krate":0,"index":2102}],"decl_id":null,"docs":" AM/PM part of the time.\n","sig":null,"attributes":[{"value":"/ AM/PM part of the time.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":123975,"byte_end":124002,"line_start":148,"line_end":148,"column_start":1,"column_end":28}},{"value":"non_exhaustive","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":124003,"byte_end":124020,"line_start":149,"line_end":149,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2101},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":124140,"byte_end":124152,"line_start":153,"line_end":153,"column_start":9,"column_end":21},"name":"is_uppercase","qualname":"::format_description::modifier::Period::is_uppercase","value":"bool","parent":{"krate":0,"index":2100},"children":[],"decl_id":null,"docs":" Is the period uppercase or lowercase?\n","sig":null,"attributes":[{"value":"/ Is the period uppercase or lowercase?","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":124090,"byte_end":124131,"line_start":152,"line_end":152,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":2102},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":124318,"byte_end":124332,"line_start":157,"line_end":157,"column_start":9,"column_end":23},"name":"case_sensitive","qualname":"::format_description::modifier::Period::case_sensitive","value":"bool","parent":{"krate":0,"index":2100},"children":[],"decl_id":null,"docs":" Is the value case sensitive when parsing?","sig":null,"attributes":[{"value":"/ Is the value case sensitive when parsing?","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":124164,"byte_end":124209,"line_start":154,"line_end":154,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":124214,"byte_end":124217,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Note that when `false`, the `is_uppercase` field has no effect on parsing behavior.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":124222,"byte_end":124309,"line_start":156,"line_end":156,"column_start":5,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":2115},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":124447,"byte_end":124453,"line_start":163,"line_end":163,"column_start":12,"column_end":18},"name":"Second","qualname":"::format_description::modifier::Second","value":"Second { padding }","parent":null,"children":[{"krate":0,"index":2116}],"decl_id":null,"docs":" Second within the minute.\n","sig":null,"attributes":[{"value":"/ Second within the minute.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":124343,"byte_end":124372,"line_start":160,"line_end":160,"column_start":1,"column_end":30}},{"value":"non_exhaustive","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":124373,"byte_end":124390,"line_start":161,"line_end":161,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2116},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":124513,"byte_end":124520,"line_start":165,"line_end":165,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Second::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":2115},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":124460,"byte_end":124504,"line_start":164,"line_end":164,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2130},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":124719,"byte_end":124722,"line_start":173,"line_end":173,"column_start":5,"column_end":8},"name":"One","qualname":"::format_description::modifier::SubsecondDigits::One","value":"SubsecondDigits::One","parent":{"krate":0,"index":2129},"children":[],"decl_id":null,"docs":" Exactly one digit.\n","sig":null,"attributes":[{"value":"/ Exactly one digit.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":124692,"byte_end":124714,"line_start":172,"line_end":172,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2132},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":124756,"byte_end":124759,"line_start":175,"line_end":175,"column_start":5,"column_end":8},"name":"Two","qualname":"::format_description::modifier::SubsecondDigits::Two","value":"SubsecondDigits::Two","parent":{"krate":0,"index":2129},"children":[],"decl_id":null,"docs":" Exactly two digits.\n","sig":null,"attributes":[{"value":"/ Exactly two digits.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":124728,"byte_end":124751,"line_start":174,"line_end":174,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2134},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":124795,"byte_end":124800,"line_start":177,"line_end":177,"column_start":5,"column_end":10},"name":"Three","qualname":"::format_description::modifier::SubsecondDigits::Three","value":"SubsecondDigits::Three","parent":{"krate":0,"index":2129},"children":[],"decl_id":null,"docs":" Exactly three digits.\n","sig":null,"attributes":[{"value":"/ Exactly three digits.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":124765,"byte_end":124790,"line_start":176,"line_end":176,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2136},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":124835,"byte_end":124839,"line_start":179,"line_end":179,"column_start":5,"column_end":9},"name":"Four","qualname":"::format_description::modifier::SubsecondDigits::Four","value":"SubsecondDigits::Four","parent":{"krate":0,"index":2129},"children":[],"decl_id":null,"docs":" Exactly four digits.\n","sig":null,"attributes":[{"value":"/ Exactly four digits.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":124806,"byte_end":124830,"line_start":178,"line_end":178,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2138},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":124874,"byte_end":124878,"line_start":181,"line_end":181,"column_start":5,"column_end":9},"name":"Five","qualname":"::format_description::modifier::SubsecondDigits::Five","value":"SubsecondDigits::Five","parent":{"krate":0,"index":2129},"children":[],"decl_id":null,"docs":" Exactly five digits.\n","sig":null,"attributes":[{"value":"/ Exactly five digits.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":124845,"byte_end":124869,"line_start":180,"line_end":180,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2140},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":124912,"byte_end":124915,"line_start":183,"line_end":183,"column_start":5,"column_end":8},"name":"Six","qualname":"::format_description::modifier::SubsecondDigits::Six","value":"SubsecondDigits::Six","parent":{"krate":0,"index":2129},"children":[],"decl_id":null,"docs":" Exactly six digits.\n","sig":null,"attributes":[{"value":"/ Exactly six digits.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":124884,"byte_end":124907,"line_start":182,"line_end":182,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2142},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":124951,"byte_end":124956,"line_start":185,"line_end":185,"column_start":5,"column_end":10},"name":"Seven","qualname":"::format_description::modifier::SubsecondDigits::Seven","value":"SubsecondDigits::Seven","parent":{"krate":0,"index":2129},"children":[],"decl_id":null,"docs":" Exactly seven digits.\n","sig":null,"attributes":[{"value":"/ Exactly seven digits.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":124921,"byte_end":124946,"line_start":184,"line_end":184,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2144},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":124992,"byte_end":124997,"line_start":187,"line_end":187,"column_start":5,"column_end":10},"name":"Eight","qualname":"::format_description::modifier::SubsecondDigits::Eight","value":"SubsecondDigits::Eight","parent":{"krate":0,"index":2129},"children":[],"decl_id":null,"docs":" Exactly eight digits.\n","sig":null,"attributes":[{"value":"/ Exactly eight digits.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":124962,"byte_end":124987,"line_start":186,"line_end":186,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2146},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":125032,"byte_end":125036,"line_start":189,"line_end":189,"column_start":5,"column_end":9},"name":"Nine","qualname":"::format_description::modifier::SubsecondDigits::Nine","value":"SubsecondDigits::Nine","parent":{"krate":0,"index":2129},"children":[],"decl_id":null,"docs":" Exactly nine digits.\n","sig":null,"attributes":[{"value":"/ Exactly nine digits.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":125003,"byte_end":125027,"line_start":188,"line_end":188,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2148},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":125174,"byte_end":125183,"line_start":192,"line_end":192,"column_start":5,"column_end":14},"name":"OneOrMore","qualname":"::format_description::modifier::SubsecondDigits::OneOrMore","value":"SubsecondDigits::OneOrMore","parent":{"krate":0,"index":2129},"children":[],"decl_id":null,"docs":" Any number of digits (up to nine) that is at least one. When formatting, the minimum digits\n necessary will be used.\n","sig":null,"attributes":[{"value":"/ Any number of digits (up to nine) that is at least one. When formatting, the minimum digits","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":125042,"byte_end":125137,"line_start":190,"line_end":190,"column_start":5,"column_end":100}},{"value":"/ necessary will be used.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":125142,"byte_end":125169,"line_start":191,"line_end":191,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":2129},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":124670,"byte_end":124685,"line_start":171,"line_end":171,"column_start":10,"column_end":25},"name":"SubsecondDigits","qualname":"::format_description::modifier::SubsecondDigits","value":"pub enum SubsecondDigits {\n    One,\n    Two,\n    Three,\n    Four,\n    Five,\n    Six,\n    Seven,\n    Eight,\n    Nine,\n    OneOrMore,\n}","parent":null,"children":[{"krate":0,"index":2130},{"krate":0,"index":2132},{"krate":0,"index":2134},{"krate":0,"index":2136},{"krate":0,"index":2138},{"krate":0,"index":2140},{"krate":0,"index":2142},{"krate":0,"index":2144},{"krate":0,"index":2146},{"krate":0,"index":2148}],"decl_id":null,"docs":" The number of digits present in a subsecond representation.\n","sig":null,"attributes":[{"value":"/ The number of digits present in a subsecond representation.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":124534,"byte_end":124597,"line_start":168,"line_end":168,"column_start":1,"column_end":64}},{"value":"non_exhaustive","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":124598,"byte_end":124615,"line_start":169,"line_end":169,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2161},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":125295,"byte_end":125304,"line_start":198,"line_end":198,"column_start":12,"column_end":21},"name":"Subsecond","qualname":"::format_description::modifier::Subsecond","value":"Subsecond { digits }","parent":null,"children":[{"krate":0,"index":2162}],"decl_id":null,"docs":" Subsecond within the second.\n","sig":null,"attributes":[{"value":"/ Subsecond within the second.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":125188,"byte_end":125220,"line_start":195,"line_end":195,"column_start":1,"column_end":33}},{"value":"non_exhaustive","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":125221,"byte_end":125238,"line_start":196,"line_end":196,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2162},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":125369,"byte_end":125375,"line_start":200,"line_end":200,"column_start":9,"column_end":15},"name":"digits","qualname":"::format_description::modifier::Subsecond::digits","value":"format_description::modifier::SubsecondDigits","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" How many digits are present in the component?\n","sig":null,"attributes":[{"value":"/ How many digits are present in the component?","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":125311,"byte_end":125360,"line_start":199,"line_end":199,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":2175},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":125555,"byte_end":125565,"line_start":208,"line_end":208,"column_start":12,"column_end":22},"name":"OffsetHour","qualname":"::format_description::modifier::OffsetHour","value":"OffsetHour { sign_is_mandatory, padding }","parent":null,"children":[{"krate":0,"index":2176},{"krate":0,"index":2177}],"decl_id":null,"docs":" Hour of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Hour of the UTC offset.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":125453,"byte_end":125480,"line_start":205,"line_end":205,"column_start":1,"column_end":28}},{"value":"non_exhaustive","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":125481,"byte_end":125498,"line_start":206,"line_end":206,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2176},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":125636,"byte_end":125653,"line_start":210,"line_end":210,"column_start":9,"column_end":26},"name":"sign_is_mandatory","qualname":"::format_description::modifier::OffsetHour::sign_is_mandatory","value":"bool","parent":{"krate":0,"index":2175},"children":[],"decl_id":null,"docs":" Whether the `+` sign is present on positive values.\n","sig":null,"attributes":[{"value":"/ Whether the `+` sign is present on positive values.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":125572,"byte_end":125627,"line_start":209,"line_end":209,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":2177},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":125718,"byte_end":125725,"line_start":212,"line_end":212,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::OffsetHour::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":2175},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":125665,"byte_end":125709,"line_start":211,"line_end":211,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2190},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":125859,"byte_end":125871,"line_start":218,"line_end":218,"column_start":12,"column_end":24},"name":"OffsetMinute","qualname":"::format_description::modifier::OffsetMinute","value":"OffsetMinute { padding }","parent":null,"children":[{"krate":0,"index":2191}],"decl_id":null,"docs":" Minute within the hour of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Minute within the hour of the UTC offset.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":125739,"byte_end":125784,"line_start":215,"line_end":215,"column_start":1,"column_end":46}},{"value":"non_exhaustive","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":125785,"byte_end":125802,"line_start":216,"line_end":216,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2191},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":125931,"byte_end":125938,"line_start":220,"line_end":220,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::OffsetMinute::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":2190},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":125878,"byte_end":125922,"line_start":219,"line_end":219,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2204},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":126074,"byte_end":126086,"line_start":226,"line_end":226,"column_start":12,"column_end":24},"name":"OffsetSecond","qualname":"::format_description::modifier::OffsetSecond","value":"OffsetSecond { padding }","parent":null,"children":[{"krate":0,"index":2205}],"decl_id":null,"docs":" Second within the minute of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Second within the minute of the UTC offset.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":125952,"byte_end":125999,"line_start":223,"line_end":223,"column_start":1,"column_end":48}},{"value":"non_exhaustive","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":126000,"byte_end":126017,"line_start":224,"line_end":224,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2205},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":126146,"byte_end":126153,"line_start":228,"line_end":228,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::OffsetSecond::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":2204},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":126093,"byte_end":126137,"line_start":227,"line_end":227,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2219},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":126389,"byte_end":126394,"line_start":237,"line_end":237,"column_start":5,"column_end":10},"name":"Space","qualname":"::format_description::modifier::Padding::Space","value":"Padding::Space","parent":{"krate":0,"index":2218},"children":[],"decl_id":null,"docs":" A space character (` `) should be used as padding.\n","sig":null,"attributes":[{"value":"/ A space character (` `) should be used as padding.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":126330,"byte_end":126384,"line_start":236,"line_end":236,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2221},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":126458,"byte_end":126462,"line_start":239,"line_end":239,"column_start":5,"column_end":9},"name":"Zero","qualname":"::format_description::modifier::Padding::Zero","value":"Padding::Zero","parent":{"krate":0,"index":2218},"children":[],"decl_id":null,"docs":" A zero character (`0`) should be used as padding.\n","sig":null,"attributes":[{"value":"/ A zero character (`0`) should be used as padding.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":126400,"byte_end":126453,"line_start":238,"line_end":238,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2223},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":126582,"byte_end":126586,"line_start":242,"line_end":242,"column_start":5,"column_end":9},"name":"None","qualname":"::format_description::modifier::Padding::None","value":"Padding::None","parent":{"krate":0,"index":2218},"children":[],"decl_id":null,"docs":" There is no padding. This can result in a width below the otherwise minimum number of\n characters.\n","sig":null,"attributes":[{"value":"/ There is no padding. This can result in a width below the otherwise minimum number of","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":126468,"byte_end":126557,"line_start":240,"line_end":240,"column_start":5,"column_end":94}},{"value":"/ characters.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":126562,"byte_end":126577,"line_start":241,"line_end":241,"column_start":5,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":2218},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":126316,"byte_end":126323,"line_start":235,"line_end":235,"column_start":10,"column_end":17},"name":"Padding","qualname":"::format_description::modifier::Padding","value":"pub enum Padding { Space, Zero, None, }","parent":null,"children":[{"krate":0,"index":2219},{"krate":0,"index":2221},{"krate":0,"index":2223}],"decl_id":null,"docs":" Type of padding to ensure a minimum width.\n","sig":null,"attributes":[{"value":"/ Type of padding to ensure a minimum width.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":126197,"byte_end":126243,"line_start":232,"line_end":232,"column_start":1,"column_end":47}},{"value":"non_exhaustive","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":126244,"byte_end":126261,"line_start":233,"line_end":233,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":653},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/parse.rs","byte_start":142223,"byte_end":142228,"line_start":84,"line_end":84,"column_start":8,"column_end":13},"name":"parse","qualname":"::format_description::parse::parse","value":"pub fn parse(&str) -> Result<Vec<FormatItem>, InvalidFormatDescription>","parent":null,"children":[],"decl_id":null,"docs":" Parse a sequence of items from the format description.","sig":null,"attributes":[{"value":"/ Parse a sequence of items from the format description.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/parse.rs","byte_start":141962,"byte_end":142020,"line_start":79,"line_end":79,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/parse.rs","byte_start":142021,"byte_end":142024,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ The syntax for the format description can be found in [the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/parse.rs","byte_start":142025,"byte_end":142087,"line_start":81,"line_end":81,"column_start":1,"column_end":63}},{"value":"/ book](https://time-rs.github.io/book/api/format-description.html).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/parse.rs","byte_start":142088,"byte_end":142158,"line_start":82,"line_end":82,"column_start":1,"column_end":71}}]},{"kind":"Mod","id":{"krate":0,"index":676},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":108391,"byte_end":108401,"line_start":40,"line_end":40,"column_start":9,"column_end":19},"name":"well_known","qualname":"::format_description::well_known","value":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","parent":null,"children":[{"krate":0,"index":2334},{"krate":0,"index":2336},{"krate":0,"index":2338},{"krate":0,"index":2340},{"krate":0,"index":2341},{"krate":0,"index":2342},{"krate":0,"index":2344},{"krate":0,"index":2345},{"krate":0,"index":2347},{"krate":0,"index":2349},{"krate":0,"index":2351},{"krate":0,"index":2353},{"krate":0,"index":2354},{"krate":0,"index":2355},{"krate":0,"index":2357},{"krate":0,"index":2358}],"decl_id":null,"docs":" Well-known formats, typically RFCs.\n","sig":null,"attributes":[{"value":"/ Well-known formats, typically RFCs.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":108343,"byte_end":108382,"line_start":39,"line_end":39,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2334},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":109235,"byte_end":109242,"line_start":63,"line_end":63,"column_start":16,"column_end":23},"name":"Rfc3339","qualname":"::format_description::well_known::Rfc3339","value":"","parent":null,"children":[],"decl_id":null,"docs":" The format described in [RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6).","sig":null,"attributes":[{"value":"/ The format described in [RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":108408,"byte_end":108496,"line_start":41,"line_end":41,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":108501,"byte_end":108504,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Format example: 1985-04-12T23:20:50.52Z","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":108509,"byte_end":108552,"line_start":43,"line_end":43,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":108557,"byte_end":108560,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":108565,"byte_end":108576,"line_start":45,"line_end":45,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description::well_known::Rfc3339, macros::datetime, OffsetDateTime};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":108581,"byte_end":108673,"line_start":46,"line_end":46,"column_start":5,"column_end":97}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":108678,"byte_end":108693,"line_start":47,"line_end":47,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::parse(\"1985-04-12T23:20:50.52Z\", &Rfc3339)?,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":108698,"byte_end":108766,"line_start":48,"line_end":48,"column_start":5,"column_end":73}},{"value":"/     datetime!(1985-04-12 23:20:50.52 +00:00)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":108771,"byte_end":108819,"line_start":49,"line_end":49,"column_start":5,"column_end":53}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":108824,"byte_end":108830,"line_start":50,"line_end":50,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":108835,"byte_end":108865,"line_start":51,"line_end":51,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":108870,"byte_end":108877,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":108882,"byte_end":108885,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":108890,"byte_end":108901,"line_start":54,"line_end":54,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description::well_known::Rfc3339, macros::datetime};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":108906,"byte_end":108982,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":108987,"byte_end":109002,"line_start":56,"line_end":56,"column_start":5,"column_end":20}},{"value":"/     datetime!(1985-04-12 23:20:50.52 +00:00).format(&Rfc3339)?,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":109007,"byte_end":109074,"line_start":57,"line_end":57,"column_start":5,"column_end":72}},{"value":"/     \"1985-04-12T23:20:50.52Z\"","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":109079,"byte_end":109112,"line_start":58,"line_end":58,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":109117,"byte_end":109123,"line_start":59,"line_end":59,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":109128,"byte_end":109158,"line_start":60,"line_end":60,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":109163,"byte_end":109170,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2347},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":110104,"byte_end":110111,"line_start":88,"line_end":88,"column_start":16,"column_end":23},"name":"Rfc2822","qualname":"::format_description::well_known::Rfc2822","value":"","parent":null,"children":[],"decl_id":null,"docs":" The format described in [RFC 2822](https://tools.ietf.org/html/rfc2822#section-3.3).","sig":null,"attributes":[{"value":"/ The format described in [RFC 2822](https://tools.ietf.org/html/rfc2822#section-3.3).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":109249,"byte_end":109337,"line_start":65,"line_end":65,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":109342,"byte_end":109345,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Example: Fri, 21 Nov 1997 09:55:06 -0600","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":109350,"byte_end":109394,"line_start":67,"line_end":67,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":109399,"byte_end":109402,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":109407,"byte_end":109421,"line_start":69,"line_end":69,"column_start":5,"column_end":19}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":109426,"byte_end":109437,"line_start":70,"line_end":70,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description::well_known::Rfc2822, macros::datetime, OffsetDateTime};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":109442,"byte_end":109534,"line_start":71,"line_end":71,"column_start":5,"column_end":97}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":109539,"byte_end":109554,"line_start":72,"line_end":72,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::parse(\"Sat, 12 Jun 1993 13:25:19 GMT\", &Rfc2822)?,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":109559,"byte_end":109633,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/     datetime!(1993-06-12 13:25:19 +00:00)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":109638,"byte_end":109683,"line_start":74,"line_end":74,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":109688,"byte_end":109694,"line_start":75,"line_end":75,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":109699,"byte_end":109729,"line_start":76,"line_end":76,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":109734,"byte_end":109741,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":109746,"byte_end":109749,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":109754,"byte_end":109765,"line_start":79,"line_end":79,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description::well_known::Rfc2822, macros::datetime};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":109770,"byte_end":109846,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":109851,"byte_end":109866,"line_start":81,"line_end":81,"column_start":5,"column_end":20}},{"value":"/     datetime!(1997-11-21 09:55:06 -06:00).format(&Rfc2822)?,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":109871,"byte_end":109935,"line_start":82,"line_end":82,"column_start":5,"column_end":69}},{"value":"/     \"Fri, 21 Nov 1997 09:55:06 -0600\"","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":109940,"byte_end":109981,"line_start":83,"line_end":83,"column_start":5,"column_end":46}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":109986,"byte_end":109992,"line_start":84,"line_end":84,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":109997,"byte_end":110027,"line_start":85,"line_end":85,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":110032,"byte_end":110039,"line_start":86,"line_end":86,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2362},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":110502,"byte_end":110509,"line_start":100,"line_end":100,"column_start":5,"column_end":12},"name":"Literal","qualname":"::format_description::FormatItem::Literal","value":"FormatItem::Literal(&'a [u8])","parent":{"krate":0,"index":2360},"children":[],"decl_id":null,"docs":" Bytes that are formatted as-is.","sig":null,"attributes":[{"value":"/ Bytes that are formatted as-is.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":110309,"byte_end":110344,"line_start":96,"line_end":96,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":110349,"byte_end":110352,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ **Note**: If you call the `format` method that returns a `String`, these bytes will be","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":110357,"byte_end":110447,"line_start":98,"line_end":98,"column_start":5,"column_end":95}},{"value":"/ passed through `String::from_utf8_lossy`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":110452,"byte_end":110497,"line_start":99,"line_end":99,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2365},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":110588,"byte_end":110597,"line_start":102,"line_end":102,"column_start":5,"column_end":14},"name":"Component","qualname":"::format_description::FormatItem::Component","value":"FormatItem::Component(Component)","parent":{"krate":0,"index":2360},"children":[],"decl_id":null,"docs":" A minimal representation of a single non-literal item.\n","sig":null,"attributes":[{"value":"/ A minimal representation of a single non-literal item.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":110525,"byte_end":110583,"line_start":101,"line_end":101,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2368},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":110723,"byte_end":110731,"line_start":105,"line_end":105,"column_start":5,"column_end":13},"name":"Compound","qualname":"::format_description::FormatItem::Compound","value":"FormatItem::Compound(&'a [Self])","parent":{"krate":0,"index":2360},"children":[],"decl_id":null,"docs":" A series of literals or components that collectively form a partial or complete\n description.\n","sig":null,"attributes":[{"value":"/ A series of literals or components that collectively form a partial or complete","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":110614,"byte_end":110697,"line_start":103,"line_end":103,"column_start":5,"column_end":88}},{"value":"/ description.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":110702,"byte_end":110718,"line_start":104,"line_end":104,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2371},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":110994,"byte_end":111002,"line_start":110,"line_end":110,"column_start":5,"column_end":13},"name":"Optional","qualname":"::format_description::FormatItem::Optional","value":"FormatItem::Optional(&'a Self)","parent":{"krate":0,"index":2360},"children":[],"decl_id":null,"docs":" A `FormatItem` that may or may not be present when parsing. If parsing fails, there will be\n no effect on the resulting `struct`.","sig":null,"attributes":[{"value":"/ A `FormatItem` that may or may not be present when parsing. If parsing fails, there will be","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":110749,"byte_end":110844,"line_start":106,"line_end":106,"column_start":5,"column_end":100}},{"value":"/ no effect on the resulting `struct`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":110849,"byte_end":110889,"line_start":107,"line_end":107,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":110894,"byte_end":110897,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ This variant has no effect on formatting, as the value is guaranteed to be present.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":110902,"byte_end":110989,"line_start":109,"line_end":109,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2374},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":111237,"byte_end":111242,"line_start":114,"line_end":114,"column_start":5,"column_end":10},"name":"First","qualname":"::format_description::FormatItem::First","value":"FormatItem::First(&'a [Self])","parent":{"krate":0,"index":2360},"children":[],"decl_id":null,"docs":" A series of `FormatItem`s where, when parsing, the first successful parse is used. When\n formatting, the first element of the slice is used.  An empty slice is a no-op when\n formatting or parsing.\n","sig":null,"attributes":[{"value":"/ A series of `FormatItem`s where, when parsing, the first successful parse is used. When","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":111018,"byte_end":111109,"line_start":111,"line_end":111,"column_start":5,"column_end":96}},{"value":"/ formatting, the first element of the slice is used.  An empty slice is a no-op when","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":111114,"byte_end":111201,"line_start":112,"line_end":112,"column_start":5,"column_end":92}},{"value":"/ formatting or parsing.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":111206,"byte_end":111232,"line_start":113,"line_end":113,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":2360},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":110288,"byte_end":110298,"line_start":95,"line_end":95,"column_start":10,"column_end":20},"name":"FormatItem","qualname":"::format_description::FormatItem","value":"pub enum FormatItem<'a> {\n    Literal(&'a [u8]),\n    Component(Component),\n    Compound(&'a [Self]),\n    Optional(&'a Self),\n    First(&'a [Self]),\n}","parent":null,"children":[{"krate":0,"index":2362},{"krate":0,"index":2365},{"krate":0,"index":2368},{"krate":0,"index":2371},{"krate":0,"index":2374}],"decl_id":null,"docs":" A complete description of how to format and parse a type.\n","sig":null,"attributes":[{"value":"/ A complete description of how to format and parse a type.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":110116,"byte_end":110177,"line_start":91,"line_end":91,"column_start":1,"column_end":62}},{"value":"non_exhaustive","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":110178,"byte_end":110195,"line_start":92,"line_end":92,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":699},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/formatting/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"formatting","qualname":"::formatting","value":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/formatting/mod.rs","parent":null,"children":[{"krate":0,"index":700},{"krate":0,"index":801},{"krate":0,"index":804},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":811},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":818},{"krate":0,"index":821},{"krate":0,"index":824},{"krate":0,"index":827},{"krate":0,"index":829},{"krate":0,"index":831},{"krate":0,"index":833},{"krate":0,"index":835},{"krate":0,"index":837},{"krate":0,"index":840},{"krate":0,"index":842},{"krate":0,"index":846},{"krate":0,"index":850},{"krate":0,"index":854},{"krate":0,"index":857},{"krate":0,"index":860},{"krate":0,"index":863},{"krate":0,"index":866},{"krate":0,"index":870},{"krate":0,"index":873},{"krate":0,"index":877},{"krate":0,"index":880},{"krate":0,"index":883},{"krate":0,"index":885},{"krate":0,"index":888},{"krate":0,"index":900},{"krate":0,"index":903},{"krate":0,"index":906}],"decl_id":null,"docs":" Formatting for various types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"formatting\")","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":9781,"byte_end":9811,"line_start":288,"line_end":288,"column_start":1,"column_end":31}},{"value":"/ Formatting for various types.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/formatting/mod.rs","byte_start":142561,"byte_end":142594,"line_start":1,"line_end":1,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":746},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/formatting/formattable.rs","byte_start":158084,"byte_end":158095,"line_start":15,"line_end":15,"column_start":11,"column_end":22},"name":"Formattable","qualname":"::formatting::formattable::Formattable","value":"Formattable: sealed::Sealed","parent":null,"children":[],"decl_id":null,"docs":" A type that can be formatted.\n","sig":null,"attributes":[{"value":"/ A type that can be formatted.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/formatting/formattable.rs","byte_start":157992,"byte_end":158025,"line_start":13,"line_end":13,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":755},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/formatting/formattable.rs","byte_start":158646,"byte_end":158652,"line_start":29,"line_end":29,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::formatting::formattable::sealed::Sealed","value":"Sealed","parent":null,"children":[{"krate":0,"index":756},{"krate":0,"index":758}],"decl_id":null,"docs":" Format the item using a format description, the intended output, and the various components.\n","sig":null,"attributes":[{"value":"/ Format the item using a format description, the intended output, and the various components.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/formatting/formattable.rs","byte_start":158469,"byte_end":158565,"line_start":27,"line_end":27,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/formatting/formattable.rs","byte_start":158759,"byte_end":158770,"line_start":31,"line_end":31,"column_start":12,"column_end":23},"name":"format_into","qualname":"::formatting::formattable::sealed::Sealed::format_into","value":"pub fn format_into<impl io::Write: io::Write>(&Self, &mut impl io::Write,\n                                              Option<Date>, Option<Time>,\n                                              Option<UtcOffset>)\n-> Result<usize, error::Format>","parent":{"krate":0,"index":755},"children":[],"decl_id":null,"docs":" Format the item into the provided output, returning the number of bytes written.\n","sig":null,"attributes":[{"value":"/ Format the item into the provided output, returning the number of bytes written.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/formatting/formattable.rs","byte_start":158663,"byte_end":158747,"line_start":30,"line_end":30,"column_start":9,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/formatting/formattable.rs","byte_start":159042,"byte_end":159048,"line_start":40,"line_end":40,"column_start":12,"column_end":18},"name":"format","qualname":"::formatting::formattable::sealed::Sealed::format","value":"pub fn format(&Self, Option<Date>, Option<Time>, Option<UtcOffset>)\n-> Result<String, error::Format>","parent":{"krate":0,"index":755},"children":[],"decl_id":null,"docs":" Format the item directly to a `String`.\n","sig":null,"attributes":[{"value":"/ Format the item directly to a `String`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/formatting/formattable.rs","byte_start":158987,"byte_end":159030,"line_start":39,"line_end":39,"column_start":9,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":2391},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":167809,"byte_end":167816,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"Instant","qualname":"::instant::Instant","value":"","parent":null,"children":[],"decl_id":null,"docs":" A measurement of a monotonically non-decreasing clock. Opaque and useful only with [`Duration`].","sig":null,"attributes":[{"value":"/ A measurement of a monotonically non-decreasing clock. Opaque and useful only with [`Duration`].","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":166635,"byte_end":166735,"line_start":12,"line_end":12,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":166736,"byte_end":166739,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Instants are always guaranteed to be no less than any previously measured instant when created,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":166740,"byte_end":166839,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"/ and are often useful for tasks such as measuring benchmarks or timing how long an operation","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":166840,"byte_end":166935,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ takes.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":166936,"byte_end":166946,"line_start":16,"line_end":16,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":166947,"byte_end":166950,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Note, however, that instants are not guaranteed to be **steady**. In other words, each tick of","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":166951,"byte_end":167049,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ the underlying clock may not be the same length (e.g. some seconds may be longer than others).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":167050,"byte_end":167148,"line_start":19,"line_end":19,"column_start":1,"column_end":99}},{"value":"/ An instant may jump forwards or experience time dilation (slow down or speed up), but it will","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":167149,"byte_end":167246,"line_start":20,"line_end":20,"column_start":1,"column_end":98}},{"value":"/ never go backwards.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":167247,"byte_end":167270,"line_start":21,"line_end":21,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":167271,"byte_end":167274,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Instants are opaque types that can only be compared to one another. There is no method to get","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":167275,"byte_end":167372,"line_start":23,"line_end":23,"column_start":1,"column_end":98}},{"value":"/ \"the number of seconds\" from an instant. Instead, it only allows measuring the duration between","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":167373,"byte_end":167472,"line_start":24,"line_end":24,"column_start":1,"column_end":100}},{"value":"/ two instants (or comparing two instants).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":167473,"byte_end":167518,"line_start":25,"line_end":25,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":167519,"byte_end":167522,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This implementation allows for operations with signed [`Duration`]s, but is otherwise identical","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":167523,"byte_end":167622,"line_start":27,"line_end":27,"column_start":1,"column_end":100}},{"value":"/ to [`std::time::Instant`].","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":167623,"byte_end":167653,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":167709,"byte_end":167729,"line_start":30,"line_end":30,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":2393},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":167817,"byte_end":167831,"line_start":32,"line_end":32,"column_start":20,"column_end":34},"name":"0","qualname":"::instant::Instant::0","value":"std::time::Instant","parent":{"krate":0,"index":2391},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":950},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":168047,"byte_end":168050,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"now","qualname":"<Instant>::now","value":"pub fn now() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an `Instant` corresponding to \"now\".","sig":null,"attributes":[{"value":"/ Returns an `Instant` corresponding to \"now\".","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":167880,"byte_end":167928,"line_start":36,"line_end":36,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":167933,"byte_end":167936,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":167941,"byte_end":167952,"line_start":38,"line_end":38,"column_start":5,"column_end":16}},{"value":"/ # use time::Instant;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":167957,"byte_end":167981,"line_start":39,"line_end":39,"column_start":5,"column_end":29}},{"value":"/ println!(\"{:?}\", Instant::now());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":167986,"byte_end":168023,"line_start":40,"line_end":40,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":168028,"byte_end":168035,"line_start":41,"line_end":41,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":168562,"byte_end":168569,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"pub fn elapsed(Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed since this instant was created. The duration will always\n be nonnegative if the instant is not synthetically created.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed since this instant was created. The duration will always","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":168106,"byte_end":168201,"line_start":46,"line_end":46,"column_start":5,"column_end":100}},{"value":"/ be nonnegative if the instant is not synthetically created.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":168206,"byte_end":168269,"line_start":47,"line_end":47,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":168274,"byte_end":168277,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":168282,"byte_end":168293,"line_start":49,"line_end":49,"column_start":5,"column_end":16}},{"value":"/ # use time::{Instant, ext::{NumericalStdDuration, NumericalDuration}};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":168298,"byte_end":168372,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ # use std::thread;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":168377,"byte_end":168399,"line_start":51,"line_end":51,"column_start":5,"column_end":27}},{"value":"/ let instant = Instant::now();","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":168404,"byte_end":168437,"line_start":52,"line_end":52,"column_start":5,"column_end":38}},{"value":"/ thread::sleep(1.std_milliseconds());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":168442,"byte_end":168482,"line_start":53,"line_end":53,"column_start":5,"column_end":45}},{"value":"/ assert!(instant.elapsed() >= 1.milliseconds());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":168487,"byte_end":168538,"line_start":54,"line_end":54,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":168543,"byte_end":168550,"line_start":55,"line_end":55,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":169188,"byte_end":169199,"line_start":72,"line_end":72,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant>::checked_add","value":"pub fn checked_add(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be represented as\n `Instant` (which means it's inside the bounds of the underlying data structure), `None`\n otherwise.","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be represented as","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":168690,"byte_end":168780,"line_start":62,"line_end":62,"column_start":5,"column_end":95}},{"value":"/ `Instant` (which means it's inside the bounds of the underlying data structure), `None`","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":168785,"byte_end":168876,"line_start":63,"line_end":63,"column_start":5,"column_end":96}},{"value":"/ otherwise.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":168881,"byte_end":168895,"line_start":64,"line_end":64,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":168900,"byte_end":168903,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":168908,"byte_end":168919,"line_start":66,"line_end":66,"column_start":5,"column_end":16}},{"value":"/ # use time::{Instant, ext::NumericalDuration};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":168924,"byte_end":168974,"line_start":67,"line_end":67,"column_start":5,"column_end":55}},{"value":"/ let now = Instant::now();","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":168979,"byte_end":169008,"line_start":68,"line_end":68,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(now.checked_add(5.seconds()), Some(now + 5.seconds()));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":169013,"byte_end":169083,"line_start":69,"line_end":69,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(now.checked_add((-5).seconds()), Some(now + (-5).seconds()));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":169088,"byte_end":169164,"line_start":70,"line_end":70,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":169169,"byte_end":169176,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":953},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":170051,"byte_end":170062,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant>::checked_sub","value":"pub fn checked_sub(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be represented as\n `Instant` (which means it's inside the bounds of the underlying data structure), `None`\n otherwise.","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be represented as","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":169553,"byte_end":169643,"line_start":83,"line_end":83,"column_start":5,"column_end":95}},{"value":"/ `Instant` (which means it's inside the bounds of the underlying data structure), `None`","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":169648,"byte_end":169739,"line_start":84,"line_end":84,"column_start":5,"column_end":96}},{"value":"/ otherwise.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":169744,"byte_end":169758,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":169763,"byte_end":169766,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":169771,"byte_end":169782,"line_start":87,"line_end":87,"column_start":5,"column_end":16}},{"value":"/ # use time::{Instant, ext::NumericalDuration};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":169787,"byte_end":169837,"line_start":88,"line_end":88,"column_start":5,"column_end":55}},{"value":"/ let now = Instant::now();","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":169842,"byte_end":169871,"line_start":89,"line_end":89,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(now.checked_sub(5.seconds()), Some(now - 5.seconds()));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":169876,"byte_end":169946,"line_start":90,"line_end":90,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(now.checked_sub((-5).seconds()), Some(now - (-5).seconds()));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":169951,"byte_end":170027,"line_start":91,"line_end":91,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":170032,"byte_end":170039,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":170658,"byte_end":170668,"line_start":112,"line_end":112,"column_start":18,"column_end":28},"name":"into_inner","qualname":"<Instant>::into_inner","value":"pub const fn into_inner(Self) -> StdInstant","parent":null,"children":[],"decl_id":null,"docs":" Obtain the inner [`std::time::Instant`].","sig":null,"attributes":[{"value":"/ Obtain the inner [`std::time::Instant`].","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":170452,"byte_end":170496,"line_start":105,"line_end":105,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":170501,"byte_end":170504,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":170509,"byte_end":170520,"line_start":107,"line_end":107,"column_start":5,"column_end":16}},{"value":"/ # use time::Instant;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":170525,"byte_end":170549,"line_start":108,"line_end":108,"column_start":5,"column_end":29}},{"value":"/ let now = Instant::now();","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":170554,"byte_end":170583,"line_start":109,"line_end":109,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(now.into_inner(), now.0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":170588,"byte_end":170628,"line_start":110,"line_end":110,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":170633,"byte_end":170640,"line_start":111,"line_end":111,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2426},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/month.rs","byte_start":174397,"byte_end":174404,"line_start":16,"line_end":16,"column_start":5,"column_end":12},"name":"January","qualname":"::month::Month::January","value":"Month::January","parent":{"krate":0,"index":2425},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2429},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/month.rs","byte_start":174414,"byte_end":174422,"line_start":17,"line_end":17,"column_start":5,"column_end":13},"name":"February","qualname":"::month::Month::February","value":"Month::February","parent":{"krate":0,"index":2425},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2432},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/month.rs","byte_start":174432,"byte_end":174437,"line_start":18,"line_end":18,"column_start":5,"column_end":10},"name":"March","qualname":"::month::Month::March","value":"Month::March","parent":{"krate":0,"index":2425},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2435},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/month.rs","byte_start":174447,"byte_end":174452,"line_start":19,"line_end":19,"column_start":5,"column_end":10},"name":"April","qualname":"::month::Month::April","value":"Month::April","parent":{"krate":0,"index":2425},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2438},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/month.rs","byte_start":174462,"byte_end":174465,"line_start":20,"line_end":20,"column_start":5,"column_end":8},"name":"May","qualname":"::month::Month::May","value":"Month::May","parent":{"krate":0,"index":2425},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2441},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/month.rs","byte_start":174475,"byte_end":174479,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"June","qualname":"::month::Month::June","value":"Month::June","parent":{"krate":0,"index":2425},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2444},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/month.rs","byte_start":174489,"byte_end":174493,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"July","qualname":"::month::Month::July","value":"Month::July","parent":{"krate":0,"index":2425},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2447},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/month.rs","byte_start":174503,"byte_end":174509,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"August","qualname":"::month::Month::August","value":"Month::August","parent":{"krate":0,"index":2425},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2450},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/month.rs","byte_start":174519,"byte_end":174528,"line_start":24,"line_end":24,"column_start":5,"column_end":14},"name":"September","qualname":"::month::Month::September","value":"Month::September","parent":{"krate":0,"index":2425},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2453},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/month.rs","byte_start":174538,"byte_end":174545,"line_start":25,"line_end":25,"column_start":5,"column_end":12},"name":"October","qualname":"::month::Month::October","value":"Month::October","parent":{"krate":0,"index":2425},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2456},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/month.rs","byte_start":174556,"byte_end":174564,"line_start":26,"line_end":26,"column_start":5,"column_end":13},"name":"November","qualname":"::month::Month::November","value":"Month::November","parent":{"krate":0,"index":2425},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2459},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/month.rs","byte_start":174575,"byte_end":174583,"line_start":27,"line_end":27,"column_start":5,"column_end":13},"name":"December","qualname":"::month::Month::December","value":"Month::December","parent":{"krate":0,"index":2425},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2425},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/month.rs","byte_start":174385,"byte_end":174390,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Month","qualname":"::month::Month","value":"pub enum Month {\n    January = ,\n    February = ,\n    March = ,\n    April = ,\n    May = ,\n    June = ,\n    July = ,\n    August = ,\n    September = ,\n    October = ,\n    November = ,\n    December = ,\n}","parent":null,"children":[{"krate":0,"index":2426},{"krate":0,"index":2429},{"krate":0,"index":2432},{"krate":0,"index":2435},{"krate":0,"index":2438},{"krate":0,"index":2441},{"krate":0,"index":2444},{"krate":0,"index":2447},{"krate":0,"index":2450},{"krate":0,"index":2453},{"krate":0,"index":2456},{"krate":0,"index":2459}],"decl_id":null,"docs":" Months of the year.\n","sig":null,"attributes":[{"value":"/ Months of the year.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/month.rs","byte_start":174229,"byte_end":174252,"line_start":11,"line_end":11,"column_start":1,"column_end":24}},{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/month.rs","byte_start":174253,"byte_end":174300,"line_start":12,"line_end":12,"column_start":1,"column_end":48}},{"value":"repr(u8)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/month.rs","byte_start":174313,"byte_end":174324,"line_start":13,"line_end":13,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/month.rs","byte_start":175540,"byte_end":175548,"line_start":62,"line_end":62,"column_start":18,"column_end":26},"name":"previous","qualname":"<Month>::previous","value":"pub const fn previous(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the previous month.","sig":null,"attributes":[{"value":"/ Get the previous month.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/month.rs","byte_start":175368,"byte_end":175395,"line_start":56,"line_end":56,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/month.rs","byte_start":175400,"byte_end":175403,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/month.rs","byte_start":175408,"byte_end":175419,"line_start":58,"line_end":58,"column_start":5,"column_end":16}},{"value":"/ # use time::Month;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/month.rs","byte_start":175424,"byte_end":175446,"line_start":59,"line_end":59,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(Month::January.previous(), Month::December);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/month.rs","byte_start":175451,"byte_end":175510,"line_start":60,"line_end":60,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/month.rs","byte_start":175515,"byte_end":175522,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1018},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/month.rs","byte_start":176135,"byte_end":176139,"line_start":85,"line_end":85,"column_start":18,"column_end":22},"name":"next","qualname":"<Month>::next","value":"pub const fn next(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the next month.","sig":null,"attributes":[{"value":"/ Get the next month.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/month.rs","byte_start":175971,"byte_end":175994,"line_start":79,"line_end":79,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/month.rs","byte_start":175999,"byte_end":176002,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/month.rs","byte_start":176007,"byte_end":176018,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/ # use time::Month;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/month.rs","byte_start":176023,"byte_end":176045,"line_start":82,"line_end":82,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(Month::January.next(), Month::February);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/month.rs","byte_start":176050,"byte_end":176105,"line_start":83,"line_end":83,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/month.rs","byte_start":176110,"byte_end":176117,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2476},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":179406,"byte_end":179420,"line_start":33,"line_end":33,"column_start":12,"column_end":26},"name":"OffsetDateTime","qualname":"::offset_date_time::OffsetDateTime","value":"OffsetDateTime {  }","parent":null,"children":[{"krate":0,"index":2477},{"krate":0,"index":2478}],"decl_id":null,"docs":" A [`PrimitiveDateTime`] with a [`UtcOffset`].","sig":null,"attributes":[{"value":"/ A [`PrimitiveDateTime`] with a [`UtcOffset`].","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":179021,"byte_end":179070,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":179071,"byte_end":179074,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ All comparisons are performed using the UTC time.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":179075,"byte_end":179128,"line_start":28,"line_end":28,"column_start":1,"column_end":54}}]},{"kind":"Const","id":{"krate":0,"index":1092},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":179906,"byte_end":179916,"line_start":47,"line_end":47,"column_start":15,"column_end":25},"name":"UNIX_EPOCH","qualname":"::offset_date_time::OffsetDateTime::UNIX_EPOCH","value":"Self","parent":{"krate":0,"index":1091},"children":[],"decl_id":null,"docs":" Midnight, 1 January, 1970 (UTC).","sig":null,"attributes":[{"value":"/ Midnight, 1 January, 1970 (UTC).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":179682,"byte_end":179718,"line_start":41,"line_end":41,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":179723,"byte_end":179726,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":179731,"byte_end":179742,"line_start":43,"line_end":43,"column_start":5,"column_end":16}},{"value":"/ # use time::{OffsetDateTime, macros::datetime};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":179747,"byte_end":179798,"line_start":44,"line_end":44,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(OffsetDateTime::UNIX_EPOCH, datetime!(1970-01-01 0:00 UTC),);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":179803,"byte_end":179879,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":179884,"byte_end":179891,"line_start":46,"line_end":46,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1093},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":180427,"byte_end":180434,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"now_utc","qualname":"<OffsetDateTime>::now_utc","value":"pub fn now_utc() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `OffsetDateTime` with the current date and time in UTC.","sig":null,"attributes":[{"value":"/ Create a new `OffsetDateTime` with the current date and time in UTC.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":180037,"byte_end":180109,"line_start":52,"line_end":52,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":180114,"byte_end":180117,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":180122,"byte_end":180133,"line_start":54,"line_end":54,"column_start":5,"column_end":16}},{"value":"/ # use time::{OffsetDateTime, macros::offset};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":180138,"byte_end":180187,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/ assert!(OffsetDateTime::now_utc().year() >= 2019);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":180192,"byte_end":180246,"line_start":56,"line_end":56,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(OffsetDateTime::now_utc().offset(), offset!(UTC));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":180251,"byte_end":180316,"line_start":57,"line_end":57,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":180321,"byte_end":180328,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":180333,"byte_end":180356,"line_start":59,"line_end":59,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1094},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":180929,"byte_end":180938,"line_start":76,"line_end":76,"column_start":12,"column_end":21},"name":"now_local","qualname":"<OffsetDateTime>::now_local","value":"pub fn now_local() -> Result<Self, error::IndeterminateOffset>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a new `OffsetDateTime` with the current date and time in the local offset.\n If the offset cannot be determined, an error is returned.","sig":null,"attributes":[{"value":"/ Attempt to create a new `OffsetDateTime` with the current date and time in the local offset.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":180491,"byte_end":180587,"line_start":65,"line_end":65,"column_start":5,"column_end":101}},{"value":"/ If the offset cannot be determined, an error is returned.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":180592,"byte_end":180653,"line_start":66,"line_end":66,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":180658,"byte_end":180661,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":180666,"byte_end":180677,"line_start":68,"line_end":68,"column_start":5,"column_end":16}},{"value":"/ # use time::OffsetDateTime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":180682,"byte_end":180713,"line_start":69,"line_end":69,"column_start":5,"column_end":36}},{"value":"/ # if false {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":180718,"byte_end":180734,"line_start":70,"line_end":70,"column_start":5,"column_end":21}},{"value":"/ assert!(OffsetDateTime::now_local().is_ok());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":180739,"byte_end":180788,"line_start":71,"line_end":71,"column_start":5,"column_end":54}},{"value":"/ # }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":180793,"byte_end":180800,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":180805,"byte_end":180812,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"local-offset\")","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":180817,"byte_end":180849,"line_start":74,"line_end":74,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":181915,"byte_end":181924,"line_start":103,"line_end":103,"column_start":18,"column_end":27},"name":"to_offset","qualname":"<OffsetDateTime>::to_offset","value":"pub const fn to_offset(Self, UtcOffset) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert the `OffsetDateTime` from the current [`UtcOffset`] to the provided [`UtcOffset`].","sig":null,"attributes":[{"value":"/ Convert the `OffsetDateTime` from the current [`UtcOffset`] to the provided [`UtcOffset`].","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":181108,"byte_end":181202,"line_start":82,"line_end":82,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":181207,"byte_end":181210,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":181215,"byte_end":181226,"line_start":84,"line_end":84,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":181231,"byte_end":181274,"line_start":85,"line_end":85,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":181279,"byte_end":181294,"line_start":86,"line_end":86,"column_start":5,"column_end":20}},{"value":"/     datetime!(2000-01-01 0:00 UTC)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":181299,"byte_end":181337,"line_start":87,"line_end":87,"column_start":5,"column_end":43}},{"value":"/         .to_offset(offset!(-1))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":181342,"byte_end":181377,"line_start":88,"line_end":88,"column_start":5,"column_end":40}},{"value":"/         .year(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":181382,"byte_end":181402,"line_start":89,"line_end":89,"column_start":5,"column_end":25}},{"value":"/     1999,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":181407,"byte_end":181420,"line_start":90,"line_end":90,"column_start":5,"column_end":18}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":181425,"byte_end":181431,"line_start":91,"line_end":91,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":181436,"byte_end":181439,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ // Let's see what time Sydney's new year's celebration is in New York // and Los Angeles.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":181444,"byte_end":181537,"line_start":93,"line_end":93,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":181542,"byte_end":181545,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ // Construct midnight on new year's in Sydney.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":181550,"byte_end":181600,"line_start":95,"line_end":95,"column_start":5,"column_end":55}},{"value":"/ let sydney = datetime!(2000-01-01 0:00 +11);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":181605,"byte_end":181653,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ let new_york = sydney.to_offset(offset!(-5));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":181658,"byte_end":181707,"line_start":97,"line_end":97,"column_start":5,"column_end":54}},{"value":"/ let los_angeles = sydney.to_offset(offset!(-8));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":181712,"byte_end":181764,"line_start":98,"line_end":98,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(sydney.hour(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":181769,"byte_end":181802,"line_start":99,"line_end":99,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(new_york.hour(), 8);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":181807,"byte_end":181842,"line_start":100,"line_end":100,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(los_angeles.hour(), 5);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":181847,"byte_end":181885,"line_start":101,"line_end":101,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":181890,"byte_end":181897,"line_start":102,"line_end":102,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":183106,"byte_end":183125,"line_start":138,"line_end":138,"column_start":18,"column_end":37},"name":"from_unix_timestamp","qualname":"<OffsetDateTime>::from_unix_timestamp","value":"pub const fn from_unix_timestamp(i64) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Create an `OffsetDateTime` from the provided Unix timestamp. Calling `.offset()` on the\n resulting value is guaranteed to return UTC.","sig":null,"attributes":[{"value":"/ Create an `OffsetDateTime` from the provided Unix timestamp. Calling `.offset()` on the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":182089,"byte_end":182180,"line_start":111,"line_end":111,"column_start":5,"column_end":96}},{"value":"/ resulting value is guaranteed to return UTC.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":182185,"byte_end":182233,"line_start":112,"line_end":112,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":182238,"byte_end":182241,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":182246,"byte_end":182257,"line_start":114,"line_end":114,"column_start":5,"column_end":16}},{"value":"/ # use time::{OffsetDateTime, macros::datetime};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":182262,"byte_end":182313,"line_start":115,"line_end":115,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":182318,"byte_end":182333,"line_start":116,"line_end":116,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp(0),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":182338,"byte_end":182385,"line_start":117,"line_end":117,"column_start":5,"column_end":52}},{"value":"/     Ok(OffsetDateTime::UNIX_EPOCH),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":182390,"byte_end":182429,"line_start":118,"line_end":118,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":182434,"byte_end":182440,"line_start":119,"line_end":119,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":182445,"byte_end":182460,"line_start":120,"line_end":120,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp(1_546_300_800),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":182465,"byte_end":182524,"line_start":121,"line_end":121,"column_start":5,"column_end":64}},{"value":"/     Ok(datetime!(2019-01-01 0:00 UTC)),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":182529,"byte_end":182572,"line_start":122,"line_end":122,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":182577,"byte_end":182583,"line_start":123,"line_end":123,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":182588,"byte_end":182595,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":182600,"byte_end":182603,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ If you have a timestamp-nanosecond pair, you can use something along the lines of the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":182608,"byte_end":182697,"line_start":126,"line_end":126,"column_start":5,"column_end":94}},{"value":"/ following:","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":182702,"byte_end":182716,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":182721,"byte_end":182724,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":182729,"byte_end":182740,"line_start":129,"line_end":129,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, OffsetDateTime, ext::NumericalDuration};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":182745,"byte_end":182812,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ let (timestamp, nanos) = (1, 500_000_000);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":182817,"byte_end":182863,"line_start":131,"line_end":131,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":182868,"byte_end":182883,"line_start":132,"line_end":132,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp(timestamp)? + Duration::nanoseconds(nanos),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":182888,"byte_end":182975,"line_start":133,"line_end":133,"column_start":5,"column_end":92}},{"value":"/     OffsetDateTime::UNIX_EPOCH + 1.5.seconds()","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":182980,"byte_end":183030,"line_start":134,"line_end":134,"column_start":5,"column_end":55}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":183035,"byte_end":183041,"line_start":135,"line_end":135,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":183046,"byte_end":183076,"line_start":136,"line_end":136,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":183081,"byte_end":183088,"line_start":137,"line_end":137,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1099},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":184801,"byte_end":184826,"line_start":179,"line_end":179,"column_start":18,"column_end":43},"name":"from_unix_timestamp_nanos","qualname":"<OffsetDateTime>::from_unix_timestamp_nanos","value":"pub const fn from_unix_timestamp_nanos(i128)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Construct an `OffsetDateTime` from the provided Unix timestamp (in nanoseconds). Calling\n `.offset()` on the resulting value is guaranteed to return UTC.","sig":null,"attributes":[{"value":"/ Construct an `OffsetDateTime` from the provided Unix timestamp (in nanoseconds). Calling","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":184233,"byte_end":184325,"line_start":165,"line_end":165,"column_start":5,"column_end":97}},{"value":"/ `.offset()` on the resulting value is guaranteed to return UTC.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":184330,"byte_end":184397,"line_start":166,"line_end":166,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":184402,"byte_end":184405,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":184410,"byte_end":184421,"line_start":168,"line_end":168,"column_start":5,"column_end":16}},{"value":"/ # use time::{OffsetDateTime, macros::datetime};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":184426,"byte_end":184477,"line_start":169,"line_end":169,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":184482,"byte_end":184497,"line_start":170,"line_end":170,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp_nanos(0),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":184502,"byte_end":184555,"line_start":171,"line_end":171,"column_start":5,"column_end":58}},{"value":"/     Ok(OffsetDateTime::UNIX_EPOCH),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":184560,"byte_end":184599,"line_start":172,"line_end":172,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":184604,"byte_end":184610,"line_start":173,"line_end":173,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":184615,"byte_end":184630,"line_start":174,"line_end":174,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp_nanos(1_546_300_800_000_000_000),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":184635,"byte_end":184712,"line_start":175,"line_end":175,"column_start":5,"column_end":82}},{"value":"/     Ok(datetime!(2019-01-01 0:00 UTC)),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":184717,"byte_end":184760,"line_start":176,"line_end":176,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":184765,"byte_end":184771,"line_start":177,"line_end":177,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":184776,"byte_end":184783,"line_start":178,"line_end":178,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1100},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":185705,"byte_end":185711,"line_start":204,"line_end":204,"column_start":18,"column_end":24},"name":"offset","qualname":"<OffsetDateTime>::offset","value":"pub const fn offset(Self) -> UtcOffset","parent":null,"children":[],"decl_id":null,"docs":" Get the [`UtcOffset`].","sig":null,"attributes":[{"value":"/ Get the [`UtcOffset`].","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":185429,"byte_end":185455,"line_start":197,"line_end":197,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":185460,"byte_end":185463,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":185468,"byte_end":185479,"line_start":199,"line_end":199,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":185484,"byte_end":185527,"line_start":200,"line_end":200,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).offset(), offset!(UTC));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":185532,"byte_end":185602,"line_start":201,"line_end":201,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 +1).offset(), offset!(+1));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":185607,"byte_end":185675,"line_start":202,"line_end":202,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":185680,"byte_end":185687,"line_start":203,"line_end":203,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1101},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":186073,"byte_end":186087,"line_start":215,"line_end":215,"column_start":18,"column_end":32},"name":"unix_timestamp","qualname":"<OffsetDateTime>::unix_timestamp","value":"pub const fn unix_timestamp(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the [Unix timestamp](https://en.wikipedia.org/wiki/Unix_time).","sig":null,"attributes":[{"value":"/ Get the [Unix timestamp](https://en.wikipedia.org/wiki/Unix_time).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":185764,"byte_end":185834,"line_start":208,"line_end":208,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":185839,"byte_end":185842,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":185847,"byte_end":185858,"line_start":210,"line_end":210,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":185863,"byte_end":185896,"line_start":211,"line_end":211,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(1970-01-01 0:00 UTC).unix_timestamp(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":185901,"byte_end":185968,"line_start":212,"line_end":212,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(1970-01-01 0:00 -1).unix_timestamp(), 3_600);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":185973,"byte_end":186043,"line_start":213,"line_end":213,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":186048,"byte_end":186055,"line_start":214,"line_end":214,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1102},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":186788,"byte_end":186808,"line_start":234,"line_end":234,"column_start":18,"column_end":38},"name":"unix_timestamp_nanos","qualname":"<OffsetDateTime>::unix_timestamp_nanos","value":"pub const fn unix_timestamp_nanos(Self) -> i128","parent":null,"children":[],"decl_id":null,"docs":" Get the Unix timestamp in nanoseconds.","sig":null,"attributes":[{"value":"/ Get the Unix timestamp in nanoseconds.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":186450,"byte_end":186492,"line_start":224,"line_end":224,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":186497,"byte_end":186500,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":186505,"byte_end":186516,"line_start":226,"line_end":226,"column_start":5,"column_end":16}},{"value":"/ use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":186521,"byte_end":186552,"line_start":227,"line_end":227,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(datetime!(1970-01-01 0:00 UTC).unix_timestamp_nanos(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":186557,"byte_end":186630,"line_start":228,"line_end":228,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":186635,"byte_end":186650,"line_start":229,"line_end":229,"column_start":5,"column_end":20}},{"value":"/     datetime!(1970-01-01 0:00 -1).unix_timestamp_nanos(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":186655,"byte_end":186716,"line_start":230,"line_end":230,"column_start":5,"column_end":66}},{"value":"/     3_600_000_000_000,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":186721,"byte_end":186747,"line_start":231,"line_end":231,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":186752,"byte_end":186758,"line_start":232,"line_end":232,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":186763,"byte_end":186770,"line_start":233,"line_end":233,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1103},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":187329,"byte_end":187333,"line_start":250,"line_end":250,"column_start":18,"column_end":22},"name":"date","qualname":"<OffsetDateTime>::date","value":"pub const fn date(Self) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Date`] in the stored offset.","sig":null,"attributes":[{"value":"/ Get the [`Date`] in the stored offset.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":186931,"byte_end":186973,"line_start":238,"line_end":238,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":186978,"byte_end":186981,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":186986,"byte_end":186997,"line_start":240,"line_end":240,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{date, datetime, offset};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":187002,"byte_end":187051,"line_start":241,"line_end":241,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).date(), date!(2019-01-01));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":187056,"byte_end":187129,"line_start":242,"line_end":242,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":187134,"byte_end":187149,"line_start":243,"line_end":243,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":187154,"byte_end":187192,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/         .to_offset(offset!(-1))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":187197,"byte_end":187232,"line_start":245,"line_end":245,"column_start":5,"column_end":40}},{"value":"/         .date(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":187237,"byte_end":187257,"line_start":246,"line_end":246,"column_start":5,"column_end":25}},{"value":"/     date!(2018-12-31),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":187262,"byte_end":187288,"line_start":247,"line_end":247,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":187293,"byte_end":187299,"line_start":248,"line_end":248,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":187304,"byte_end":187311,"line_start":249,"line_end":249,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":188326,"byte_end":188330,"line_start":276,"line_end":276,"column_start":18,"column_end":22},"name":"time","qualname":"<OffsetDateTime>::time","value":"pub const fn time(Self) -> Time","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Time`] in the stored offset.","sig":null,"attributes":[{"value":"/ Get the [`Time`] in the stored offset.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":187940,"byte_end":187982,"line_start":264,"line_end":264,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":187987,"byte_end":187990,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":187995,"byte_end":188006,"line_start":266,"line_end":266,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset, time};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":188011,"byte_end":188060,"line_start":267,"line_end":267,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).time(), time!(0:00));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":188065,"byte_end":188132,"line_start":268,"line_end":268,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":188137,"byte_end":188152,"line_start":269,"line_end":269,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":188157,"byte_end":188195,"line_start":270,"line_end":270,"column_start":5,"column_end":43}},{"value":"/         .to_offset(offset!(-1))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":188200,"byte_end":188235,"line_start":271,"line_end":271,"column_start":5,"column_end":40}},{"value":"/         .time(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":188240,"byte_end":188260,"line_start":272,"line_end":272,"column_start":5,"column_end":25}},{"value":"/     time!(23:00)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":188265,"byte_end":188285,"line_start":273,"line_end":273,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":188290,"byte_end":188296,"line_start":274,"line_end":274,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":188301,"byte_end":188308,"line_start":275,"line_end":275,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1105},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":189371,"byte_end":189375,"line_start":306,"line_end":306,"column_start":18,"column_end":22},"name":"year","qualname":"<OffsetDateTime>::year","value":"pub const fn year(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the year of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the year of the date in the stored offset.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":188931,"byte_end":188981,"line_start":293,"line_end":293,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":188986,"byte_end":188989,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":188994,"byte_end":189005,"line_start":295,"line_end":295,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":189010,"byte_end":189053,"line_start":296,"line_end":296,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).year(), 2019);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":189058,"byte_end":189118,"line_start":297,"line_end":297,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":189123,"byte_end":189138,"line_start":298,"line_end":298,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-12-31 23:00 UTC)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":189143,"byte_end":189182,"line_start":299,"line_end":299,"column_start":5,"column_end":44}},{"value":"/         .to_offset(offset!(+1))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":189187,"byte_end":189222,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/         .year(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":189227,"byte_end":189247,"line_start":301,"line_end":301,"column_start":5,"column_end":25}},{"value":"/     2020,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":189252,"byte_end":189265,"line_start":302,"line_end":302,"column_start":5,"column_end":18}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":189270,"byte_end":189276,"line_start":303,"line_end":303,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00 UTC).year(), 2020);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":189281,"byte_end":189341,"line_start":304,"line_end":304,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":189346,"byte_end":189353,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":190360,"byte_end":190365,"line_start":333,"line_end":333,"column_start":18,"column_end":23},"name":"month","qualname":"<OffsetDateTime>::month","value":"pub const fn month(Self) -> Month","parent":null,"children":[],"decl_id":null,"docs":" Get the month of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the month of the date in the stored offset.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":189935,"byte_end":189986,"line_start":320,"line_end":320,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":189991,"byte_end":189994,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":189999,"byte_end":190010,"line_start":322,"line_end":322,"column_start":5,"column_end":16}},{"value":"/ # use time::Month;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":190015,"byte_end":190037,"line_start":323,"line_end":323,"column_start":5,"column_end":27}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":190042,"byte_end":190085,"line_start":324,"line_end":324,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).month(), Month::January);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":190090,"byte_end":190161,"line_start":325,"line_end":325,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":190166,"byte_end":190181,"line_start":326,"line_end":326,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-12-31 23:00 UTC)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":190186,"byte_end":190225,"line_start":327,"line_end":327,"column_start":5,"column_end":44}},{"value":"/         .to_offset(offset!(+1))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":190230,"byte_end":190265,"line_start":328,"line_end":328,"column_start":5,"column_end":40}},{"value":"/         .month(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":190270,"byte_end":190291,"line_start":329,"line_end":329,"column_start":5,"column_end":26}},{"value":"/     Month::January,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":190296,"byte_end":190319,"line_start":330,"line_end":330,"column_start":5,"column_end":28}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":190324,"byte_end":190330,"line_start":331,"line_end":331,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":190335,"byte_end":190342,"line_start":332,"line_end":332,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1107},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":190861,"byte_end":190864,"line_start":351,"line_end":351,"column_start":18,"column_end":21},"name":"day","qualname":"<OffsetDateTime>::day","value":"pub const fn day(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the day of the date in the stored offset.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":190422,"byte_end":190471,"line_start":337,"line_end":337,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":190476,"byte_end":190479,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=31`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":190484,"byte_end":190544,"line_start":339,"line_end":339,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":190549,"byte_end":190552,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":190557,"byte_end":190568,"line_start":341,"line_end":341,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":190573,"byte_end":190616,"line_start":342,"line_end":342,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).day(), 1);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":190621,"byte_end":190677,"line_start":343,"line_end":343,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":190682,"byte_end":190697,"line_start":344,"line_end":344,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-12-31 23:00 UTC)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":190702,"byte_end":190741,"line_start":345,"line_end":345,"column_start":5,"column_end":44}},{"value":"/         .to_offset(offset!(+1))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":190746,"byte_end":190781,"line_start":346,"line_end":346,"column_start":5,"column_end":40}},{"value":"/         .day(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":190786,"byte_end":190805,"line_start":347,"line_end":347,"column_start":5,"column_end":24}},{"value":"/     1,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":190810,"byte_end":190820,"line_start":348,"line_end":348,"column_start":5,"column_end":15}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":190825,"byte_end":190831,"line_start":349,"line_end":349,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":190836,"byte_end":190843,"line_start":350,"line_end":350,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1108},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":191376,"byte_end":191383,"line_start":369,"line_end":369,"column_start":18,"column_end":25},"name":"ordinal","qualname":"<OffsetDateTime>::ordinal","value":"pub const fn ordinal(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the year of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the day of the year of the date in the stored offset.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":190916,"byte_end":190977,"line_start":355,"line_end":355,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":190982,"byte_end":190985,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=366`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":190990,"byte_end":191051,"line_start":357,"line_end":357,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":191056,"byte_end":191059,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":191064,"byte_end":191075,"line_start":359,"line_end":359,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":191080,"byte_end":191123,"line_start":360,"line_end":360,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).ordinal(), 1);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":191128,"byte_end":191188,"line_start":361,"line_end":361,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":191193,"byte_end":191208,"line_start":362,"line_end":362,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-12-31 23:00 UTC)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":191213,"byte_end":191252,"line_start":363,"line_end":363,"column_start":5,"column_end":44}},{"value":"/         .to_offset(offset!(+1))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":191257,"byte_end":191292,"line_start":364,"line_end":364,"column_start":5,"column_end":40}},{"value":"/         .ordinal(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":191297,"byte_end":191320,"line_start":365,"line_end":365,"column_start":5,"column_end":28}},{"value":"/     1,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":191325,"byte_end":191335,"line_start":366,"line_end":366,"column_start":5,"column_end":15}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":191340,"byte_end":191346,"line_start":367,"line_end":367,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":191351,"byte_end":191358,"line_start":368,"line_end":368,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1109},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":192438,"byte_end":192446,"line_start":394,"line_end":394,"column_start":18,"column_end":26},"name":"iso_week","qualname":"<OffsetDateTime>::iso_week","value":"pub const fn iso_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO week number of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the ISO week number of the date in the stored offset.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":191946,"byte_end":192007,"line_start":383,"line_end":383,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":192012,"byte_end":192015,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=53`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":192020,"byte_end":192080,"line_start":385,"line_end":385,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":192085,"byte_end":192088,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":192093,"byte_end":192104,"line_start":387,"line_end":387,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":192109,"byte_end":192142,"line_start":388,"line_end":388,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).iso_week(), 1);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":192147,"byte_end":192208,"line_start":389,"line_end":389,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00 UTC).iso_week(), 1);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":192213,"byte_end":192274,"line_start":390,"line_end":390,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00 UTC).iso_week(), 53);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":192279,"byte_end":192341,"line_start":391,"line_end":391,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00 UTC).iso_week(), 53);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":192346,"byte_end":192408,"line_start":392,"line_end":392,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":192413,"byte_end":192420,"line_start":393,"line_end":393,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1110},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":193033,"byte_end":193050,"line_start":409,"line_end":409,"column_start":18,"column_end":35},"name":"sunday_based_week","qualname":"<OffsetDateTime>::sunday_based_week","value":"pub const fn sunday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Sunday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Sunday.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":192503,"byte_end":192567,"line_start":398,"line_end":398,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":192572,"byte_end":192575,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":192580,"byte_end":192640,"line_start":400,"line_end":400,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":192645,"byte_end":192648,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":192653,"byte_end":192664,"line_start":402,"line_end":402,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":192669,"byte_end":192702,"line_start":403,"line_end":403,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).sunday_based_week(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":192707,"byte_end":192777,"line_start":404,"line_end":404,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00 UTC).sunday_based_week(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":192782,"byte_end":192852,"line_start":405,"line_end":405,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00 UTC).sunday_based_week(), 52);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":192857,"byte_end":192928,"line_start":406,"line_end":406,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00 UTC).sunday_based_week(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":192933,"byte_end":193003,"line_start":407,"line_end":407,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":193008,"byte_end":193015,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1111},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":193646,"byte_end":193663,"line_start":424,"line_end":424,"column_start":18,"column_end":35},"name":"monday_based_week","qualname":"<OffsetDateTime>::monday_based_week","value":"pub const fn monday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Monday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Monday.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":193116,"byte_end":193180,"line_start":413,"line_end":413,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":193185,"byte_end":193188,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":193193,"byte_end":193253,"line_start":415,"line_end":415,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":193258,"byte_end":193261,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":193266,"byte_end":193277,"line_start":417,"line_end":417,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":193282,"byte_end":193315,"line_start":418,"line_end":418,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).monday_based_week(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":193320,"byte_end":193390,"line_start":419,"line_end":419,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00 UTC).monday_based_week(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":193395,"byte_end":193465,"line_start":420,"line_end":420,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00 UTC).monday_based_week(), 52);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":193470,"byte_end":193541,"line_start":421,"line_end":421,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00 UTC).monday_based_week(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":193546,"byte_end":193616,"line_start":422,"line_end":422,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":193621,"byte_end":193628,"line_start":423,"line_end":423,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1112},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":193995,"byte_end":194011,"line_start":437,"line_end":437,"column_start":18,"column_end":34},"name":"to_calendar_date","qualname":"<OffsetDateTime>::to_calendar_date","value":"pub const fn to_calendar_date(Self) -> (i32, Month, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the year, month, and day.","sig":null,"attributes":[{"value":"/ Get the year, month, and day.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":193729,"byte_end":193762,"line_start":428,"line_end":428,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":193767,"byte_end":193770,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":193775,"byte_end":193786,"line_start":430,"line_end":430,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::datetime, Month};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":193791,"byte_end":193833,"line_start":431,"line_end":431,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":193838,"byte_end":193853,"line_start":432,"line_end":432,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC).to_calendar_date(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":193858,"byte_end":193916,"line_start":433,"line_end":433,"column_start":5,"column_end":63}},{"value":"/     (2019, Month::January, 1)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":193921,"byte_end":193954,"line_start":434,"line_end":434,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":193959,"byte_end":193965,"line_start":435,"line_end":435,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":193970,"byte_end":193977,"line_start":436,"line_end":436,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1113},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":194337,"byte_end":194352,"line_start":450,"line_end":450,"column_start":18,"column_end":33},"name":"to_ordinal_date","qualname":"<OffsetDateTime>::to_ordinal_date","value":"pub const fn to_ordinal_date(Self) -> (i32, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the year and ordinal day number.","sig":null,"attributes":[{"value":"/ Get the year and ordinal day number.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":194090,"byte_end":194130,"line_start":441,"line_end":441,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":194135,"byte_end":194138,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":194143,"byte_end":194154,"line_start":443,"line_end":443,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":194159,"byte_end":194192,"line_start":444,"line_end":444,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":194197,"byte_end":194212,"line_start":445,"line_end":445,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC).to_ordinal_date(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":194217,"byte_end":194274,"line_start":446,"line_end":446,"column_start":5,"column_end":62}},{"value":"/     (2019, 1)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":194279,"byte_end":194296,"line_start":447,"line_end":447,"column_start":5,"column_end":22}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":194301,"byte_end":194307,"line_start":448,"line_end":448,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":194312,"byte_end":194319,"line_start":449,"line_end":449,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1114},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":195211,"byte_end":195227,"line_start":479,"line_end":479,"column_start":18,"column_end":34},"name":"to_iso_week_date","qualname":"<OffsetDateTime>::to_iso_week_date","value":"pub const fn to_iso_week_date(Self) -> (i32, u8, Weekday)","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO 8601 year, week number, and weekday.","sig":null,"attributes":[{"value":"/ Get the ISO 8601 year, week number, and weekday.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":194424,"byte_end":194476,"line_start":454,"line_end":454,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":194481,"byte_end":194484,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":194489,"byte_end":194500,"line_start":456,"line_end":456,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::datetime};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":194505,"byte_end":194552,"line_start":457,"line_end":457,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":194557,"byte_end":194572,"line_start":458,"line_end":458,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC).to_iso_week_date(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":194577,"byte_end":194635,"line_start":459,"line_end":459,"column_start":5,"column_end":63}},{"value":"/     (2019, 1, Tuesday)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":194640,"byte_end":194666,"line_start":460,"line_end":460,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":194671,"byte_end":194677,"line_start":461,"line_end":461,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":194682,"byte_end":194697,"line_start":462,"line_end":462,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-10-04 0:00 UTC).to_iso_week_date(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":194702,"byte_end":194760,"line_start":463,"line_end":463,"column_start":5,"column_end":63}},{"value":"/     (2019, 40, Friday)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":194765,"byte_end":194791,"line_start":464,"line_end":464,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":194796,"byte_end":194802,"line_start":465,"line_end":465,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":194807,"byte_end":194822,"line_start":466,"line_end":466,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00 UTC).to_iso_week_date(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":194827,"byte_end":194885,"line_start":467,"line_end":467,"column_start":5,"column_end":63}},{"value":"/     (2020, 1, Wednesday)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":194890,"byte_end":194918,"line_start":468,"line_end":468,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":194923,"byte_end":194929,"line_start":469,"line_end":469,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":194934,"byte_end":194949,"line_start":470,"line_end":470,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-12-31 0:00 UTC).to_iso_week_date(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":194954,"byte_end":195012,"line_start":471,"line_end":471,"column_start":5,"column_end":63}},{"value":"/     (2020, 53, Thursday)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":195017,"byte_end":195045,"line_start":472,"line_end":472,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":195050,"byte_end":195056,"line_start":473,"line_end":473,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":195061,"byte_end":195076,"line_start":474,"line_end":474,"column_start":5,"column_end":20}},{"value":"/     datetime!(2021-01-01 0:00 UTC).to_iso_week_date(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":195081,"byte_end":195139,"line_start":475,"line_end":475,"column_start":5,"column_end":63}},{"value":"/     (2020, 53, Friday)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":195144,"byte_end":195170,"line_start":476,"line_end":476,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":195175,"byte_end":195181,"line_start":477,"line_end":477,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":195186,"byte_end":195193,"line_start":478,"line_end":478,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1115},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":195678,"byte_end":195685,"line_start":491,"line_end":491,"column_start":18,"column_end":25},"name":"weekday","qualname":"<OffsetDateTime>::weekday","value":"pub const fn weekday(Self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" Get the weekday of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the weekday of the date in the stored offset.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":195308,"byte_end":195361,"line_start":483,"line_end":483,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":195366,"byte_end":195369,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":195374,"byte_end":195385,"line_start":485,"line_end":485,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::datetime};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":195390,"byte_end":195437,"line_start":486,"line_end":486,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).weekday(), Tuesday);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":195442,"byte_end":195508,"line_start":487,"line_end":487,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2019-02-01 0:00 UTC).weekday(), Friday);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":195513,"byte_end":195578,"line_start":488,"line_end":488,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(datetime!(2019-03-01 0:00 UTC).weekday(), Friday);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":195583,"byte_end":195648,"line_start":489,"line_end":489,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":195653,"byte_end":195660,"line_start":490,"line_end":490,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1116},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":196448,"byte_end":196461,"line_start":507,"line_end":507,"column_start":18,"column_end":31},"name":"to_julian_day","qualname":"<OffsetDateTime>::to_julian_day","value":"pub const fn to_julian_day(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the Julian day for the date. The time is not taken into account for this calculation.","sig":null,"attributes":[{"value":"/ Get the Julian day for the date. The time is not taken into account for this calculation.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":195746,"byte_end":195839,"line_start":495,"line_end":495,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":195844,"byte_end":195847,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ The algorithm to perform this conversion is derived from one provided by Peter Baum; it is","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":195852,"byte_end":195946,"line_start":497,"line_end":497,"column_start":5,"column_end":99}},{"value":"/ freely available [here](https://www.researchgate.net/publication/316558298_Date_Algorithms).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":195951,"byte_end":196047,"line_start":498,"line_end":498,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":196052,"byte_end":196055,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":196060,"byte_end":196071,"line_start":500,"line_end":500,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":196076,"byte_end":196109,"line_start":501,"line_end":501,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(-4713-11-24 0:00 UTC).to_julian_day(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":196114,"byte_end":196181,"line_start":502,"line_end":502,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(2000-01-01 0:00 UTC).to_julian_day(), 2_451_545);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":196186,"byte_end":196260,"line_start":503,"line_end":503,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).to_julian_day(), 2_458_485);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":196265,"byte_end":196339,"line_start":504,"line_end":504,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00 UTC).to_julian_day(), 2_458_849);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":196344,"byte_end":196418,"line_start":505,"line_end":505,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":196423,"byte_end":196430,"line_start":506,"line_end":506,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1117},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":196871,"byte_end":196877,"line_start":520,"line_end":520,"column_start":18,"column_end":24},"name":"to_hms","qualname":"<OffsetDateTime>::to_hms","value":"pub const fn to_hms(Self) -> (u8, u8, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, and second.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, and second.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":196582,"byte_end":196625,"line_start":513,"line_end":513,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":196630,"byte_end":196633,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":196638,"byte_end":196649,"line_start":515,"line_end":515,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":196654,"byte_end":196687,"line_start":516,"line_end":516,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00 UTC).to_hms(), (0, 0, 0));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":196692,"byte_end":196762,"line_start":517,"line_end":517,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-01-01 23:59:59 UTC).to_hms(), (23, 59, 59));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":196767,"byte_end":196841,"line_start":518,"line_end":518,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":196846,"byte_end":196853,"line_start":519,"line_end":519,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1118},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":197336,"byte_end":197348,"line_start":537,"line_end":537,"column_start":18,"column_end":30},"name":"to_hms_milli","qualname":"<OffsetDateTime>::to_hms_milli","value":"pub const fn to_hms_milli(Self) -> (u8, u8, u8, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and millisecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and millisecond.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":196942,"byte_end":196998,"line_start":524,"line_end":524,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":197003,"byte_end":197006,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":197011,"byte_end":197022,"line_start":526,"line_end":526,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":197027,"byte_end":197060,"line_start":527,"line_end":527,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":197065,"byte_end":197080,"line_start":528,"line_end":528,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00:00 UTC).to_hms_milli(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":197085,"byte_end":197142,"line_start":529,"line_end":529,"column_start":5,"column_end":62}},{"value":"/     (0, 0, 0, 0)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":197147,"byte_end":197167,"line_start":530,"line_end":530,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":197172,"byte_end":197178,"line_start":531,"line_end":531,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":197183,"byte_end":197198,"line_start":532,"line_end":532,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999 UTC).to_hms_milli(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":197203,"byte_end":197265,"line_start":533,"line_end":533,"column_start":5,"column_end":67}},{"value":"/     (23, 59, 59, 999)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":197270,"byte_end":197295,"line_start":534,"line_end":534,"column_start":5,"column_end":30}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":197300,"byte_end":197306,"line_start":535,"line_end":535,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":197311,"byte_end":197318,"line_start":536,"line_end":536,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1119},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":197826,"byte_end":197838,"line_start":554,"line_end":554,"column_start":18,"column_end":30},"name":"to_hms_micro","qualname":"<OffsetDateTime>::to_hms_micro","value":"pub const fn to_hms_micro(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and microsecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and microsecond.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":197424,"byte_end":197480,"line_start":541,"line_end":541,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":197485,"byte_end":197488,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":197493,"byte_end":197504,"line_start":543,"line_end":543,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":197509,"byte_end":197542,"line_start":544,"line_end":544,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":197547,"byte_end":197562,"line_start":545,"line_end":545,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00:00 UTC).to_hms_micro(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":197567,"byte_end":197624,"line_start":546,"line_end":546,"column_start":5,"column_end":62}},{"value":"/     (0, 0, 0, 0)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":197629,"byte_end":197649,"line_start":547,"line_end":547,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":197654,"byte_end":197660,"line_start":548,"line_end":548,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":197665,"byte_end":197680,"line_start":549,"line_end":549,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999_999 UTC).to_hms_micro(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":197685,"byte_end":197751,"line_start":550,"line_end":550,"column_start":5,"column_end":71}},{"value":"/     (23, 59, 59, 999_999)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":197756,"byte_end":197785,"line_start":551,"line_end":551,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":197790,"byte_end":197796,"line_start":552,"line_end":552,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":197801,"byte_end":197808,"line_start":553,"line_end":553,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":198321,"byte_end":198332,"line_start":571,"line_end":571,"column_start":18,"column_end":29},"name":"to_hms_nano","qualname":"<OffsetDateTime>::to_hms_nano","value":"pub const fn to_hms_nano(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and nanosecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and nanosecond.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":197914,"byte_end":197969,"line_start":558,"line_end":558,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":197974,"byte_end":197977,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":197982,"byte_end":197993,"line_start":560,"line_end":560,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":197998,"byte_end":198031,"line_start":561,"line_end":561,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":198036,"byte_end":198051,"line_start":562,"line_end":562,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00:00 UTC).to_hms_nano(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":198056,"byte_end":198112,"line_start":563,"line_end":563,"column_start":5,"column_end":61}},{"value":"/     (0, 0, 0, 0)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":198117,"byte_end":198137,"line_start":564,"line_end":564,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":198142,"byte_end":198148,"line_start":565,"line_end":565,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":198153,"byte_end":198168,"line_start":566,"line_end":566,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999_999_999 UTC).to_hms_nano(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":198173,"byte_end":198242,"line_start":567,"line_end":567,"column_start":5,"column_end":74}},{"value":"/     (23, 59, 59, 999_999_999)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":198247,"byte_end":198280,"line_start":568,"line_end":568,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":198285,"byte_end":198291,"line_start":569,"line_end":569,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":198296,"byte_end":198303,"line_start":570,"line_end":570,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1121},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":198846,"byte_end":198850,"line_start":589,"line_end":589,"column_start":18,"column_end":22},"name":"hour","qualname":"<OffsetDateTime>::hour","value":"pub const fn hour(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour in the stored offset.","sig":null,"attributes":[{"value":"/ Get the clock hour in the stored offset.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":198407,"byte_end":198451,"line_start":575,"line_end":575,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":198456,"byte_end":198459,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..24`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":198464,"byte_end":198523,"line_start":577,"line_end":577,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":198528,"byte_end":198531,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":198536,"byte_end":198547,"line_start":579,"line_end":579,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":198552,"byte_end":198595,"line_start":580,"line_end":580,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).hour(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":198600,"byte_end":198657,"line_start":581,"line_end":581,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":198662,"byte_end":198677,"line_start":582,"line_end":582,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59 UTC)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":198682,"byte_end":198724,"line_start":583,"line_end":583,"column_start":5,"column_end":47}},{"value":"/         .to_offset(offset!(-2))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":198729,"byte_end":198764,"line_start":584,"line_end":584,"column_start":5,"column_end":40}},{"value":"/         .hour(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":198769,"byte_end":198789,"line_start":585,"line_end":585,"column_start":5,"column_end":25}},{"value":"/     21,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":198794,"byte_end":198805,"line_start":586,"line_end":586,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":198810,"byte_end":198816,"line_start":587,"line_end":587,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":198821,"byte_end":198828,"line_start":588,"line_end":588,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1122},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":199727,"byte_end":199733,"line_start":613,"line_end":613,"column_start":18,"column_end":24},"name":"minute","qualname":"<OffsetDateTime>::minute","value":"pub const fn minute(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the minute within the hour in the stored offset.","sig":null,"attributes":[{"value":"/ Get the minute within the hour in the stored offset.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":199269,"byte_end":199325,"line_start":599,"line_end":599,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":199330,"byte_end":199333,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":199338,"byte_end":199397,"line_start":601,"line_end":601,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":199402,"byte_end":199405,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":199410,"byte_end":199421,"line_start":603,"line_end":603,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":199426,"byte_end":199469,"line_start":604,"line_end":604,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).minute(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":199474,"byte_end":199533,"line_start":605,"line_end":605,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":199538,"byte_end":199553,"line_start":606,"line_end":606,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59 UTC)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":199558,"byte_end":199600,"line_start":607,"line_end":607,"column_start":5,"column_end":47}},{"value":"/         .to_offset(offset!(+0:30))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":199605,"byte_end":199643,"line_start":608,"line_end":608,"column_start":5,"column_end":43}},{"value":"/         .minute(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":199648,"byte_end":199670,"line_start":609,"line_end":609,"column_start":5,"column_end":27}},{"value":"/     29,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":199675,"byte_end":199686,"line_start":610,"line_end":610,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":199691,"byte_end":199697,"line_start":611,"line_end":611,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":199702,"byte_end":199709,"line_start":612,"line_end":612,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1123},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":200491,"byte_end":200497,"line_start":635,"line_end":635,"column_start":18,"column_end":24},"name":"second","qualname":"<OffsetDateTime>::second","value":"pub const fn second(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the second within the minute in the stored offset.","sig":null,"attributes":[{"value":"/ Get the second within the minute in the stored offset.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":200028,"byte_end":200086,"line_start":621,"line_end":621,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":200091,"byte_end":200094,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":200099,"byte_end":200158,"line_start":623,"line_end":623,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":200163,"byte_end":200166,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":200171,"byte_end":200182,"line_start":625,"line_end":625,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":200187,"byte_end":200230,"line_start":626,"line_end":626,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).second(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":200235,"byte_end":200294,"line_start":627,"line_end":627,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":200299,"byte_end":200314,"line_start":628,"line_end":628,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59 UTC)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":200319,"byte_end":200361,"line_start":629,"line_end":629,"column_start":5,"column_end":47}},{"value":"/         .to_offset(offset!(+0:00:30))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":200366,"byte_end":200407,"line_start":630,"line_end":630,"column_start":5,"column_end":46}},{"value":"/         .second(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":200412,"byte_end":200434,"line_start":631,"line_end":631,"column_start":5,"column_end":27}},{"value":"/     29,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":200439,"byte_end":200450,"line_start":632,"line_end":632,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":200455,"byte_end":200461,"line_start":633,"line_end":633,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":200466,"byte_end":200473,"line_start":634,"line_end":634,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1124},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":201172,"byte_end":201183,"line_start":652,"line_end":652,"column_start":18,"column_end":29},"name":"millisecond","qualname":"<OffsetDateTime>::millisecond","value":"pub const fn millisecond(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the milliseconds within the second in the stored offset.","sig":null,"attributes":[{"value":"/ Get the milliseconds within the second in the stored offset.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":200793,"byte_end":200857,"line_start":643,"line_end":643,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":200862,"byte_end":200865,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":200870,"byte_end":200932,"line_start":645,"line_end":645,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":200937,"byte_end":200940,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":200945,"byte_end":200956,"line_start":647,"line_end":647,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":200961,"byte_end":200994,"line_start":648,"line_end":648,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).millisecond(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":200999,"byte_end":201063,"line_start":649,"line_end":649,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59.999 UTC).millisecond(), 999);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":201068,"byte_end":201142,"line_start":650,"line_end":650,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":201147,"byte_end":201154,"line_start":651,"line_end":651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1125},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":201676,"byte_end":201687,"line_start":668,"line_end":668,"column_start":18,"column_end":29},"name":"microsecond","qualname":"<OffsetDateTime>::microsecond","value":"pub const fn microsecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the microseconds within the second in the stored offset.","sig":null,"attributes":[{"value":"/ Get the microseconds within the second in the stored offset.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":201250,"byte_end":201314,"line_start":656,"line_end":656,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":201319,"byte_end":201322,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":201327,"byte_end":201393,"line_start":658,"line_end":658,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":201398,"byte_end":201401,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":201406,"byte_end":201417,"line_start":660,"line_end":660,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":201422,"byte_end":201455,"line_start":661,"line_end":661,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).microsecond(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":201460,"byte_end":201524,"line_start":662,"line_end":662,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":201529,"byte_end":201544,"line_start":663,"line_end":663,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59.999_999 UTC).microsecond(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":201549,"byte_end":201614,"line_start":664,"line_end":664,"column_start":5,"column_end":70}},{"value":"/     999_999,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":201619,"byte_end":201635,"line_start":665,"line_end":665,"column_start":5,"column_end":21}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":201640,"byte_end":201646,"line_start":666,"line_end":666,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":201651,"byte_end":201658,"line_start":667,"line_end":667,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":202189,"byte_end":202199,"line_start":684,"line_end":684,"column_start":18,"column_end":28},"name":"nanosecond","qualname":"<OffsetDateTime>::nanosecond","value":"pub const fn nanosecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the nanoseconds within the second in the stored offset.","sig":null,"attributes":[{"value":"/ Get the nanoseconds within the second in the stored offset.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":201754,"byte_end":201817,"line_start":672,"line_end":672,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":201822,"byte_end":201825,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000_000`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":201830,"byte_end":201900,"line_start":674,"line_end":674,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":201905,"byte_end":201908,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":201913,"byte_end":201924,"line_start":676,"line_end":676,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":201929,"byte_end":201962,"line_start":677,"line_end":677,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).nanosecond(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":201967,"byte_end":202030,"line_start":678,"line_end":678,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":202035,"byte_end":202050,"line_start":679,"line_end":679,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59.999_999_999 UTC).nanosecond(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":202055,"byte_end":202123,"line_start":680,"line_end":680,"column_start":5,"column_end":73}},{"value":"/     999_999_999,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":202128,"byte_end":202148,"line_start":681,"line_end":681,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":202153,"byte_end":202159,"line_start":682,"line_end":682,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":202164,"byte_end":202171,"line_start":683,"line_end":683,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":203016,"byte_end":203027,"line_start":707,"line_end":707,"column_start":18,"column_end":29},"name":"checked_add","qualname":"<OffsetDateTime>::checked_add","value":"pub const fn checked_add(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, returning `None` if an overflow occurred.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":202354,"byte_end":202427,"line_start":691,"line_end":691,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":202432,"byte_end":202435,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":202440,"byte_end":202447,"line_start":693,"line_end":693,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":202452,"byte_end":202499,"line_start":694,"line_end":694,"column_start":5,"column_end":52}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":202504,"byte_end":202547,"line_start":695,"line_end":695,"column_start":5,"column_end":48}},{"value":"/ let datetime = Date::MIN.midnight().assume_offset(offset!(+10));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":202552,"byte_end":202620,"line_start":696,"line_end":696,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(datetime.checked_add((-2).days()), None);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":202625,"byte_end":202681,"line_start":697,"line_end":697,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":202686,"byte_end":202689,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ let datetime = Date::MAX.midnight().assume_offset(offset!(+10));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":202694,"byte_end":202762,"line_start":699,"line_end":699,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(datetime.checked_add(2.days()), None);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":202767,"byte_end":202820,"line_start":700,"line_end":700,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":202825,"byte_end":202828,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":202833,"byte_end":202848,"line_start":702,"line_end":702,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30 +10).checked_add(27.hours()),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":202853,"byte_end":202921,"line_start":703,"line_end":703,"column_start":5,"column_end":73}},{"value":"/     Some(datetime!(2019 - 11 - 26 18:30 +10))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":202926,"byte_end":202975,"line_start":704,"line_end":704,"column_start":5,"column_end":54}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":202980,"byte_end":202986,"line_start":705,"line_end":705,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":202991,"byte_end":202998,"line_start":706,"line_end":706,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":203916,"byte_end":203927,"line_start":728,"line_end":728,"column_start":18,"column_end":29},"name":"checked_sub","qualname":"<OffsetDateTime>::checked_sub","value":"pub const fn checked_sub(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, returning `None` if an overflow occurred.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":203254,"byte_end":203327,"line_start":712,"line_end":712,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":203332,"byte_end":203335,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":203340,"byte_end":203347,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":203352,"byte_end":203399,"line_start":715,"line_end":715,"column_start":5,"column_end":52}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":203404,"byte_end":203447,"line_start":716,"line_end":716,"column_start":5,"column_end":48}},{"value":"/ let datetime = Date::MIN.midnight().assume_offset(offset!(+10));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":203452,"byte_end":203520,"line_start":717,"line_end":717,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(datetime.checked_sub(2.days()), None);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":203525,"byte_end":203578,"line_start":718,"line_end":718,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":203583,"byte_end":203586,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ let datetime = Date::MAX.midnight().assume_offset(offset!(+10));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":203591,"byte_end":203659,"line_start":720,"line_end":720,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(datetime.checked_sub((-2).days()), None);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":203664,"byte_end":203720,"line_start":721,"line_end":721,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":203725,"byte_end":203728,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":203733,"byte_end":203748,"line_start":723,"line_end":723,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30 +10).checked_sub(27.hours()),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":203753,"byte_end":203821,"line_start":724,"line_end":724,"column_start":5,"column_end":73}},{"value":"/     Some(datetime!(2019 - 11 - 24 12:30 +10))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":203826,"byte_end":203875,"line_start":725,"line_end":725,"column_start":5,"column_end":54}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":203880,"byte_end":203886,"line_start":726,"line_end":726,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":203891,"byte_end":203898,"line_start":727,"line_end":727,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1129},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":204941,"byte_end":204955,"line_start":755,"line_end":755,"column_start":18,"column_end":32},"name":"saturating_add","qualname":"<OffsetDateTime>::saturating_add","value":"pub const fn saturating_add(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, saturating value on overflow.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":204228,"byte_end":204289,"line_start":735,"line_end":735,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":204294,"byte_end":204297,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":204302,"byte_end":204309,"line_start":737,"line_end":737,"column_start":5,"column_end":12}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":204314,"byte_end":204353,"line_start":738,"line_end":738,"column_start":5,"column_end":44}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":204358,"byte_end":204391,"line_start":739,"line_end":739,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":204396,"byte_end":204411,"line_start":740,"line_end":740,"column_start":5,"column_end":20}},{"value":"/     datetime!(-999999 - 01 - 01 0:00 +10).saturating_add((-2).days()),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":204416,"byte_end":204490,"line_start":741,"line_end":741,"column_start":5,"column_end":79}},{"value":"/     datetime!(-999999 - 01 - 01 0:00 +10)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":204495,"byte_end":204540,"line_start":742,"line_end":742,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":204545,"byte_end":204551,"line_start":743,"line_end":743,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":204556,"byte_end":204559,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":204564,"byte_end":204579,"line_start":745,"line_end":745,"column_start":5,"column_end":20}},{"value":"/     datetime!(+999999 - 12 - 31 23:59:59.999_999_999 +10).saturating_add(2.days()),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":204584,"byte_end":204671,"line_start":746,"line_end":746,"column_start":5,"column_end":92}},{"value":"/     datetime!(+999999 - 12 - 31 23:59:59.999_999_999 +10)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":204676,"byte_end":204737,"line_start":747,"line_end":747,"column_start":5,"column_end":66}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":204742,"byte_end":204748,"line_start":748,"line_end":748,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":204753,"byte_end":204756,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":204761,"byte_end":204776,"line_start":750,"line_end":750,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30 +10).saturating_add(27.hours()),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":204781,"byte_end":204852,"line_start":751,"line_end":751,"column_start":5,"column_end":76}},{"value":"/     datetime!(2019 - 11 - 26 18:30 +10)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":204857,"byte_end":204900,"line_start":752,"line_end":752,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":204905,"byte_end":204911,"line_start":753,"line_end":753,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":204916,"byte_end":204923,"line_start":754,"line_end":754,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1130},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":206088,"byte_end":206102,"line_start":789,"line_end":789,"column_start":18,"column_end":32},"name":"saturating_sub","qualname":"<OffsetDateTime>::saturating_sub","value":"pub const fn saturating_sub(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, saturating value on overflow.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":205375,"byte_end":205436,"line_start":769,"line_end":769,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":205441,"byte_end":205444,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":205449,"byte_end":205456,"line_start":771,"line_end":771,"column_start":5,"column_end":12}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":205461,"byte_end":205500,"line_start":772,"line_end":772,"column_start":5,"column_end":44}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":205505,"byte_end":205538,"line_start":773,"line_end":773,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":205543,"byte_end":205558,"line_start":774,"line_end":774,"column_start":5,"column_end":20}},{"value":"/     datetime!(-999999 - 01 - 01 0:00 +10).saturating_sub(2.days()),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":205563,"byte_end":205634,"line_start":775,"line_end":775,"column_start":5,"column_end":76}},{"value":"/     datetime!(-999999 - 01 - 01 0:00 +10)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":205639,"byte_end":205684,"line_start":776,"line_end":776,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":205689,"byte_end":205695,"line_start":777,"line_end":777,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":205700,"byte_end":205703,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":205708,"byte_end":205723,"line_start":779,"line_end":779,"column_start":5,"column_end":20}},{"value":"/     datetime!(+999999 - 12 - 31 23:59:59.999_999_999 +10).saturating_sub((-2).days()),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":205728,"byte_end":205818,"line_start":780,"line_end":780,"column_start":5,"column_end":95}},{"value":"/     datetime!(+999999 - 12 - 31 23:59:59.999_999_999 +10)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":205823,"byte_end":205884,"line_start":781,"line_end":781,"column_start":5,"column_end":66}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":205889,"byte_end":205895,"line_start":782,"line_end":782,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":205900,"byte_end":205903,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":205908,"byte_end":205923,"line_start":784,"line_end":784,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30 +10).saturating_sub(27.hours()),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":205928,"byte_end":205999,"line_start":785,"line_end":785,"column_start":5,"column_end":76}},{"value":"/     datetime!(2019 - 11 - 24 12:30 +10)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":206004,"byte_end":206047,"line_start":786,"line_end":786,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":206052,"byte_end":206058,"line_start":787,"line_end":787,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":206063,"byte_end":206070,"line_start":788,"line_end":788,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1132},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":207396,"byte_end":207408,"line_start":827,"line_end":827,"column_start":18,"column_end":30},"name":"replace_time","qualname":"<OffsetDateTime>::replace_time","value":"pub const fn replace_time(Self, Time) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the time, which is assumed to be in the stored offset. The date and offset\n components are unchanged.","sig":null,"attributes":[{"value":"/ Replace the time, which is assumed to be in the stored offset. The date and offset","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":206664,"byte_end":206750,"line_start":808,"line_end":808,"column_start":5,"column_end":91}},{"value":"/ components are unchanged.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":206755,"byte_end":206784,"line_start":809,"line_end":809,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":206789,"byte_end":206792,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":206797,"byte_end":206808,"line_start":811,"line_end":811,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, time};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":206813,"byte_end":206854,"line_start":812,"line_end":812,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":206859,"byte_end":206874,"line_start":813,"line_end":813,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 5:00 UTC).replace_time(time!(12:00)),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":206879,"byte_end":206945,"line_start":814,"line_end":814,"column_start":5,"column_end":71}},{"value":"/     datetime!(2020-01-01 12:00 UTC)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":206950,"byte_end":206989,"line_start":815,"line_end":815,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":206994,"byte_end":207000,"line_start":816,"line_end":816,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":207005,"byte_end":207020,"line_start":817,"line_end":817,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00 -5).replace_time(time!(7:00)),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":207025,"byte_end":207090,"line_start":818,"line_end":818,"column_start":5,"column_end":70}},{"value":"/     datetime!(2020-01-01 7:00 -5)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":207095,"byte_end":207132,"line_start":819,"line_end":819,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":207137,"byte_end":207143,"line_start":820,"line_end":820,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":207148,"byte_end":207163,"line_start":821,"line_end":821,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00 +1).replace_time(time!(12:00)),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":207168,"byte_end":207233,"line_start":822,"line_end":822,"column_start":5,"column_end":70}},{"value":"/     datetime!(2020-01-01 12:00 +1)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":207238,"byte_end":207276,"line_start":823,"line_end":823,"column_start":5,"column_end":43}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":207281,"byte_end":207287,"line_start":824,"line_end":824,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":207292,"byte_end":207299,"line_start":825,"line_end":825,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `OffsetDateTime`.\"","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":207304,"byte_end":207378,"line_start":826,"line_end":826,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1133},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":208185,"byte_end":208197,"line_start":849,"line_end":849,"column_start":18,"column_end":30},"name":"replace_date","qualname":"<OffsetDateTime>::replace_date","value":"pub const fn replace_date(Self, Date) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the date, which is assumed to be in the stored offset. The time and offset\n components are unchanged.","sig":null,"attributes":[{"value":"/ Replace the date, which is assumed to be in the stored offset. The time and offset","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":207586,"byte_end":207672,"line_start":834,"line_end":834,"column_start":5,"column_end":91}},{"value":"/ components are unchanged.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":207677,"byte_end":207706,"line_start":835,"line_end":835,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":207711,"byte_end":207714,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":207719,"byte_end":207730,"line_start":837,"line_end":837,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, date};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":207735,"byte_end":207776,"line_start":838,"line_end":838,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":207781,"byte_end":207796,"line_start":839,"line_end":839,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00 UTC).replace_date(date!(2020-01-30)),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":207801,"byte_end":207873,"line_start":840,"line_end":840,"column_start":5,"column_end":77}},{"value":"/     datetime!(2020-01-30 12:00 UTC)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":207878,"byte_end":207917,"line_start":841,"line_end":841,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":207922,"byte_end":207928,"line_start":842,"line_end":842,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":207933,"byte_end":207948,"line_start":843,"line_end":843,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00 +1).replace_date(date!(2020-01-30)),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":207953,"byte_end":208023,"line_start":844,"line_end":844,"column_start":5,"column_end":75}},{"value":"/     datetime!(2020-01-30 0:00 +1)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":208028,"byte_end":208065,"line_start":845,"line_end":845,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":208070,"byte_end":208076,"line_start":846,"line_end":846,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":208081,"byte_end":208088,"line_start":847,"line_end":847,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `OffsetDateTime`.\"","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":208093,"byte_end":208167,"line_start":848,"line_end":848,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1134},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":209000,"byte_end":209017,"line_start":871,"line_end":871,"column_start":18,"column_end":35},"name":"replace_date_time","qualname":"<OffsetDateTime>::replace_date_time","value":"pub const fn replace_date_time(Self, PrimitiveDateTime) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the date and time, which are assumed to be in the stored offset. The offset\n component remains unchanged.","sig":null,"attributes":[{"value":"/ Replace the date and time, which are assumed to be in the stored offset. The offset","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":208375,"byte_end":208462,"line_start":856,"line_end":856,"column_start":5,"column_end":92}},{"value":"/ component remains unchanged.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":208467,"byte_end":208499,"line_start":857,"line_end":857,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":208504,"byte_end":208507,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":208512,"byte_end":208523,"line_start":859,"line_end":859,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":208528,"byte_end":208561,"line_start":860,"line_end":860,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":208566,"byte_end":208581,"line_start":861,"line_end":861,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00 UTC).replace_date_time(datetime!(2020-01-30 16:00)),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":208586,"byte_end":208673,"line_start":862,"line_end":862,"column_start":5,"column_end":92}},{"value":"/     datetime!(2020-01-30 16:00 UTC)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":208678,"byte_end":208717,"line_start":863,"line_end":863,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":208722,"byte_end":208728,"line_start":864,"line_end":864,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":208733,"byte_end":208748,"line_start":865,"line_end":865,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00 +1).replace_date_time(datetime!(2020-01-30 0:00)),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":208753,"byte_end":208838,"line_start":866,"line_end":866,"column_start":5,"column_end":90}},{"value":"/     datetime!(2020-01-30 0:00 +1)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":208843,"byte_end":208880,"line_start":867,"line_end":867,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":208885,"byte_end":208891,"line_start":868,"line_end":868,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":208896,"byte_end":208903,"line_start":869,"line_end":869,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `OffsetDateTime`.\"","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":208908,"byte_end":208982,"line_start":870,"line_end":870,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1135},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":209516,"byte_end":209530,"line_start":885,"line_end":885,"column_start":18,"column_end":32},"name":"replace_offset","qualname":"<OffsetDateTime>::replace_offset","value":"pub const fn replace_offset(Self, UtcOffset) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the offset. The date and time components remain unchanged.","sig":null,"attributes":[{"value":"/ Replace the offset. The date and time components remain unchanged.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":209120,"byte_end":209190,"line_start":875,"line_end":875,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":209195,"byte_end":209198,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":209203,"byte_end":209214,"line_start":877,"line_end":877,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":209219,"byte_end":209262,"line_start":878,"line_end":878,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":209267,"byte_end":209282,"line_start":879,"line_end":879,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00 UTC).replace_offset(offset!(-5)),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":209287,"byte_end":209354,"line_start":880,"line_end":880,"column_start":5,"column_end":72}},{"value":"/     datetime!(2020-01-01 0:00 -5)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":209359,"byte_end":209396,"line_start":881,"line_end":881,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":209401,"byte_end":209407,"line_start":882,"line_end":882,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":209412,"byte_end":209419,"line_start":883,"line_end":883,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `OffsetDateTime`.\"","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":209424,"byte_end":209498,"line_start":884,"line_end":884,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1136},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":210182,"byte_end":210194,"line_start":900,"line_end":900,"column_start":18,"column_end":30},"name":"replace_year","qualname":"<OffsetDateTime>::replace_year","value":"pub const fn replace_year(Self, i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the year. The month and day will be unchanged.","sig":null,"attributes":[{"value":"/ Replace the year. The month and day will be unchanged.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":209625,"byte_end":209683,"line_start":889,"line_end":889,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":209688,"byte_end":209691,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":209696,"byte_end":209707,"line_start":891,"line_end":891,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":209712,"byte_end":209745,"line_start":892,"line_end":892,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":209750,"byte_end":209765,"line_start":893,"line_end":893,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00 +01).replace_year(2019),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":209770,"byte_end":209833,"line_start":894,"line_end":894,"column_start":5,"column_end":68}},{"value":"/     Ok(datetime!(2019 - 02 - 18 12:00 +01))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":209838,"byte_end":209885,"line_start":895,"line_end":895,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":209890,"byte_end":209896,"line_start":896,"line_end":896,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00 +01).replace_year(-1_000_000_000).is_err()); // -1_000_000_000 isn't a valid year","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":209901,"byte_end":210025,"line_start":897,"line_end":897,"column_start":5,"column_end":129}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00 +01).replace_year(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid year","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":210030,"byte_end":210152,"line_start":898,"line_end":898,"column_start":5,"column_end":127}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":210157,"byte_end":210164,"line_start":899,"line_end":899,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":210889,"byte_end":210902,"line_start":920,"line_end":920,"column_start":18,"column_end":31},"name":"replace_month","qualname":"<OffsetDateTime>::replace_month","value":"pub const fn replace_month(Self, Month) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the month of the year.","sig":null,"attributes":[{"value":"/ Replace the month of the year.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":210444,"byte_end":210478,"line_start":909,"line_end":909,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":210483,"byte_end":210486,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":210491,"byte_end":210502,"line_start":911,"line_end":911,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":210507,"byte_end":210540,"line_start":912,"line_end":912,"column_start":5,"column_end":38}},{"value":"/ # use time::Month;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":210545,"byte_end":210567,"line_start":913,"line_end":913,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":210572,"byte_end":210587,"line_start":914,"line_end":914,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00 +01).replace_month(Month::January),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":210592,"byte_end":210666,"line_start":915,"line_end":915,"column_start":5,"column_end":79}},{"value":"/     Ok(datetime!(2022 - 01 - 18 12:00 +01))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":210671,"byte_end":210718,"line_start":916,"line_end":916,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":210723,"byte_end":210729,"line_start":917,"line_end":917,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 01 - 30 12:00 +01).replace_month(Month::February).is_err()); // 30 isn't a valid day in February","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":210734,"byte_end":210859,"line_start":918,"line_end":918,"column_start":5,"column_end":130}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":210864,"byte_end":210871,"line_start":919,"line_end":919,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":211646,"byte_end":211657,"line_start":940,"line_end":940,"column_start":18,"column_end":29},"name":"replace_day","qualname":"<OffsetDateTime>::replace_day","value":"pub const fn replace_day(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the day of the month.","sig":null,"attributes":[{"value":"/ Replace the day of the month.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":211157,"byte_end":211190,"line_start":929,"line_end":929,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":211195,"byte_end":211198,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":211203,"byte_end":211214,"line_start":931,"line_end":931,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":211219,"byte_end":211252,"line_start":932,"line_end":932,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":211257,"byte_end":211272,"line_start":933,"line_end":933,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00 +01).replace_day(1),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":211277,"byte_end":211336,"line_start":934,"line_end":934,"column_start":5,"column_end":64}},{"value":"/     Ok(datetime!(2022 - 02 - 01 12:00 +01))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":211341,"byte_end":211388,"line_start":935,"line_end":935,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":211393,"byte_end":211399,"line_start":936,"line_end":936,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00 +01).replace_day(0).is_err()); // 00 isn't a valid day","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":211404,"byte_end":211501,"line_start":937,"line_end":937,"column_start":5,"column_end":102}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00 +01).replace_day(30).is_err()); // 30 isn't a valid day in February","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":211506,"byte_end":211616,"line_start":938,"line_end":938,"column_start":5,"column_end":115}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":211621,"byte_end":211628,"line_start":939,"line_end":939,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":212320,"byte_end":212332,"line_start":959,"line_end":959,"column_start":18,"column_end":30},"name":"replace_hour","qualname":"<OffsetDateTime>::replace_hour","value":"pub const fn replace_hour(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the clock hour.","sig":null,"attributes":[{"value":"/ Replace the clock hour.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":211903,"byte_end":211930,"line_start":949,"line_end":949,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":211935,"byte_end":211938,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":211943,"byte_end":211954,"line_start":951,"line_end":951,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":211959,"byte_end":211992,"line_start":952,"line_end":952,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":211997,"byte_end":212012,"line_start":953,"line_end":953,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_hour(7),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":212017,"byte_end":212092,"line_start":954,"line_end":954,"column_start":5,"column_end":80}},{"value":"/     Ok(datetime!(2022 - 02 - 18 07:02:03.004_005_006 +01))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":212097,"byte_end":212159,"line_start":955,"line_end":955,"column_start":5,"column_end":67}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":212164,"byte_end":212170,"line_start":956,"line_end":956,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_hour(24).is_err()); // 24 isn't a valid hour","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":212175,"byte_end":212290,"line_start":957,"line_end":957,"column_start":5,"column_end":120}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":212295,"byte_end":212302,"line_start":958,"line_end":958,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":213017,"byte_end":213031,"line_start":978,"line_end":978,"column_start":18,"column_end":32},"name":"replace_minute","qualname":"<OffsetDateTime>::replace_minute","value":"pub const fn replace_minute(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the minutes within the hour.","sig":null,"attributes":[{"value":"/ Replace the minutes within the hour.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":212581,"byte_end":212621,"line_start":968,"line_end":968,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":212626,"byte_end":212629,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":212634,"byte_end":212645,"line_start":970,"line_end":970,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":212650,"byte_end":212683,"line_start":971,"line_end":971,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":212688,"byte_end":212703,"line_start":972,"line_end":972,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_minute(7),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":212708,"byte_end":212785,"line_start":973,"line_end":973,"column_start":5,"column_end":82}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:07:03.004_005_006 +01))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":212790,"byte_end":212852,"line_start":974,"line_end":974,"column_start":5,"column_end":67}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":212857,"byte_end":212863,"line_start":975,"line_end":975,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_minute(60).is_err()); // 60 isn't a valid minute","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":212868,"byte_end":212987,"line_start":976,"line_end":976,"column_start":5,"column_end":124}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":212992,"byte_end":212999,"line_start":977,"line_end":977,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1141},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":213724,"byte_end":213738,"line_start":997,"line_end":997,"column_start":18,"column_end":32},"name":"replace_second","qualname":"<OffsetDateTime>::replace_second","value":"pub const fn replace_second(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the seconds within the minute.","sig":null,"attributes":[{"value":"/ Replace the seconds within the minute.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":213286,"byte_end":213328,"line_start":987,"line_end":987,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":213333,"byte_end":213336,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":213341,"byte_end":213352,"line_start":989,"line_end":989,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":213357,"byte_end":213390,"line_start":990,"line_end":990,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":213395,"byte_end":213410,"line_start":991,"line_end":991,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_second(7),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":213415,"byte_end":213492,"line_start":992,"line_end":992,"column_start":5,"column_end":82}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:07.004_005_006 +01))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":213497,"byte_end":213559,"line_start":993,"line_end":993,"column_start":5,"column_end":67}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":213564,"byte_end":213570,"line_start":994,"line_end":994,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_second(60).is_err()); // 60 isn't a valid second","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":213575,"byte_end":213694,"line_start":995,"line_end":995,"column_start":5,"column_end":124}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":213699,"byte_end":213706,"line_start":996,"line_end":996,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1142},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":214449,"byte_end":214468,"line_start":1016,"line_end":1016,"column_start":18,"column_end":37},"name":"replace_millisecond","qualname":"<OffsetDateTime>::replace_millisecond","value":"pub const fn replace_millisecond(Self, u16)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the milliseconds within the second.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":213993,"byte_end":214040,"line_start":1006,"line_end":1006,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":214045,"byte_end":214048,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":214053,"byte_end":214064,"line_start":1008,"line_end":1008,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":214069,"byte_end":214102,"line_start":1009,"line_end":1009,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":214107,"byte_end":214122,"line_start":1010,"line_end":1010,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_millisecond(7),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":214127,"byte_end":214209,"line_start":1011,"line_end":1011,"column_start":5,"column_end":87}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007 +01))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":214214,"byte_end":214268,"line_start":1012,"line_end":1012,"column_start":5,"column_end":59}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":214273,"byte_end":214279,"line_start":1013,"line_end":1013,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_millisecond(1_000).is_err()); // 1_000 isn't a valid millisecond","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":214284,"byte_end":214419,"line_start":1014,"line_end":1014,"column_start":5,"column_end":140}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":214424,"byte_end":214431,"line_start":1015,"line_end":1015,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1143},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":215234,"byte_end":215253,"line_start":1038,"line_end":1038,"column_start":18,"column_end":37},"name":"replace_microsecond","qualname":"<OffsetDateTime>::replace_microsecond","value":"pub const fn replace_microsecond(Self, u32)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the microseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the microseconds within the second.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":214762,"byte_end":214809,"line_start":1028,"line_end":1028,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":214814,"byte_end":214817,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":214822,"byte_end":214833,"line_start":1030,"line_end":1030,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":214838,"byte_end":214871,"line_start":1031,"line_end":1031,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":214876,"byte_end":214891,"line_start":1032,"line_end":1032,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_microsecond(7_008),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":214896,"byte_end":214982,"line_start":1033,"line_end":1033,"column_start":5,"column_end":91}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007_008 +01))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":214987,"byte_end":215045,"line_start":1034,"line_end":1034,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":215050,"byte_end":215056,"line_start":1035,"line_end":1035,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_microsecond(1_000_000).is_err()); // 1_000_000 isn't a valid microsecond","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":215061,"byte_end":215204,"line_start":1036,"line_end":1036,"column_start":5,"column_end":148}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":215209,"byte_end":215216,"line_start":1037,"line_end":1037,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1144},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":216031,"byte_end":216049,"line_start":1060,"line_end":1060,"column_start":18,"column_end":36},"name":"replace_nanosecond","qualname":"<OffsetDateTime>::replace_nanosecond","value":"pub const fn replace_nanosecond(Self, u32)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the nanoseconds within the second.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":215547,"byte_end":215593,"line_start":1050,"line_end":1050,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":215598,"byte_end":215601,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":215606,"byte_end":215617,"line_start":1052,"line_end":1052,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":215622,"byte_end":215655,"line_start":1053,"line_end":1053,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":215660,"byte_end":215675,"line_start":1054,"line_end":1054,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_nanosecond(7_008_009),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":215680,"byte_end":215769,"line_start":1055,"line_end":1055,"column_start":5,"column_end":94}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007_008_009 +01))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":215774,"byte_end":215836,"line_start":1056,"line_end":1056,"column_start":5,"column_end":67}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":215841,"byte_end":215847,"line_start":1057,"line_end":1057,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_nanosecond(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid nanosecond","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":215852,"byte_end":216001,"line_start":1058,"line_end":1058,"column_start":5,"column_end":154}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":216006,"byte_end":216013,"line_start":1059,"line_end":1059,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1146},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":216548,"byte_end":216559,"line_start":1076,"line_end":1076,"column_start":12,"column_end":23},"name":"format_into","qualname":"<OffsetDateTime>::format_into","value":"pub fn format_into<impl io::Write: io::Write,\n                   impl Formattable + ?Sized: Formattable +\n                   ?Sized>(Self, &mut impl io::Write,\n                           &impl Formattable + ?Sized)\n-> Result<usize, error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `OffsetDateTime` using the provided [format\n description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `OffsetDateTime` using the provided [format","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":216429,"byte_end":216487,"line_start":1074,"line_end":1074,"column_start":5,"column_end":63}},{"value":"/ description](crate::format_description).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":216492,"byte_end":216536,"line_start":1075,"line_end":1075,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1149},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":217521,"byte_end":217527,"line_start":1105,"line_end":1105,"column_start":12,"column_end":18},"name":"format","qualname":"<OffsetDateTime>::format","value":"pub fn format<impl Formattable + ?Sized: Formattable +\n              ?Sized>(Self, &impl Formattable + ?Sized)\n-> Result<String, error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `OffsetDateTime` using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `OffsetDateTime` using the provided [format","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":216924,"byte_end":216982,"line_start":1090,"line_end":1090,"column_start":5,"column_end":63}},{"value":"/ description](crate::format_description).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":216987,"byte_end":217031,"line_start":1091,"line_end":1091,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":217036,"byte_end":217039,"line_start":1092,"line_end":1092,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":217044,"byte_end":217055,"line_start":1093,"line_end":1093,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::datetime};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":217060,"byte_end":217115,"line_start":1094,"line_end":1094,"column_start":5,"column_end":60}},{"value":"/ let format = format_description::parse(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":217120,"byte_end":217163,"line_start":1095,"line_end":1095,"column_start":5,"column_end":48}},{"value":"/     \"[year]-[month]-[day] [hour]:[minute]:[second] [offset_hour \\","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":217168,"byte_end":217237,"line_start":1096,"line_end":1096,"column_start":5,"column_end":74}},{"value":"/          sign:mandatory]:[offset_minute]:[offset_second]\",","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":217242,"byte_end":217304,"line_start":1097,"line_end":1097,"column_start":5,"column_end":67}},{"value":"/ )?;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":217309,"byte_end":217316,"line_start":1098,"line_end":1098,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":217321,"byte_end":217336,"line_start":1099,"line_end":1099,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-02 03:04:05 +06:07:08).format(&format)?,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":217341,"byte_end":217407,"line_start":1100,"line_end":1100,"column_start":5,"column_end":71}},{"value":"/     \"2020-01-02 03:04:05 +06:07:08\"","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":217412,"byte_end":217451,"line_start":1101,"line_end":1101,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":217456,"byte_end":217462,"line_start":1102,"line_end":1102,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":217467,"byte_end":217497,"line_start":1103,"line_end":1103,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":217502,"byte_end":217509,"line_start":1104,"line_end":1104,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2499},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":224208,"byte_end":224225,"line_start":17,"line_end":17,"column_start":12,"column_end":29},"name":"PrimitiveDateTime","qualname":"::primitive_date_time::PrimitiveDateTime","value":"PrimitiveDateTime {  }","parent":null,"children":[{"krate":0,"index":2500},{"krate":0,"index":2501}],"decl_id":null,"docs":" Combined date and time.\n","sig":null,"attributes":[{"value":"/ Combined date and time.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":224101,"byte_end":224128,"line_start":15,"line_end":15,"column_start":1,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":1246},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":224996,"byte_end":224999,"line_start":37,"line_end":37,"column_start":15,"column_end":18},"name":"MIN","qualname":"::primitive_date_time::PrimitiveDateTime::MIN","value":"Self","parent":{"krate":0,"index":1245},"children":[],"decl_id":null,"docs":" The smallest value that can be represented by `PrimitiveDateTime`.","sig":null,"attributes":[{"value":"/ The smallest value that can be represented by `PrimitiveDateTime`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":224418,"byte_end":224488,"line_start":25,"line_end":25,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":224493,"byte_end":224496,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ Depending on `large-dates` feature flag, value of this constant may vary.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":224501,"byte_end":224578,"line_start":27,"line_end":27,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":224583,"byte_end":224586,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ 1. With `large-dates` disabled it is equal to `-9999 - 01 - 01 00:00:00.0`","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":224591,"byte_end":224669,"line_start":29,"line_end":29,"column_start":5,"column_end":83}},{"value":"/ 2. With `large-dates` enabled it is equal to `-999999 - 01 - 01 00:00:00.0`","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":224674,"byte_end":224753,"line_start":30,"line_end":30,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":224758,"byte_end":224761,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":224766,"byte_end":224777,"line_start":32,"line_end":32,"column_start":5,"column_end":16}},{"value":"/ # use time::{PrimitiveDateTime, macros::datetime};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":224782,"byte_end":224836,"line_start":33,"line_end":33,"column_start":5,"column_end":59}},{"value":"/ // Assuming `large-dates` feature is enabled.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":224841,"byte_end":224890,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(PrimitiveDateTime::MIN, datetime!(-999999 - 01 - 01 0:00));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":224895,"byte_end":224969,"line_start":35,"line_end":35,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":224974,"byte_end":224981,"line_start":36,"line_end":36,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":1247},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":225657,"byte_end":225660,"line_start":51,"line_end":51,"column_start":15,"column_end":18},"name":"MAX","qualname":"::primitive_date_time::PrimitiveDateTime::MAX","value":"Self","parent":{"krate":0,"index":1245},"children":[],"decl_id":null,"docs":" The largest value that can be represented by `PrimitiveDateTime`.","sig":null,"attributes":[{"value":"/ The largest value that can be represented by `PrimitiveDateTime`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":225046,"byte_end":225115,"line_start":39,"line_end":39,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":225120,"byte_end":225123,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Depending on `large-dates` feature flag, value of this constant may vary.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":225128,"byte_end":225205,"line_start":41,"line_end":41,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":225210,"byte_end":225213,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ 1. With `large-dates` disabled it is equal to `9999 - 12 - 31 23:59:59.999_999_999`","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":225218,"byte_end":225305,"line_start":43,"line_end":43,"column_start":5,"column_end":92}},{"value":"/ 2. With `large-dates` enabled it is equal to `999999 - 12 - 31 23:59:59.999_999_999`","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":225310,"byte_end":225398,"line_start":44,"line_end":44,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":225403,"byte_end":225406,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":225411,"byte_end":225422,"line_start":46,"line_end":46,"column_start":5,"column_end":16}},{"value":"/ # use time::{PrimitiveDateTime, macros::datetime};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":225427,"byte_end":225481,"line_start":47,"line_end":47,"column_start":5,"column_end":59}},{"value":"/ // Assuming `large-dates` feature is enabled.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":225486,"byte_end":225535,"line_start":48,"line_end":48,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(PrimitiveDateTime::MAX, datetime!(+999999 - 12 - 31 23:59:59.999_999_999));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":225540,"byte_end":225630,"line_start":49,"line_end":49,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":225635,"byte_end":225642,"line_start":50,"line_end":50,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1248},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":226050,"byte_end":226053,"line_start":62,"line_end":62,"column_start":18,"column_end":21},"name":"new","qualname":"<PrimitiveDateTime>::new","value":"pub const fn new(Date, Time) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PrimitiveDateTime` from the provided [`Date`] and [`Time`].","sig":null,"attributes":[{"value":"/ Create a new `PrimitiveDateTime` from the provided [`Date`] and [`Time`].","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":225707,"byte_end":225784,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":225789,"byte_end":225792,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":225797,"byte_end":225808,"line_start":55,"line_end":55,"column_start":5,"column_end":16}},{"value":"/ # use time::{PrimitiveDateTime, macros::{date, datetime, time}};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":225813,"byte_end":225881,"line_start":56,"line_end":56,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":225886,"byte_end":225901,"line_start":57,"line_end":57,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::new(date!(2019-01-01), time!(0:00)),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":225906,"byte_end":225969,"line_start":58,"line_end":58,"column_start":5,"column_end":68}},{"value":"/     datetime!(2019-01-01 0:00),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":225974,"byte_end":226009,"line_start":59,"line_end":59,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":226014,"byte_end":226020,"line_start":60,"line_end":60,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":226025,"byte_end":226032,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1249},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":226392,"byte_end":226396,"line_start":73,"line_end":73,"column_start":18,"column_end":22},"name":"date","qualname":"<PrimitiveDateTime>::date","value":"pub const fn date(Self) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Date`] component of the `PrimitiveDateTime`.","sig":null,"attributes":[{"value":"/ Get the [`Date`] component of the `PrimitiveDateTime`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":226160,"byte_end":226218,"line_start":67,"line_end":67,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":226223,"byte_end":226226,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":226231,"byte_end":226242,"line_start":69,"line_end":69,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{date, datetime};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":226247,"byte_end":226288,"line_start":70,"line_end":70,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).date(), date!(2019-01-01));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":226293,"byte_end":226362,"line_start":71,"line_end":71,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":226367,"byte_end":226374,"line_start":72,"line_end":72,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1250},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":226656,"byte_end":226660,"line_start":82,"line_end":82,"column_start":18,"column_end":22},"name":"time","qualname":"<PrimitiveDateTime>::time","value":"pub const fn time(Self) -> Time","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Time`] component of the `PrimitiveDateTime`.","sig":null,"attributes":[{"value":"/ Get the [`Time`] component of the `PrimitiveDateTime`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":226442,"byte_end":226500,"line_start":77,"line_end":77,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":226505,"byte_end":226508,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":226513,"byte_end":226524,"line_start":79,"line_end":79,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, time};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":226529,"byte_end":226570,"line_start":80,"line_end":80,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).time(), time!(0:00));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":226575,"byte_end":226638,"line_start":81,"line_end":81,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1251},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":227073,"byte_end":227077,"line_start":96,"line_end":96,"column_start":18,"column_end":22},"name":"year","qualname":"<PrimitiveDateTime>::year","value":"pub const fn year(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the year of the date.","sig":null,"attributes":[{"value":"/ Get the year of the date.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":226769,"byte_end":226798,"line_start":88,"line_end":88,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":226803,"byte_end":226806,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":226811,"byte_end":226822,"line_start":90,"line_end":90,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":226827,"byte_end":226860,"line_start":91,"line_end":91,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).year(), 2019);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":226865,"byte_end":226921,"line_start":92,"line_end":92,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).year(), 2019);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":226926,"byte_end":226982,"line_start":93,"line_end":93,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00).year(), 2020);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":226987,"byte_end":227043,"line_start":94,"line_end":94,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":227048,"byte_end":227055,"line_start":95,"line_end":95,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1252},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":227405,"byte_end":227410,"line_start":107,"line_end":107,"column_start":18,"column_end":23},"name":"month","qualname":"<PrimitiveDateTime>::month","value":"pub const fn month(Self) -> Month","parent":null,"children":[],"decl_id":null,"docs":" Get the month of the date.","sig":null,"attributes":[{"value":"/ Get the month of the date.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":227129,"byte_end":227159,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":227164,"byte_end":227167,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":227172,"byte_end":227183,"line_start":102,"line_end":102,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::datetime, Month};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":227188,"byte_end":227230,"line_start":103,"line_end":103,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).month(), Month::January);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":227235,"byte_end":227302,"line_start":104,"line_end":104,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).month(), Month::December);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":227307,"byte_end":227375,"line_start":105,"line_end":105,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":227380,"byte_end":227387,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1253},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":227773,"byte_end":227776,"line_start":120,"line_end":120,"column_start":18,"column_end":21},"name":"day","qualname":"<PrimitiveDateTime>::day","value":"pub const fn day(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the date.","sig":null,"attributes":[{"value":"/ Get the day of the date.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":227465,"byte_end":227493,"line_start":111,"line_end":111,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":227498,"byte_end":227501,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=31`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":227506,"byte_end":227566,"line_start":113,"line_end":113,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":227571,"byte_end":227574,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":227579,"byte_end":227590,"line_start":115,"line_end":115,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":227595,"byte_end":227628,"line_start":116,"line_end":116,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).day(), 1);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":227633,"byte_end":227685,"line_start":117,"line_end":117,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).day(), 31);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":227690,"byte_end":227743,"line_start":118,"line_end":118,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":227748,"byte_end":227755,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1254},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":228173,"byte_end":228180,"line_start":133,"line_end":133,"column_start":18,"column_end":25},"name":"ordinal","qualname":"<PrimitiveDateTime>::ordinal","value":"pub const fn ordinal(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the year.","sig":null,"attributes":[{"value":"/ Get the day of the year.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":227826,"byte_end":227854,"line_start":124,"line_end":124,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":227859,"byte_end":227862,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=366` (`1..=365` for common years).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":227867,"byte_end":227957,"line_start":126,"line_end":126,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":227962,"byte_end":227965,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":227970,"byte_end":227981,"line_start":128,"line_end":128,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":227986,"byte_end":228019,"line_start":129,"line_end":129,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).ordinal(), 1);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":228024,"byte_end":228080,"line_start":130,"line_end":130,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).ordinal(), 365);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":228085,"byte_end":228143,"line_start":131,"line_end":131,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":228148,"byte_end":228155,"line_start":132,"line_end":132,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1255},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":228741,"byte_end":228749,"line_start":149,"line_end":149,"column_start":18,"column_end":26},"name":"iso_week","qualname":"<PrimitiveDateTime>::iso_week","value":"pub const fn iso_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO week number.","sig":null,"attributes":[{"value":"/ Get the ISO week number.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":228235,"byte_end":228263,"line_start":137,"line_end":137,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":228268,"byte_end":228271,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=53`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":228276,"byte_end":228336,"line_start":139,"line_end":139,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":228341,"byte_end":228344,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":228349,"byte_end":228360,"line_start":141,"line_end":141,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":228365,"byte_end":228398,"line_start":142,"line_end":142,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).iso_week(), 1);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":228403,"byte_end":228460,"line_start":143,"line_end":143,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(datetime!(2019-10-04 0:00).iso_week(), 40);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":228465,"byte_end":228523,"line_start":144,"line_end":144,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00).iso_week(), 1);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":228528,"byte_end":228585,"line_start":145,"line_end":145,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00).iso_week(), 53);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":228590,"byte_end":228648,"line_start":146,"line_end":146,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00).iso_week(), 53);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":228653,"byte_end":228711,"line_start":147,"line_end":147,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":228716,"byte_end":228723,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1256},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":229318,"byte_end":229335,"line_start":164,"line_end":164,"column_start":18,"column_end":35},"name":"sunday_based_week","qualname":"<PrimitiveDateTime>::sunday_based_week","value":"pub const fn sunday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Sunday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Sunday.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":228804,"byte_end":228868,"line_start":153,"line_end":153,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":228873,"byte_end":228876,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":228881,"byte_end":228941,"line_start":155,"line_end":155,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":228946,"byte_end":228949,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":228954,"byte_end":228965,"line_start":157,"line_end":157,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":228970,"byte_end":229003,"line_start":158,"line_end":158,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).sunday_based_week(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":229008,"byte_end":229074,"line_start":159,"line_end":159,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00).sunday_based_week(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":229079,"byte_end":229145,"line_start":160,"line_end":160,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00).sunday_based_week(), 52);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":229150,"byte_end":229217,"line_start":161,"line_end":161,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00).sunday_based_week(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":229222,"byte_end":229288,"line_start":162,"line_end":162,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":229293,"byte_end":229300,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1257},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":229913,"byte_end":229930,"line_start":179,"line_end":179,"column_start":18,"column_end":35},"name":"monday_based_week","qualname":"<PrimitiveDateTime>::monday_based_week","value":"pub const fn monday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Monday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Monday.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":229399,"byte_end":229463,"line_start":168,"line_end":168,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":229468,"byte_end":229471,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":229476,"byte_end":229536,"line_start":170,"line_end":170,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":229541,"byte_end":229544,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":229549,"byte_end":229560,"line_start":172,"line_end":172,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":229565,"byte_end":229598,"line_start":173,"line_end":173,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).monday_based_week(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":229603,"byte_end":229669,"line_start":174,"line_end":174,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00).monday_based_week(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":229674,"byte_end":229740,"line_start":175,"line_end":175,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00).monday_based_week(), 52);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":229745,"byte_end":229812,"line_start":176,"line_end":176,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00).monday_based_week(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":229817,"byte_end":229883,"line_start":177,"line_end":177,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":229888,"byte_end":229895,"line_start":178,"line_end":178,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1258},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":230256,"byte_end":230272,"line_start":192,"line_end":192,"column_start":18,"column_end":34},"name":"to_calendar_date","qualname":"<PrimitiveDateTime>::to_calendar_date","value":"pub const fn to_calendar_date(Self) -> (i32, Month, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the year, month, and day.","sig":null,"attributes":[{"value":"/ Get the year, month, and day.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":229994,"byte_end":230027,"line_start":183,"line_end":183,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":230032,"byte_end":230035,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":230040,"byte_end":230051,"line_start":185,"line_end":185,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::datetime, Month};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":230056,"byte_end":230098,"line_start":186,"line_end":186,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":230103,"byte_end":230118,"line_start":187,"line_end":187,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00).to_calendar_date(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":230123,"byte_end":230177,"line_start":188,"line_end":188,"column_start":5,"column_end":59}},{"value":"/     (2019, Month::January, 1)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":230182,"byte_end":230215,"line_start":189,"line_end":189,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":230220,"byte_end":230226,"line_start":190,"line_end":190,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":230231,"byte_end":230238,"line_start":191,"line_end":191,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1259},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":230558,"byte_end":230573,"line_start":202,"line_end":202,"column_start":18,"column_end":33},"name":"to_ordinal_date","qualname":"<PrimitiveDateTime>::to_ordinal_date","value":"pub const fn to_ordinal_date(Self) -> (i32, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the year and ordinal day number.","sig":null,"attributes":[{"value":"/ Get the year and ordinal day number.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":230349,"byte_end":230389,"line_start":196,"line_end":196,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":230394,"byte_end":230397,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":230402,"byte_end":230413,"line_start":198,"line_end":198,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":230418,"byte_end":230451,"line_start":199,"line_end":199,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).to_ordinal_date(), (2019, 1));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":230456,"byte_end":230528,"line_start":200,"line_end":200,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":230533,"byte_end":230540,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1260},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":231410,"byte_end":231426,"line_start":231,"line_end":231,"column_start":18,"column_end":34},"name":"to_iso_week_date","qualname":"<PrimitiveDateTime>::to_iso_week_date","value":"pub const fn to_iso_week_date(Self) -> (i32, u8, Weekday)","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO 8601 year, week number, and weekday.","sig":null,"attributes":[{"value":"/ Get the ISO 8601 year, week number, and weekday.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":230643,"byte_end":230695,"line_start":206,"line_end":206,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":230700,"byte_end":230703,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":230708,"byte_end":230719,"line_start":208,"line_end":208,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::datetime};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":230724,"byte_end":230771,"line_start":209,"line_end":209,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":230776,"byte_end":230791,"line_start":210,"line_end":210,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00).to_iso_week_date(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":230796,"byte_end":230850,"line_start":211,"line_end":211,"column_start":5,"column_end":59}},{"value":"/     (2019, 1, Tuesday)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":230855,"byte_end":230881,"line_start":212,"line_end":212,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":230886,"byte_end":230892,"line_start":213,"line_end":213,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":230897,"byte_end":230912,"line_start":214,"line_end":214,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-10-04 0:00).to_iso_week_date(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":230917,"byte_end":230971,"line_start":215,"line_end":215,"column_start":5,"column_end":59}},{"value":"/     (2019, 40, Friday)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":230976,"byte_end":231002,"line_start":216,"line_end":216,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":231007,"byte_end":231013,"line_start":217,"line_end":217,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":231018,"byte_end":231033,"line_start":218,"line_end":218,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00).to_iso_week_date(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":231038,"byte_end":231092,"line_start":219,"line_end":219,"column_start":5,"column_end":59}},{"value":"/     (2020, 1, Wednesday)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":231097,"byte_end":231125,"line_start":220,"line_end":220,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":231130,"byte_end":231136,"line_start":221,"line_end":221,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":231141,"byte_end":231156,"line_start":222,"line_end":222,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-12-31 0:00).to_iso_week_date(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":231161,"byte_end":231215,"line_start":223,"line_end":223,"column_start":5,"column_end":59}},{"value":"/     (2020, 53, Thursday)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":231220,"byte_end":231248,"line_start":224,"line_end":224,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":231253,"byte_end":231259,"line_start":225,"line_end":225,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":231264,"byte_end":231279,"line_start":226,"line_end":226,"column_start":5,"column_end":20}},{"value":"/     datetime!(2021-01-01 0:00).to_iso_week_date(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":231284,"byte_end":231338,"line_start":227,"line_end":227,"column_start":5,"column_end":59}},{"value":"/     (2020, 53, Friday)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":231343,"byte_end":231369,"line_start":228,"line_end":228,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":231374,"byte_end":231380,"line_start":229,"line_end":229,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":231385,"byte_end":231392,"line_start":230,"line_end":230,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1261},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":232432,"byte_end":232439,"line_start":252,"line_end":252,"column_start":18,"column_end":25},"name":"weekday","qualname":"<PrimitiveDateTime>::weekday","value":"pub const fn weekday(Self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" Get the weekday.","sig":null,"attributes":[{"value":"/ Get the weekday.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":231505,"byte_end":231525,"line_start":235,"line_end":235,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":231530,"byte_end":231533,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":231538,"byte_end":231549,"line_start":237,"line_end":237,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::datetime};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":231554,"byte_end":231601,"line_start":238,"line_end":238,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).weekday(), Tuesday);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":231606,"byte_end":231668,"line_start":239,"line_end":239,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(datetime!(2019-02-01 0:00).weekday(), Friday);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":231673,"byte_end":231734,"line_start":240,"line_end":240,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-03-01 0:00).weekday(), Friday);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":231739,"byte_end":231800,"line_start":241,"line_end":241,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-04-01 0:00).weekday(), Monday);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":231805,"byte_end":231866,"line_start":242,"line_end":242,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-05-01 0:00).weekday(), Wednesday);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":231871,"byte_end":231935,"line_start":243,"line_end":243,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(datetime!(2019-06-01 0:00).weekday(), Saturday);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":231940,"byte_end":232003,"line_start":244,"line_end":244,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(datetime!(2019-07-01 0:00).weekday(), Monday);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":232008,"byte_end":232069,"line_start":245,"line_end":245,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-08-01 0:00).weekday(), Thursday);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":232074,"byte_end":232137,"line_start":246,"line_end":246,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(datetime!(2019-09-01 0:00).weekday(), Sunday);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":232142,"byte_end":232203,"line_start":247,"line_end":247,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-10-01 0:00).weekday(), Tuesday);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":232208,"byte_end":232270,"line_start":248,"line_end":248,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(datetime!(2019-11-01 0:00).weekday(), Friday);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":232275,"byte_end":232336,"line_start":249,"line_end":249,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-12-01 0:00).weekday(), Sunday);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":232341,"byte_end":232402,"line_start":250,"line_end":250,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":232407,"byte_end":232414,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1262},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":233184,"byte_end":233197,"line_start":268,"line_end":268,"column_start":18,"column_end":31},"name":"to_julian_day","qualname":"<PrimitiveDateTime>::to_julian_day","value":"pub const fn to_julian_day(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the Julian day for the date. The time is not taken into account for this calculation.","sig":null,"attributes":[{"value":"/ Get the Julian day for the date. The time is not taken into account for this calculation.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":232498,"byte_end":232591,"line_start":256,"line_end":256,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":232596,"byte_end":232599,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ The algorithm to perform this conversion is derived from one provided by Peter Baum; it is","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":232604,"byte_end":232698,"line_start":258,"line_end":258,"column_start":5,"column_end":99}},{"value":"/ freely available [here](https://www.researchgate.net/publication/316558298_Date_Algorithms).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":232703,"byte_end":232799,"line_start":259,"line_end":259,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":232804,"byte_end":232807,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":232812,"byte_end":232823,"line_start":261,"line_end":261,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":232828,"byte_end":232861,"line_start":262,"line_end":262,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(-4713-11-24 0:00).to_julian_day(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":232866,"byte_end":232929,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(datetime!(2000-01-01 0:00).to_julian_day(), 2_451_545);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":232934,"byte_end":233004,"line_start":264,"line_end":264,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).to_julian_day(), 2_458_485);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":233009,"byte_end":233079,"line_start":265,"line_end":265,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).to_julian_day(), 2_458_849);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":233084,"byte_end":233154,"line_start":266,"line_end":266,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":233159,"byte_end":233166,"line_start":267,"line_end":267,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1263},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":233597,"byte_end":233603,"line_start":281,"line_end":281,"column_start":18,"column_end":24},"name":"as_hms","qualname":"<PrimitiveDateTime>::as_hms","value":"pub const fn as_hms(Self) -> (u8, u8, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, and second.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, and second.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":233316,"byte_end":233359,"line_start":274,"line_end":274,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":233364,"byte_end":233367,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":233372,"byte_end":233383,"line_start":276,"line_end":276,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":233388,"byte_end":233421,"line_start":277,"line_end":277,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00).as_hms(), (0, 0, 0));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":233426,"byte_end":233492,"line_start":278,"line_end":278,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-01-01 23:59:59).as_hms(), (23, 59, 59));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":233497,"byte_end":233567,"line_start":279,"line_end":279,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":233572,"byte_end":233579,"line_start":280,"line_end":280,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1264},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":234018,"byte_end":234030,"line_start":295,"line_end":295,"column_start":18,"column_end":30},"name":"as_hms_milli","qualname":"<PrimitiveDateTime>::as_hms_milli","value":"pub const fn as_hms_milli(Self) -> (u8, u8, u8, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and millisecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and millisecond.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":233666,"byte_end":233722,"line_start":285,"line_end":285,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":233727,"byte_end":233730,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":233735,"byte_end":233746,"line_start":287,"line_end":287,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":233751,"byte_end":233784,"line_start":288,"line_end":288,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00).as_hms_milli(), (0, 0, 0, 0));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":233789,"byte_end":233864,"line_start":289,"line_end":289,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":233869,"byte_end":233884,"line_start":290,"line_end":290,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999).as_hms_milli(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":233889,"byte_end":233947,"line_start":291,"line_end":291,"column_start":5,"column_end":63}},{"value":"/     (23, 59, 59, 999)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":233952,"byte_end":233977,"line_start":292,"line_end":292,"column_start":5,"column_end":30}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":233982,"byte_end":233988,"line_start":293,"line_end":293,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":233993,"byte_end":234000,"line_start":294,"line_end":294,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1265},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":234464,"byte_end":234476,"line_start":309,"line_end":309,"column_start":18,"column_end":30},"name":"as_hms_micro","qualname":"<PrimitiveDateTime>::as_hms_micro","value":"pub const fn as_hms_micro(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and microsecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and microsecond.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":234104,"byte_end":234160,"line_start":299,"line_end":299,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":234165,"byte_end":234168,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":234173,"byte_end":234184,"line_start":301,"line_end":301,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":234189,"byte_end":234222,"line_start":302,"line_end":302,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00).as_hms_micro(), (0, 0, 0, 0));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":234227,"byte_end":234302,"line_start":303,"line_end":303,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":234307,"byte_end":234322,"line_start":304,"line_end":304,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999_999).as_hms_micro(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":234327,"byte_end":234389,"line_start":305,"line_end":305,"column_start":5,"column_end":67}},{"value":"/     (23, 59, 59, 999_999)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":234394,"byte_end":234423,"line_start":306,"line_end":306,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":234428,"byte_end":234434,"line_start":307,"line_end":307,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":234439,"byte_end":234446,"line_start":308,"line_end":308,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1266},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":234915,"byte_end":234926,"line_start":323,"line_end":323,"column_start":18,"column_end":29},"name":"as_hms_nano","qualname":"<PrimitiveDateTime>::as_hms_nano","value":"pub const fn as_hms_nano(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and nanosecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and nanosecond.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":234550,"byte_end":234605,"line_start":313,"line_end":313,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":234610,"byte_end":234613,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":234618,"byte_end":234629,"line_start":315,"line_end":315,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":234634,"byte_end":234667,"line_start":316,"line_end":316,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00).as_hms_nano(), (0, 0, 0, 0));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":234672,"byte_end":234746,"line_start":317,"line_end":317,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":234751,"byte_end":234766,"line_start":318,"line_end":318,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999_999_999).as_hms_nano(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":234771,"byte_end":234836,"line_start":319,"line_end":319,"column_start":5,"column_end":70}},{"value":"/     (23, 59, 59, 999_999_999)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":234841,"byte_end":234874,"line_start":320,"line_end":320,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":234879,"byte_end":234885,"line_start":321,"line_end":321,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":234890,"byte_end":234897,"line_start":322,"line_end":322,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1267},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":235307,"byte_end":235311,"line_start":336,"line_end":336,"column_start":18,"column_end":22},"name":"hour","qualname":"<PrimitiveDateTime>::hour","value":"pub const fn hour(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour.","sig":null,"attributes":[{"value":"/ Get the clock hour.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":234999,"byte_end":235022,"line_start":327,"line_end":327,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":235027,"byte_end":235030,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..24`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":235035,"byte_end":235094,"line_start":329,"line_end":329,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":235099,"byte_end":235102,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":235107,"byte_end":235118,"line_start":331,"line_end":331,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":235123,"byte_end":235156,"line_start":332,"line_end":332,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).hour(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":235161,"byte_end":235214,"line_start":333,"line_end":333,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59).hour(), 23);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":235219,"byte_end":235277,"line_start":334,"line_end":334,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":235282,"byte_end":235289,"line_start":335,"line_end":335,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1268},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":235686,"byte_end":235692,"line_start":349,"line_end":349,"column_start":18,"column_end":24},"name":"minute","qualname":"<PrimitiveDateTime>::minute","value":"pub const fn minute(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the minute within the hour.","sig":null,"attributes":[{"value":"/ Get the minute within the hour.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":235362,"byte_end":235397,"line_start":340,"line_end":340,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":235402,"byte_end":235405,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":235410,"byte_end":235469,"line_start":342,"line_end":342,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":235474,"byte_end":235477,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":235482,"byte_end":235493,"line_start":344,"line_end":344,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":235498,"byte_end":235531,"line_start":345,"line_end":345,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).minute(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":235536,"byte_end":235591,"line_start":346,"line_end":346,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59).minute(), 59);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":235596,"byte_end":235656,"line_start":347,"line_end":347,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":235661,"byte_end":235668,"line_start":348,"line_end":348,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1269},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":236071,"byte_end":236077,"line_start":362,"line_end":362,"column_start":18,"column_end":24},"name":"second","qualname":"<PrimitiveDateTime>::second","value":"pub const fn second(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the second within the minute.","sig":null,"attributes":[{"value":"/ Get the second within the minute.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":235745,"byte_end":235782,"line_start":353,"line_end":353,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":235787,"byte_end":235790,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":235795,"byte_end":235854,"line_start":355,"line_end":355,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":235859,"byte_end":235862,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":235867,"byte_end":235878,"line_start":357,"line_end":357,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":235883,"byte_end":235916,"line_start":358,"line_end":358,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).second(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":235921,"byte_end":235976,"line_start":359,"line_end":359,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59).second(), 59);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":235981,"byte_end":236041,"line_start":360,"line_end":360,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":236046,"byte_end":236053,"line_start":361,"line_end":361,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1270},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":236480,"byte_end":236491,"line_start":375,"line_end":375,"column_start":18,"column_end":29},"name":"millisecond","qualname":"<PrimitiveDateTime>::millisecond","value":"pub const fn millisecond(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Get the milliseconds within the second.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":236130,"byte_end":236173,"line_start":366,"line_end":366,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":236178,"byte_end":236181,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":236186,"byte_end":236248,"line_start":368,"line_end":368,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":236253,"byte_end":236256,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":236261,"byte_end":236272,"line_start":370,"line_end":370,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":236277,"byte_end":236310,"line_start":371,"line_end":371,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).millisecond(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":236315,"byte_end":236375,"line_start":372,"line_end":372,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59.999).millisecond(), 999);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":236380,"byte_end":236450,"line_start":373,"line_end":373,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":236455,"byte_end":236462,"line_start":374,"line_end":374,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1271},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":236946,"byte_end":236957,"line_start":391,"line_end":391,"column_start":18,"column_end":29},"name":"microsecond","qualname":"<PrimitiveDateTime>::microsecond","value":"pub const fn microsecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the microseconds within the second.","sig":null,"attributes":[{"value":"/ Get the microseconds within the second.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":236550,"byte_end":236593,"line_start":379,"line_end":379,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":236598,"byte_end":236601,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":236606,"byte_end":236672,"line_start":381,"line_end":381,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":236677,"byte_end":236680,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":236685,"byte_end":236696,"line_start":383,"line_end":383,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":236701,"byte_end":236734,"line_start":384,"line_end":384,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).microsecond(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":236739,"byte_end":236799,"line_start":385,"line_end":385,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":236804,"byte_end":236819,"line_start":386,"line_end":386,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59.999_999).microsecond(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":236824,"byte_end":236885,"line_start":387,"line_end":387,"column_start":5,"column_end":66}},{"value":"/     999_999","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":236890,"byte_end":236905,"line_start":388,"line_end":388,"column_start":5,"column_end":20}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":236910,"byte_end":236916,"line_start":389,"line_end":389,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":236921,"byte_end":236928,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1272},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":237422,"byte_end":237432,"line_start":407,"line_end":407,"column_start":18,"column_end":28},"name":"nanosecond","qualname":"<PrimitiveDateTime>::nanosecond","value":"pub const fn nanosecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Get the nanoseconds within the second.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":237016,"byte_end":237058,"line_start":395,"line_end":395,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":237063,"byte_end":237066,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000_000`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":237071,"byte_end":237141,"line_start":397,"line_end":397,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":237146,"byte_end":237149,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":237154,"byte_end":237165,"line_start":399,"line_end":399,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":237170,"byte_end":237203,"line_start":400,"line_end":400,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).nanosecond(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":237208,"byte_end":237267,"line_start":401,"line_end":401,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":237272,"byte_end":237287,"line_start":402,"line_end":402,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59.999_999_999).nanosecond(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":237292,"byte_end":237356,"line_start":403,"line_end":403,"column_start":5,"column_end":69}},{"value":"/     999_999_999,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":237361,"byte_end":237381,"line_start":404,"line_end":404,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":237386,"byte_end":237392,"line_start":405,"line_end":405,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":237397,"byte_end":237404,"line_start":406,"line_end":406,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1273},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":238143,"byte_end":238156,"line_start":431,"line_end":431,"column_start":18,"column_end":31},"name":"assume_offset","qualname":"<PrimitiveDateTime>::assume_offset","value":"pub const fn assume_offset(Self, UtcOffset) -> OffsetDateTime","parent":null,"children":[],"decl_id":null,"docs":" Assuming that the existing `PrimitiveDateTime` represents a moment in the provided\n [`UtcOffset`], return an [`OffsetDateTime`].","sig":null,"attributes":[{"value":"/ Assuming that the existing `PrimitiveDateTime` represents a moment in the provided","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":237549,"byte_end":237635,"line_start":413,"line_end":413,"column_start":5,"column_end":91}},{"value":"/ [`UtcOffset`], return an [`OffsetDateTime`].","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":237640,"byte_end":237688,"line_start":414,"line_end":414,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":237693,"byte_end":237696,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":237701,"byte_end":237712,"line_start":416,"line_end":416,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":237717,"byte_end":237760,"line_start":417,"line_end":417,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":237765,"byte_end":237780,"line_start":418,"line_end":418,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":237785,"byte_end":237819,"line_start":419,"line_end":419,"column_start":5,"column_end":39}},{"value":"/         .assume_offset(offset!(UTC))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":237824,"byte_end":237864,"line_start":420,"line_end":420,"column_start":5,"column_end":45}},{"value":"/         .unix_timestamp(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":237869,"byte_end":237899,"line_start":421,"line_end":421,"column_start":5,"column_end":35}},{"value":"/     1_546_300_800,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":237904,"byte_end":237926,"line_start":422,"line_end":422,"column_start":5,"column_end":27}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":237931,"byte_end":237937,"line_start":423,"line_end":423,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":237942,"byte_end":237957,"line_start":424,"line_end":424,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":237962,"byte_end":237996,"line_start":425,"line_end":425,"column_start":5,"column_end":39}},{"value":"/         .assume_offset(offset!(-1))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":238001,"byte_end":238040,"line_start":426,"line_end":426,"column_start":5,"column_end":44}},{"value":"/         .unix_timestamp(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":238045,"byte_end":238075,"line_start":427,"line_end":427,"column_start":5,"column_end":35}},{"value":"/     1_546_304_400,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":238080,"byte_end":238102,"line_start":428,"line_end":428,"column_start":5,"column_end":27}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":238107,"byte_end":238113,"line_start":429,"line_end":429,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":238118,"byte_end":238125,"line_start":430,"line_end":430,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1274},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":238658,"byte_end":238668,"line_start":448,"line_end":448,"column_start":18,"column_end":28},"name":"assume_utc","qualname":"<PrimitiveDateTime>::assume_utc","value":"pub const fn assume_utc(Self) -> OffsetDateTime","parent":null,"children":[],"decl_id":null,"docs":" Assuming that the existing `PrimitiveDateTime` represents a moment in UTC, return an\n [`OffsetDateTime`].","sig":null,"attributes":[{"value":"/ Assuming that the existing `PrimitiveDateTime` represents a moment in UTC, return an","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":238322,"byte_end":238410,"line_start":438,"line_end":438,"column_start":5,"column_end":93}},{"value":"/ [`OffsetDateTime`].","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":238415,"byte_end":238438,"line_start":439,"line_end":439,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":238443,"byte_end":238446,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":238451,"byte_end":238462,"line_start":441,"line_end":441,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":238467,"byte_end":238500,"line_start":442,"line_end":442,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":238505,"byte_end":238520,"line_start":443,"line_end":443,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00).assume_utc().unix_timestamp(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":238525,"byte_end":238590,"line_start":444,"line_end":444,"column_start":5,"column_end":70}},{"value":"/     1_546_300_800,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":238595,"byte_end":238617,"line_start":445,"line_end":445,"column_start":5,"column_end":27}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":238622,"byte_end":238628,"line_start":446,"line_end":446,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":238633,"byte_end":238640,"line_start":447,"line_end":447,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1275},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":239462,"byte_end":239473,"line_start":473,"line_end":473,"column_start":18,"column_end":29},"name":"checked_add","qualname":"<PrimitiveDateTime>::checked_add","value":"pub const fn checked_add(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, returning `None` if an overflow occurred.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":238874,"byte_end":238947,"line_start":457,"line_end":457,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":238952,"byte_end":238955,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":238960,"byte_end":238967,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":238972,"byte_end":239019,"line_start":460,"line_end":460,"column_start":5,"column_end":52}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":239024,"byte_end":239057,"line_start":461,"line_end":461,"column_start":5,"column_end":38}},{"value":"/ let datetime = Date::MIN.midnight();","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":239062,"byte_end":239102,"line_start":462,"line_end":462,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(datetime.checked_add((-2).days()), None);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":239107,"byte_end":239163,"line_start":463,"line_end":463,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":239168,"byte_end":239171,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ let datetime = Date::MAX.midnight();","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":239176,"byte_end":239216,"line_start":465,"line_end":465,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(datetime.checked_add(1.days()), None);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":239221,"byte_end":239274,"line_start":466,"line_end":466,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":239279,"byte_end":239282,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":239287,"byte_end":239302,"line_start":468,"line_end":468,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30).checked_add(27.hours()),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":239307,"byte_end":239371,"line_start":469,"line_end":469,"column_start":5,"column_end":69}},{"value":"/     Some(datetime!(2019 - 11 - 26 18:30))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":239376,"byte_end":239421,"line_start":470,"line_end":470,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":239426,"byte_end":239432,"line_start":471,"line_end":471,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":239437,"byte_end":239444,"line_start":472,"line_end":472,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1276},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":240583,"byte_end":240594,"line_start":503,"line_end":503,"column_start":18,"column_end":29},"name":"checked_sub","qualname":"<PrimitiveDateTime>::checked_sub","value":"pub const fn checked_sub(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, returning `None` if an overflow occurred.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":239995,"byte_end":240068,"line_start":487,"line_end":487,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":240073,"byte_end":240076,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":240081,"byte_end":240088,"line_start":489,"line_end":489,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":240093,"byte_end":240140,"line_start":490,"line_end":490,"column_start":5,"column_end":52}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":240145,"byte_end":240178,"line_start":491,"line_end":491,"column_start":5,"column_end":38}},{"value":"/ let datetime = Date::MIN.midnight();","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":240183,"byte_end":240223,"line_start":492,"line_end":492,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(datetime.checked_sub(2.days()), None);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":240228,"byte_end":240281,"line_start":493,"line_end":493,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":240286,"byte_end":240289,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ let datetime = Date::MAX.midnight();","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":240294,"byte_end":240334,"line_start":495,"line_end":495,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(datetime.checked_sub((-1).days()), None);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":240339,"byte_end":240395,"line_start":496,"line_end":496,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":240400,"byte_end":240403,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":240408,"byte_end":240423,"line_start":498,"line_end":498,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30).checked_sub(27.hours()),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":240428,"byte_end":240492,"line_start":499,"line_end":499,"column_start":5,"column_end":69}},{"value":"/     Some(datetime!(2019 - 11 - 24 12:30))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":240497,"byte_end":240542,"line_start":500,"line_end":500,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":240547,"byte_end":240553,"line_start":501,"line_end":501,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":240558,"byte_end":240565,"line_start":502,"line_end":502,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1277},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":241824,"byte_end":241838,"line_start":539,"line_end":539,"column_start":18,"column_end":32},"name":"saturating_add","qualname":"<PrimitiveDateTime>::saturating_add","value":"pub const fn saturating_add(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, saturating value on overflow.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":241190,"byte_end":241251,"line_start":519,"line_end":519,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":241256,"byte_end":241259,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":241264,"byte_end":241271,"line_start":521,"line_end":521,"column_start":5,"column_end":12}},{"value":"/ # use time::{PrimitiveDateTime, ext::NumericalDuration};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":241276,"byte_end":241336,"line_start":522,"line_end":522,"column_start":5,"column_end":65}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":241341,"byte_end":241374,"line_start":523,"line_end":523,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":241379,"byte_end":241394,"line_start":524,"line_end":524,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::MIN.saturating_add((-2).days()),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":241399,"byte_end":241458,"line_start":525,"line_end":525,"column_start":5,"column_end":64}},{"value":"/     PrimitiveDateTime::MIN","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":241463,"byte_end":241493,"line_start":526,"line_end":526,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":241498,"byte_end":241504,"line_start":527,"line_end":527,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":241509,"byte_end":241512,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":241517,"byte_end":241532,"line_start":529,"line_end":529,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::MAX.saturating_add(2.days()),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":241537,"byte_end":241593,"line_start":530,"line_end":530,"column_start":5,"column_end":61}},{"value":"/     PrimitiveDateTime::MAX","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":241598,"byte_end":241628,"line_start":531,"line_end":531,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":241633,"byte_end":241639,"line_start":532,"line_end":532,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":241644,"byte_end":241647,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":241652,"byte_end":241667,"line_start":534,"line_end":534,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30).saturating_add(27.hours()),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":241672,"byte_end":241739,"line_start":535,"line_end":535,"column_start":5,"column_end":72}},{"value":"/     datetime!(2019 - 11 - 26 18:30)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":241744,"byte_end":241783,"line_start":536,"line_end":536,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":241788,"byte_end":241794,"line_start":537,"line_end":537,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":241799,"byte_end":241806,"line_start":538,"line_end":538,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1278},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":242716,"byte_end":242730,"line_start":569,"line_end":569,"column_start":18,"column_end":32},"name":"saturating_sub","qualname":"<PrimitiveDateTime>::saturating_sub","value":"pub const fn saturating_sub(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, saturating value on overflow.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":242082,"byte_end":242143,"line_start":549,"line_end":549,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":242148,"byte_end":242151,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":242156,"byte_end":242163,"line_start":551,"line_end":551,"column_start":5,"column_end":12}},{"value":"/ # use time::{PrimitiveDateTime, ext::NumericalDuration};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":242168,"byte_end":242228,"line_start":552,"line_end":552,"column_start":5,"column_end":65}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":242233,"byte_end":242266,"line_start":553,"line_end":553,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":242271,"byte_end":242286,"line_start":554,"line_end":554,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::MIN.saturating_sub(2.days()),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":242291,"byte_end":242347,"line_start":555,"line_end":555,"column_start":5,"column_end":61}},{"value":"/     PrimitiveDateTime::MIN","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":242352,"byte_end":242382,"line_start":556,"line_end":556,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":242387,"byte_end":242393,"line_start":557,"line_end":557,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":242398,"byte_end":242401,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":242406,"byte_end":242421,"line_start":559,"line_end":559,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::MAX.saturating_sub((-2).days()),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":242426,"byte_end":242485,"line_start":560,"line_end":560,"column_start":5,"column_end":64}},{"value":"/     PrimitiveDateTime::MAX","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":242490,"byte_end":242520,"line_start":561,"line_end":561,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":242525,"byte_end":242531,"line_start":562,"line_end":562,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":242536,"byte_end":242539,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":242544,"byte_end":242559,"line_start":564,"line_end":564,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30).saturating_sub(27.hours()),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":242564,"byte_end":242631,"line_start":565,"line_end":565,"column_start":5,"column_end":72}},{"value":"/     datetime!(2019 - 11 - 24 12:30)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":242636,"byte_end":242675,"line_start":566,"line_end":566,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":242680,"byte_end":242686,"line_start":567,"line_end":567,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":242691,"byte_end":242698,"line_start":568,"line_end":568,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1280},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":243483,"byte_end":243495,"line_start":594,"line_end":594,"column_start":18,"column_end":30},"name":"replace_time","qualname":"<PrimitiveDateTime>::replace_time","value":"pub const fn replace_time(Self, Time) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the time, preserving the date.","sig":null,"attributes":[{"value":"/ Replace the time, preserving the date.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":243122,"byte_end":243164,"line_start":584,"line_end":584,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":243169,"byte_end":243172,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":243177,"byte_end":243188,"line_start":586,"line_end":586,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, time};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":243193,"byte_end":243234,"line_start":587,"line_end":587,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":243239,"byte_end":243254,"line_start":588,"line_end":588,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 17:00).replace_time(time!(5:00)),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":243259,"byte_end":243321,"line_start":589,"line_end":589,"column_start":5,"column_end":67}},{"value":"/     datetime!(2020-01-01 5:00)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":243326,"byte_end":243360,"line_start":590,"line_end":590,"column_start":5,"column_end":39}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":243365,"byte_end":243371,"line_start":591,"line_end":591,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":243376,"byte_end":243383,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":243388,"byte_end":243465,"line_start":593,"line_end":593,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1281},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":243937,"byte_end":243949,"line_start":608,"line_end":608,"column_start":18,"column_end":30},"name":"replace_date","qualname":"<PrimitiveDateTime>::replace_date","value":"pub const fn replace_date(Self, Date) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the date, preserving the time.","sig":null,"attributes":[{"value":"/ Replace the date, preserving the time.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":243569,"byte_end":243611,"line_start":598,"line_end":598,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":243616,"byte_end":243619,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":243624,"byte_end":243635,"line_start":600,"line_end":600,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, date};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":243640,"byte_end":243681,"line_start":601,"line_end":601,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":243686,"byte_end":243701,"line_start":602,"line_end":602,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00).replace_date(date!(2020-01-30)),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":243706,"byte_end":243774,"line_start":603,"line_end":603,"column_start":5,"column_end":73}},{"value":"/     datetime!(2020-01-30 12:00)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":243779,"byte_end":243814,"line_start":604,"line_end":604,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":243819,"byte_end":243825,"line_start":605,"line_end":605,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":243830,"byte_end":243837,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":243842,"byte_end":243919,"line_start":607,"line_end":607,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1282},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":244646,"byte_end":244658,"line_start":624,"line_end":624,"column_start":18,"column_end":30},"name":"replace_year","qualname":"<PrimitiveDateTime>::replace_year","value":"pub const fn replace_year(Self, i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the year. The month and day will be unchanged.","sig":null,"attributes":[{"value":"/ Replace the year. The month and day will be unchanged.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":244023,"byte_end":244081,"line_start":612,"line_end":612,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":244086,"byte_end":244089,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":244094,"byte_end":244105,"line_start":614,"line_end":614,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":244110,"byte_end":244143,"line_start":615,"line_end":615,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":244148,"byte_end":244163,"line_start":616,"line_end":616,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00).replace_year(2019),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":244168,"byte_end":244227,"line_start":617,"line_end":617,"column_start":5,"column_end":64}},{"value":"/     Ok(datetime!(2019 - 02 - 18 12:00))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":244232,"byte_end":244275,"line_start":618,"line_end":618,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":244280,"byte_end":244286,"line_start":619,"line_end":619,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00).replace_year(-1_000_000_000).is_err()); // -1_000_000_000 isn't a valid year","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":244291,"byte_end":244411,"line_start":620,"line_end":620,"column_start":5,"column_end":125}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00).replace_year(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid year","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":244416,"byte_end":244534,"line_start":621,"line_end":621,"column_start":5,"column_end":123}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":244539,"byte_end":244546,"line_start":622,"line_end":622,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":244551,"byte_end":244628,"line_start":623,"line_end":623,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1283},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":245317,"byte_end":245330,"line_start":640,"line_end":640,"column_start":18,"column_end":31},"name":"replace_month","qualname":"<PrimitiveDateTime>::replace_month","value":"pub const fn replace_month(Self, Month) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the month of the year.","sig":null,"attributes":[{"value":"/ Replace the month of the year.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":244802,"byte_end":244836,"line_start":628,"line_end":628,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":244841,"byte_end":244844,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":244849,"byte_end":244860,"line_start":630,"line_end":630,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":244865,"byte_end":244898,"line_start":631,"line_end":631,"column_start":5,"column_end":38}},{"value":"/ # use time::Month;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":244903,"byte_end":244925,"line_start":632,"line_end":632,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":244930,"byte_end":244945,"line_start":633,"line_end":633,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00).replace_month(Month::January),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":244950,"byte_end":245020,"line_start":634,"line_end":634,"column_start":5,"column_end":75}},{"value":"/     Ok(datetime!(2022 - 01 - 18 12:00))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":245025,"byte_end":245068,"line_start":635,"line_end":635,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":245073,"byte_end":245079,"line_start":636,"line_end":636,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 01 - 30 12:00).replace_month(Month::February).is_err()); // 30 isn't a valid day in February","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":245084,"byte_end":245205,"line_start":637,"line_end":637,"column_start":5,"column_end":126}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":245210,"byte_end":245217,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":245222,"byte_end":245299,"line_start":639,"line_end":639,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1284},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":246034,"byte_end":246045,"line_start":656,"line_end":656,"column_start":18,"column_end":29},"name":"replace_day","qualname":"<PrimitiveDateTime>::replace_day","value":"pub const fn replace_day(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the day of the month.","sig":null,"attributes":[{"value":"/ Replace the day of the month.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":245479,"byte_end":245512,"line_start":644,"line_end":644,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":245517,"byte_end":245520,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":245525,"byte_end":245536,"line_start":646,"line_end":646,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":245541,"byte_end":245574,"line_start":647,"line_end":647,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":245579,"byte_end":245594,"line_start":648,"line_end":648,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00).replace_day(1),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":245599,"byte_end":245654,"line_start":649,"line_end":649,"column_start":5,"column_end":60}},{"value":"/     Ok(datetime!(2022 - 02 - 01 12:00))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":245659,"byte_end":245702,"line_start":650,"line_end":650,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":245707,"byte_end":245713,"line_start":651,"line_end":651,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00).replace_day(0).is_err()); // 00 isn't a valid day","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":245718,"byte_end":245811,"line_start":652,"line_end":652,"column_start":5,"column_end":98}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00).replace_day(30).is_err()); // 30 isn't a valid day in February","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":245816,"byte_end":245922,"line_start":653,"line_end":653,"column_start":5,"column_end":111}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":245927,"byte_end":245934,"line_start":654,"line_end":654,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":245939,"byte_end":246016,"line_start":655,"line_end":655,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1285},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":246672,"byte_end":246684,"line_start":671,"line_end":671,"column_start":18,"column_end":30},"name":"replace_hour","qualname":"<PrimitiveDateTime>::replace_hour","value":"pub const fn replace_hour(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the clock hour.","sig":null,"attributes":[{"value":"/ Replace the clock hour.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":246185,"byte_end":246212,"line_start":660,"line_end":660,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":246217,"byte_end":246220,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":246225,"byte_end":246236,"line_start":662,"line_end":662,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":246241,"byte_end":246274,"line_start":663,"line_end":663,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":246279,"byte_end":246294,"line_start":664,"line_end":664,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_hour(7),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":246299,"byte_end":246370,"line_start":665,"line_end":665,"column_start":5,"column_end":76}},{"value":"/     Ok(datetime!(2022 - 02 - 18 07:02:03.004_005_006))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":246375,"byte_end":246433,"line_start":666,"line_end":666,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":246438,"byte_end":246444,"line_start":667,"line_end":667,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_hour(24).is_err()); // 24 isn't a valid hour","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":246449,"byte_end":246560,"line_start":668,"line_end":668,"column_start":5,"column_end":116}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":246565,"byte_end":246572,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":246577,"byte_end":246654,"line_start":670,"line_end":670,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1286},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":247361,"byte_end":247375,"line_start":688,"line_end":688,"column_start":18,"column_end":32},"name":"replace_minute","qualname":"<PrimitiveDateTime>::replace_minute","value":"pub const fn replace_minute(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the minutes within the hour.","sig":null,"attributes":[{"value":"/ Replace the minutes within the hour.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":246855,"byte_end":246895,"line_start":677,"line_end":677,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":246900,"byte_end":246903,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":246908,"byte_end":246919,"line_start":679,"line_end":679,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":246924,"byte_end":246957,"line_start":680,"line_end":680,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":246962,"byte_end":246977,"line_start":681,"line_end":681,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_minute(7),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":246982,"byte_end":247055,"line_start":682,"line_end":682,"column_start":5,"column_end":78}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:07:03.004_005_006))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":247060,"byte_end":247118,"line_start":683,"line_end":683,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":247123,"byte_end":247129,"line_start":684,"line_end":684,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_minute(60).is_err()); // 60 isn't a valid minute","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":247134,"byte_end":247249,"line_start":685,"line_end":685,"column_start":5,"column_end":120}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":247254,"byte_end":247261,"line_start":686,"line_end":686,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":247266,"byte_end":247343,"line_start":687,"line_end":687,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1287},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":248060,"byte_end":248074,"line_start":705,"line_end":705,"column_start":18,"column_end":32},"name":"replace_second","qualname":"<PrimitiveDateTime>::replace_second","value":"pub const fn replace_second(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the seconds within the minute.","sig":null,"attributes":[{"value":"/ Replace the seconds within the minute.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":247552,"byte_end":247594,"line_start":694,"line_end":694,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":247599,"byte_end":247602,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":247607,"byte_end":247618,"line_start":696,"line_end":696,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":247623,"byte_end":247656,"line_start":697,"line_end":697,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":247661,"byte_end":247676,"line_start":698,"line_end":698,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_second(7),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":247681,"byte_end":247754,"line_start":699,"line_end":699,"column_start":5,"column_end":78}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:07.004_005_006))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":247759,"byte_end":247817,"line_start":700,"line_end":700,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":247822,"byte_end":247828,"line_start":701,"line_end":701,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_second(60).is_err()); // 60 isn't a valid second","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":247833,"byte_end":247948,"line_start":702,"line_end":702,"column_start":5,"column_end":120}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":247953,"byte_end":247960,"line_start":703,"line_end":703,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":247965,"byte_end":248042,"line_start":704,"line_end":704,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1288},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":248777,"byte_end":248796,"line_start":722,"line_end":722,"column_start":18,"column_end":37},"name":"replace_millisecond","qualname":"<PrimitiveDateTime>::replace_millisecond","value":"pub const fn replace_millisecond(Self, u16)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the milliseconds within the second.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":248251,"byte_end":248298,"line_start":711,"line_end":711,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":248303,"byte_end":248306,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":248311,"byte_end":248322,"line_start":713,"line_end":713,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":248327,"byte_end":248360,"line_start":714,"line_end":714,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":248365,"byte_end":248380,"line_start":715,"line_end":715,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_millisecond(7),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":248385,"byte_end":248463,"line_start":716,"line_end":716,"column_start":5,"column_end":83}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":248468,"byte_end":248518,"line_start":717,"line_end":717,"column_start":5,"column_end":55}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":248523,"byte_end":248529,"line_start":718,"line_end":718,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_millisecond(1_000).is_err()); // 1_000 isn't a valid millisecond","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":248534,"byte_end":248665,"line_start":719,"line_end":719,"column_start":5,"column_end":136}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":248670,"byte_end":248677,"line_start":720,"line_end":720,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":248682,"byte_end":248759,"line_start":721,"line_end":721,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1289},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":249554,"byte_end":249573,"line_start":742,"line_end":742,"column_start":18,"column_end":37},"name":"replace_microsecond","qualname":"<PrimitiveDateTime>::replace_microsecond","value":"pub const fn replace_microsecond(Self, u32)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the microseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the microseconds within the second.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":249012,"byte_end":249059,"line_start":731,"line_end":731,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":249064,"byte_end":249067,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":249072,"byte_end":249083,"line_start":733,"line_end":733,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":249088,"byte_end":249121,"line_start":734,"line_end":734,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":249126,"byte_end":249141,"line_start":735,"line_end":735,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_microsecond(7_008),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":249146,"byte_end":249228,"line_start":736,"line_end":736,"column_start":5,"column_end":87}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007_008))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":249233,"byte_end":249287,"line_start":737,"line_end":737,"column_start":5,"column_end":59}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":249292,"byte_end":249298,"line_start":738,"line_end":738,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_microsecond(1_000_000).is_err()); // 1_000_000 isn't a valid microsecond","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":249303,"byte_end":249442,"line_start":739,"line_end":739,"column_start":5,"column_end":144}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":249447,"byte_end":249454,"line_start":740,"line_end":740,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":249459,"byte_end":249536,"line_start":741,"line_end":741,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1290},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":250343,"byte_end":250361,"line_start":762,"line_end":762,"column_start":18,"column_end":36},"name":"replace_nanosecond","qualname":"<PrimitiveDateTime>::replace_nanosecond","value":"pub const fn replace_nanosecond(Self, u32)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the nanoseconds within the second.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":249789,"byte_end":249835,"line_start":751,"line_end":751,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":249840,"byte_end":249843,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":249848,"byte_end":249859,"line_start":753,"line_end":753,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":249864,"byte_end":249897,"line_start":754,"line_end":754,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":249902,"byte_end":249917,"line_start":755,"line_end":755,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_nanosecond(7_008_009),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":249922,"byte_end":250007,"line_start":756,"line_end":756,"column_start":5,"column_end":90}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007_008_009))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":250012,"byte_end":250070,"line_start":757,"line_end":757,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":250075,"byte_end":250081,"line_start":758,"line_end":758,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_nanosecond(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid nanosecond","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":250086,"byte_end":250231,"line_start":759,"line_end":759,"column_start":5,"column_end":150}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":250236,"byte_end":250243,"line_start":760,"line_end":760,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":250248,"byte_end":250325,"line_start":761,"line_end":761,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1295},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":252343,"byte_end":252354,"line_start":814,"line_end":814,"column_start":12,"column_end":23},"name":"format_into","qualname":"<PrimitiveDateTime>::format_into","value":"pub fn format_into<impl io::Write: io::Write,\n                   impl Formattable + ?Sized: Formattable +\n                   ?Sized>(Self, &mut impl io::Write,\n                           &impl Formattable + ?Sized)\n-> Result<usize, error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `PrimitiveDateTime` using the provided [format\n description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `PrimitiveDateTime` using the provided [format","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":252221,"byte_end":252282,"line_start":812,"line_end":812,"column_start":5,"column_end":66}},{"value":"/ description](crate::format_description).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":252287,"byte_end":252331,"line_start":813,"line_end":813,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1298},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":253056,"byte_end":253062,"line_start":834,"line_end":834,"column_start":12,"column_end":18},"name":"format","qualname":"<PrimitiveDateTime>::format","value":"pub fn format<impl Formattable + ?Sized: Formattable +\n              ?Sized>(Self, &impl Formattable + ?Sized)\n-> Result<String, error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `PrimitiveDateTime` using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `PrimitiveDateTime` using the provided [format","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":252579,"byte_end":252640,"line_start":822,"line_end":822,"column_start":5,"column_end":66}},{"value":"/ description](crate::format_description).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":252645,"byte_end":252689,"line_start":823,"line_end":823,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":252694,"byte_end":252697,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":252702,"byte_end":252713,"line_start":825,"line_end":825,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::datetime};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":252718,"byte_end":252773,"line_start":826,"line_end":826,"column_start":5,"column_end":60}},{"value":"/ let format = format_description::parse(\"[year]-[month]-[day] [hour]:[minute]:[second]\")?;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":252778,"byte_end":252871,"line_start":827,"line_end":827,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":252876,"byte_end":252891,"line_start":828,"line_end":828,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-02 03:04:05).format(&format)?,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":252896,"byte_end":252952,"line_start":829,"line_end":829,"column_start":5,"column_end":61}},{"value":"/     \"2020-01-02 03:04:05\"","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":252957,"byte_end":252986,"line_start":830,"line_end":830,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":252991,"byte_end":252997,"line_start":831,"line_end":831,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":253002,"byte_end":253032,"line_start":832,"line_end":832,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":253037,"byte_end":253044,"line_start":833,"line_end":833,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2548},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":261979,"byte_end":261983,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"Time","qualname":"::time::Time","value":"Time {  }","parent":null,"children":[{"krate":0,"index":2549},{"krate":0,"index":2550},{"krate":0,"index":2551},{"krate":0,"index":2552},{"krate":0,"index":2553}],"decl_id":null,"docs":" The clock time within a given date. Nanosecond precision.","sig":null,"attributes":[{"value":"/ The clock time within a given date. Nanosecond precision.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":261622,"byte_end":261683,"line_start":25,"line_end":25,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":261684,"byte_end":261687,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ All minutes are assumed to have exactly 60 seconds; no attempt is made to handle leap seconds","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":261688,"byte_end":261785,"line_start":27,"line_end":27,"column_start":1,"column_end":98}},{"value":"/ (either positive or negative).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":261786,"byte_end":261820,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":261821,"byte_end":261824,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ When comparing two `Time`s, they are assumed to be in the same calendar date.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":261825,"byte_end":261906,"line_start":30,"line_end":30,"column_start":1,"column_end":82}}]},{"kind":"Const","id":{"krate":0,"index":1382},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":262869,"byte_end":262877,"line_start":63,"line_end":63,"column_start":15,"column_end":23},"name":"MIDNIGHT","qualname":"::time::Time::MIDNIGHT","value":"Self","parent":{"krate":0,"index":1381},"children":[],"decl_id":null,"docs":" Create a `Time` that is exactly midnight.","sig":null,"attributes":[{"value":"/ Create a `Time` that is exactly midnight.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":262682,"byte_end":262727,"line_start":57,"line_end":57,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":262732,"byte_end":262735,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":262740,"byte_end":262751,"line_start":59,"line_end":59,"column_start":5,"column_end":16}},{"value":"/ # use time::{Time, macros::time};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":262756,"byte_end":262793,"line_start":60,"line_end":60,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Time::MIDNIGHT, time!(0:00));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":262798,"byte_end":262842,"line_start":61,"line_end":61,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":262847,"byte_end":262854,"line_start":62,"line_end":62,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1385},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":263406,"byte_end":263432,"line_start":78,"line_end":78,"column_start":18,"column_end":44},"name":"__from_hms_nanos_unchecked","qualname":"<Time>::__from_hms_nanos_unchecked","value":"pub const fn __from_hms_nanos_unchecked(u8, u8, u8, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `Time` from its components.\n","sig":null,"attributes":[{"value":"/ Create a `Time` from its components.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":263329,"byte_end":263369,"line_start":76,"line_end":76,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1386},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":264186,"byte_end":264194,"line_start":106,"line_end":106,"column_start":18,"column_end":26},"name":"from_hms","qualname":"<Time>::from_hms","value":"pub const fn from_hms(u8, u8, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Time` from the hour, minute, and second.","sig":null,"attributes":[{"value":"/ Attempt to create a `Time` from the hour, minute, and second.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":263691,"byte_end":263756,"line_start":93,"line_end":93,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":263761,"byte_end":263764,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":263769,"byte_end":263780,"line_start":95,"line_end":95,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":263785,"byte_end":263806,"line_start":96,"line_end":96,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms(1, 2, 3).is_ok());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":263811,"byte_end":263856,"line_start":97,"line_end":97,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":263861,"byte_end":263868,"line_start":98,"line_end":98,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":263873,"byte_end":263876,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":263881,"byte_end":263892,"line_start":100,"line_end":100,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":263897,"byte_end":263918,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms(24, 0, 0).is_err()); // 24 isn't a valid hour.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":263923,"byte_end":263996,"line_start":102,"line_end":102,"column_start":5,"column_end":78}},{"value":"/ assert!(Time::from_hms(0, 60, 0).is_err()); // 60 isn't a valid minute.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":264001,"byte_end":264076,"line_start":103,"line_end":103,"column_start":5,"column_end":80}},{"value":"/ assert!(Time::from_hms(0, 0, 60).is_err()); // 60 isn't a valid second.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":264081,"byte_end":264156,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":264161,"byte_end":264168,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1387},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":265146,"byte_end":265160,"line_start":127,"line_end":127,"column_start":18,"column_end":32},"name":"from_hms_milli","qualname":"<Time>::from_hms_milli","value":"pub const fn from_hms_milli(u8, u8, u8, u16)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Time` from the hour, minute, second, and millisecond.","sig":null,"attributes":[{"value":"/ Attempt to create a `Time` from the hour, minute, second, and millisecond.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":264502,"byte_end":264580,"line_start":113,"line_end":113,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":264585,"byte_end":264588,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":264593,"byte_end":264604,"line_start":115,"line_end":115,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":264609,"byte_end":264630,"line_start":116,"line_end":116,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_milli(1, 2, 3, 4).is_ok());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":264635,"byte_end":264689,"line_start":117,"line_end":117,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":264694,"byte_end":264701,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":264706,"byte_end":264709,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":264714,"byte_end":264725,"line_start":120,"line_end":120,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":264730,"byte_end":264751,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_milli(24, 0, 0, 0).is_err()); // 24 isn't a valid hour.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":264756,"byte_end":264838,"line_start":122,"line_end":122,"column_start":5,"column_end":87}},{"value":"/ assert!(Time::from_hms_milli(0, 60, 0, 0).is_err()); // 60 isn't a valid minute.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":264843,"byte_end":264927,"line_start":123,"line_end":123,"column_start":5,"column_end":89}},{"value":"/ assert!(Time::from_hms_milli(0, 0, 60, 0).is_err()); // 60 isn't a valid second.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":264932,"byte_end":265016,"line_start":124,"line_end":124,"column_start":5,"column_end":89}},{"value":"/ assert!(Time::from_hms_milli(0, 0, 0, 1_000).is_err()); // 1_000 isn't a valid millisecond.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":265021,"byte_end":265116,"line_start":125,"line_end":125,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":265121,"byte_end":265128,"line_start":126,"line_end":126,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1388},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":266322,"byte_end":266336,"line_start":159,"line_end":159,"column_start":18,"column_end":32},"name":"from_hms_micro","qualname":"<Time>::from_hms_micro","value":"pub const fn from_hms_micro(u8, u8, u8, u32)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Time` from the hour, minute, second, and microsecond.","sig":null,"attributes":[{"value":"/ Attempt to create a `Time` from the hour, minute, second, and microsecond.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":265670,"byte_end":265748,"line_start":145,"line_end":145,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":265753,"byte_end":265756,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":265761,"byte_end":265772,"line_start":147,"line_end":147,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":265777,"byte_end":265798,"line_start":148,"line_end":148,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_micro(1, 2, 3, 4).is_ok());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":265803,"byte_end":265857,"line_start":149,"line_end":149,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":265862,"byte_end":265869,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":265874,"byte_end":265877,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":265882,"byte_end":265893,"line_start":152,"line_end":152,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":265898,"byte_end":265919,"line_start":153,"line_end":153,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_micro(24, 0, 0, 0).is_err()); // 24 isn't a valid hour.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":265924,"byte_end":266006,"line_start":154,"line_end":154,"column_start":5,"column_end":87}},{"value":"/ assert!(Time::from_hms_micro(0, 60, 0, 0).is_err()); // 60 isn't a valid minute.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":266011,"byte_end":266095,"line_start":155,"line_end":155,"column_start":5,"column_end":89}},{"value":"/ assert!(Time::from_hms_micro(0, 0, 60, 0).is_err()); // 60 isn't a valid second.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":266100,"byte_end":266184,"line_start":156,"line_end":156,"column_start":5,"column_end":89}},{"value":"/ assert!(Time::from_hms_micro(0, 0, 0, 1_000_000).is_err()); // 1_000_000 isn't a valid microsecond.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":266189,"byte_end":266292,"line_start":157,"line_end":157,"column_start":5,"column_end":108}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":266297,"byte_end":266304,"line_start":158,"line_end":158,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1389},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":267492,"byte_end":267505,"line_start":191,"line_end":191,"column_start":18,"column_end":31},"name":"from_hms_nano","qualname":"<Time>::from_hms_nano","value":"pub const fn from_hms_nano(u8, u8, u8, u32)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Time` from the hour, minute, second, and nanosecond.","sig":null,"attributes":[{"value":"/ Attempt to create a `Time` from the hour, minute, second, and nanosecond.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":266839,"byte_end":266916,"line_start":177,"line_end":177,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":266921,"byte_end":266924,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":266929,"byte_end":266940,"line_start":179,"line_end":179,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":266945,"byte_end":266966,"line_start":180,"line_end":180,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_nano(1, 2, 3, 4).is_ok());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":266971,"byte_end":267024,"line_start":181,"line_end":181,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":267029,"byte_end":267036,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":267041,"byte_end":267044,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":267049,"byte_end":267060,"line_start":184,"line_end":184,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":267065,"byte_end":267086,"line_start":185,"line_end":185,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_nano(24, 0, 0, 0).is_err()); // 24 isn't a valid hour.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":267091,"byte_end":267172,"line_start":186,"line_end":186,"column_start":5,"column_end":86}},{"value":"/ assert!(Time::from_hms_nano(0, 60, 0, 0).is_err()); // 60 isn't a valid minute.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":267177,"byte_end":267260,"line_start":187,"line_end":187,"column_start":5,"column_end":88}},{"value":"/ assert!(Time::from_hms_nano(0, 0, 60, 0).is_err()); // 60 isn't a valid second.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":267265,"byte_end":267348,"line_start":188,"line_end":188,"column_start":5,"column_end":88}},{"value":"/ assert!(Time::from_hms_nano(0, 0, 0, 1_000_000_000).is_err()); // 1_000_000_000 isn't a valid nanosecond.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":267353,"byte_end":267462,"line_start":189,"line_end":189,"column_start":5,"column_end":114}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":267467,"byte_end":267474,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1390},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":268265,"byte_end":268271,"line_start":215,"line_end":215,"column_start":18,"column_end":24},"name":"as_hms","qualname":"<Time>::as_hms","value":"pub const fn as_hms(Self) -> (u8, u8, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, and second.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, and second.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":268018,"byte_end":268061,"line_start":208,"line_end":208,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":268066,"byte_end":268069,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":268074,"byte_end":268085,"line_start":210,"line_end":210,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":268090,"byte_end":268119,"line_start":211,"line_end":211,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).as_hms(), (0, 0, 0));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":268124,"byte_end":268175,"line_start":212,"line_end":212,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(time!(23:59:59).as_hms(), (23, 59, 59));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":268180,"byte_end":268235,"line_start":213,"line_end":213,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":268240,"byte_end":268247,"line_start":214,"line_end":214,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1391},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":268637,"byte_end":268649,"line_start":226,"line_end":226,"column_start":18,"column_end":30},"name":"as_hms_milli","qualname":"<Time>::as_hms_milli","value":"pub const fn as_hms_milli(Self) -> (u8, u8, u8, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and millisecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and millisecond.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":268353,"byte_end":268409,"line_start":219,"line_end":219,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":268414,"byte_end":268417,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":268422,"byte_end":268433,"line_start":221,"line_end":221,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":268438,"byte_end":268467,"line_start":222,"line_end":222,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).as_hms_milli(), (0, 0, 0, 0));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":268472,"byte_end":268532,"line_start":223,"line_end":223,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(time!(23:59:59.999).as_hms_milli(), (23, 59, 59, 999));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":268537,"byte_end":268607,"line_start":224,"line_end":224,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":268612,"byte_end":268619,"line_start":225,"line_end":225,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1392},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":269159,"byte_end":269171,"line_start":245,"line_end":245,"column_start":18,"column_end":30},"name":"as_hms_micro","qualname":"<Time>::as_hms_micro","value":"pub const fn as_hms_micro(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and microsecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and microsecond.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":268833,"byte_end":268889,"line_start":235,"line_end":235,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":268894,"byte_end":268897,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":268902,"byte_end":268913,"line_start":237,"line_end":237,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":268918,"byte_end":268947,"line_start":238,"line_end":238,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).as_hms_micro(), (0, 0, 0, 0));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":268952,"byte_end":269012,"line_start":239,"line_end":239,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":269017,"byte_end":269032,"line_start":240,"line_end":240,"column_start":5,"column_end":20}},{"value":"/     time!(23:59:59.999_999).as_hms_micro(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":269037,"byte_end":269084,"line_start":241,"line_end":241,"column_start":5,"column_end":52}},{"value":"/     (23, 59, 59, 999_999)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":269089,"byte_end":269118,"line_start":242,"line_end":242,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":269123,"byte_end":269129,"line_start":243,"line_end":243,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":269134,"byte_end":269141,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1393},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":269614,"byte_end":269625,"line_start":259,"line_end":259,"column_start":18,"column_end":29},"name":"as_hms_nano","qualname":"<Time>::as_hms_nano","value":"pub const fn as_hms_nano(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and nanosecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and nanosecond.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":269283,"byte_end":269338,"line_start":249,"line_end":249,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":269343,"byte_end":269346,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":269351,"byte_end":269362,"line_start":251,"line_end":251,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":269367,"byte_end":269396,"line_start":252,"line_end":252,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).as_hms_nano(), (0, 0, 0, 0));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":269401,"byte_end":269460,"line_start":253,"line_end":253,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":269465,"byte_end":269480,"line_start":254,"line_end":254,"column_start":5,"column_end":20}},{"value":"/     time!(23:59:59.999_999_999).as_hms_nano(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":269485,"byte_end":269535,"line_start":255,"line_end":255,"column_start":5,"column_end":55}},{"value":"/     (23, 59, 59, 999_999_999)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":269540,"byte_end":269573,"line_start":256,"line_end":256,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":269578,"byte_end":269584,"line_start":257,"line_end":257,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":269589,"byte_end":269596,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1394},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":270006,"byte_end":270010,"line_start":272,"line_end":272,"column_start":18,"column_end":22},"name":"hour","qualname":"<Time>::hour","value":"pub const fn hour(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour.","sig":null,"attributes":[{"value":"/ Get the clock hour.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":269729,"byte_end":269752,"line_start":263,"line_end":263,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":269757,"byte_end":269760,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..24`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":269765,"byte_end":269824,"line_start":265,"line_end":265,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":269829,"byte_end":269832,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":269837,"byte_end":269848,"line_start":267,"line_end":267,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":269853,"byte_end":269882,"line_start":268,"line_end":268,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).hour(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":269887,"byte_end":269928,"line_start":269,"line_end":269,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(time!(23:59:59).hour(), 23);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":269933,"byte_end":269976,"line_start":270,"line_end":270,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":269981,"byte_end":269988,"line_start":271,"line_end":271,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1395},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":270347,"byte_end":270353,"line_start":285,"line_end":285,"column_start":18,"column_end":24},"name":"minute","qualname":"<Time>::minute","value":"pub const fn minute(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the minute within the hour.","sig":null,"attributes":[{"value":"/ Get the minute within the hour.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":270054,"byte_end":270089,"line_start":276,"line_end":276,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":270094,"byte_end":270097,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":270102,"byte_end":270161,"line_start":278,"line_end":278,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":270166,"byte_end":270169,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":270174,"byte_end":270185,"line_start":280,"line_end":280,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":270190,"byte_end":270219,"line_start":281,"line_end":281,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).minute(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":270224,"byte_end":270267,"line_start":282,"line_end":282,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(time!(23:59:59).minute(), 59);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":270272,"byte_end":270317,"line_start":283,"line_end":283,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":270322,"byte_end":270329,"line_start":284,"line_end":284,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1396},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":270694,"byte_end":270700,"line_start":298,"line_end":298,"column_start":18,"column_end":24},"name":"second","qualname":"<Time>::second","value":"pub const fn second(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the second within the minute.","sig":null,"attributes":[{"value":"/ Get the second within the minute.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":270399,"byte_end":270436,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":270441,"byte_end":270444,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":270449,"byte_end":270508,"line_start":291,"line_end":291,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":270513,"byte_end":270516,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":270521,"byte_end":270532,"line_start":293,"line_end":293,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":270537,"byte_end":270566,"line_start":294,"line_end":294,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).second(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":270571,"byte_end":270614,"line_start":295,"line_end":295,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(time!(23:59:59).second(), 59);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":270619,"byte_end":270664,"line_start":296,"line_end":296,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":270669,"byte_end":270676,"line_start":297,"line_end":297,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1397},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":271062,"byte_end":271073,"line_start":311,"line_end":311,"column_start":18,"column_end":29},"name":"millisecond","qualname":"<Time>::millisecond","value":"pub const fn millisecond(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Get the milliseconds within the second.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":270746,"byte_end":270789,"line_start":302,"line_end":302,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":270794,"byte_end":270797,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":270802,"byte_end":270864,"line_start":304,"line_end":304,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":270869,"byte_end":270872,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":270877,"byte_end":270888,"line_start":306,"line_end":306,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":270893,"byte_end":270922,"line_start":307,"line_end":307,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00).millisecond(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":270927,"byte_end":270972,"line_start":308,"line_end":308,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(time!(23:59:59.999).millisecond(), 999);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":270977,"byte_end":271032,"line_start":309,"line_end":309,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":271037,"byte_end":271044,"line_start":310,"line_end":310,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1398},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":271471,"byte_end":271482,"line_start":324,"line_end":324,"column_start":18,"column_end":29},"name":"microsecond","qualname":"<Time>::microsecond","value":"pub const fn microsecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the microseconds within the second.","sig":null,"attributes":[{"value":"/ Get the microseconds within the second.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":271143,"byte_end":271186,"line_start":315,"line_end":315,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":271191,"byte_end":271194,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":271199,"byte_end":271265,"line_start":317,"line_end":317,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":271270,"byte_end":271273,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":271278,"byte_end":271289,"line_start":319,"line_end":319,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":271294,"byte_end":271323,"line_start":320,"line_end":320,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00).microsecond(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":271328,"byte_end":271373,"line_start":321,"line_end":321,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(time!(23:59:59.999_999).microsecond(), 999_999);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":271378,"byte_end":271441,"line_start":322,"line_end":322,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":271446,"byte_end":271453,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1399},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":271878,"byte_end":271888,"line_start":337,"line_end":337,"column_start":18,"column_end":28},"name":"nanosecond","qualname":"<Time>::nanosecond","value":"pub const fn nanosecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Get the nanoseconds within the second.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":271541,"byte_end":271583,"line_start":328,"line_end":328,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":271588,"byte_end":271591,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000_000`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":271596,"byte_end":271666,"line_start":330,"line_end":330,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":271671,"byte_end":271674,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":271679,"byte_end":271690,"line_start":332,"line_end":332,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":271695,"byte_end":271724,"line_start":333,"line_end":333,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00).nanosecond(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":271729,"byte_end":271773,"line_start":334,"line_end":334,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(time!(23:59:59.999_999_999).nanosecond(), 999_999_999);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":271778,"byte_end":271848,"line_start":335,"line_end":335,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":271853,"byte_end":271860,"line_start":336,"line_end":336,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1404},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":276980,"byte_end":276992,"line_start":464,"line_end":464,"column_start":18,"column_end":30},"name":"replace_hour","qualname":"<Time>::replace_hour","value":"pub const fn replace_hour(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the clock hour.","sig":null,"attributes":[{"value":"/ Replace the clock hour.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":276567,"byte_end":276594,"line_start":453,"line_end":453,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":276599,"byte_end":276602,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":276607,"byte_end":276618,"line_start":455,"line_end":455,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":276623,"byte_end":276652,"line_start":456,"line_end":456,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":276657,"byte_end":276672,"line_start":457,"line_end":457,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_hour(7),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":276677,"byte_end":276729,"line_start":458,"line_end":458,"column_start":5,"column_end":57}},{"value":"/     Ok(time!(07:02:03.004_005_006))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":276734,"byte_end":276773,"line_start":459,"line_end":459,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":276778,"byte_end":276784,"line_start":460,"line_end":460,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_hour(24).is_err()); // 24 isn't a valid hour","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":276789,"byte_end":276881,"line_start":461,"line_end":461,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":276886,"byte_end":276893,"line_start":462,"line_end":462,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":276898,"byte_end":276962,"line_start":463,"line_end":463,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1405},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":277695,"byte_end":277709,"line_start":485,"line_end":485,"column_start":18,"column_end":32},"name":"replace_minute","qualname":"<Time>::replace_minute","value":"pub const fn replace_minute(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the minutes within the hour.","sig":null,"attributes":[{"value":"/ Replace the minutes within the hour.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":277263,"byte_end":277303,"line_start":474,"line_end":474,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":277308,"byte_end":277311,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":277316,"byte_end":277327,"line_start":476,"line_end":476,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":277332,"byte_end":277361,"line_start":477,"line_end":477,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":277366,"byte_end":277381,"line_start":478,"line_end":478,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_minute(7),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":277386,"byte_end":277440,"line_start":479,"line_end":479,"column_start":5,"column_end":59}},{"value":"/     Ok(time!(01:07:03.004_005_006))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":277445,"byte_end":277484,"line_start":480,"line_end":480,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":277489,"byte_end":277495,"line_start":481,"line_end":481,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_minute(60).is_err()); // 60 isn't a valid minute","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":277500,"byte_end":277596,"line_start":482,"line_end":482,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":277601,"byte_end":277608,"line_start":483,"line_end":483,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":277613,"byte_end":277677,"line_start":484,"line_end":484,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1406},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":278418,"byte_end":278432,"line_start":506,"line_end":506,"column_start":18,"column_end":32},"name":"replace_second","qualname":"<Time>::replace_second","value":"pub const fn replace_second(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the seconds within the minute.","sig":null,"attributes":[{"value":"/ Replace the seconds within the minute.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":277984,"byte_end":278026,"line_start":495,"line_end":495,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":278031,"byte_end":278034,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":278039,"byte_end":278050,"line_start":497,"line_end":497,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":278055,"byte_end":278084,"line_start":498,"line_end":498,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":278089,"byte_end":278104,"line_start":499,"line_end":499,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_second(7),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":278109,"byte_end":278163,"line_start":500,"line_end":500,"column_start":5,"column_end":59}},{"value":"/     Ok(time!(01:02:07.004_005_006))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":278168,"byte_end":278207,"line_start":501,"line_end":501,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":278212,"byte_end":278218,"line_start":502,"line_end":502,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_second(60).is_err()); // 60 isn't a valid second","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":278223,"byte_end":278319,"line_start":503,"line_end":503,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":278324,"byte_end":278331,"line_start":504,"line_end":504,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":278336,"byte_end":278400,"line_start":505,"line_end":505,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1407},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":279159,"byte_end":279178,"line_start":527,"line_end":527,"column_start":18,"column_end":37},"name":"replace_millisecond","qualname":"<Time>::replace_millisecond","value":"pub const fn replace_millisecond(Self, u16)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the milliseconds within the second.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":278707,"byte_end":278754,"line_start":516,"line_end":516,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":278759,"byte_end":278762,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":278767,"byte_end":278778,"line_start":518,"line_end":518,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":278783,"byte_end":278812,"line_start":519,"line_end":519,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":278817,"byte_end":278832,"line_start":520,"line_end":520,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_millisecond(7),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":278837,"byte_end":278896,"line_start":521,"line_end":521,"column_start":5,"column_end":64}},{"value":"/     Ok(time!(01:02:03.007))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":278901,"byte_end":278932,"line_start":522,"line_end":522,"column_start":5,"column_end":36}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":278937,"byte_end":278943,"line_start":523,"line_end":523,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_millisecond(1_000).is_err()); // 1_000 isn't a valid millisecond","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":278948,"byte_end":279060,"line_start":524,"line_end":524,"column_start":5,"column_end":117}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":279065,"byte_end":279072,"line_start":525,"line_end":525,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":279077,"byte_end":279141,"line_start":526,"line_end":526,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1408},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":279976,"byte_end":279995,"line_start":551,"line_end":551,"column_start":18,"column_end":37},"name":"replace_microsecond","qualname":"<Time>::replace_microsecond","value":"pub const fn replace_microsecond(Self, u32)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the microseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the microseconds within the second.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":279508,"byte_end":279555,"line_start":540,"line_end":540,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":279560,"byte_end":279563,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":279568,"byte_end":279579,"line_start":542,"line_end":542,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":279584,"byte_end":279613,"line_start":543,"line_end":543,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":279618,"byte_end":279633,"line_start":544,"line_end":544,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_microsecond(7_008),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":279638,"byte_end":279701,"line_start":545,"line_end":545,"column_start":5,"column_end":68}},{"value":"/     Ok(time!(01:02:03.007_008))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":279706,"byte_end":279741,"line_start":546,"line_end":546,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":279746,"byte_end":279752,"line_start":547,"line_end":547,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_microsecond(1_000_000).is_err()); // 1_000_000 isn't a valid microsecond","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":279757,"byte_end":279877,"line_start":548,"line_end":548,"column_start":5,"column_end":125}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":279882,"byte_end":279889,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":279894,"byte_end":279958,"line_start":550,"line_end":550,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1409},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":280797,"byte_end":280815,"line_start":575,"line_end":575,"column_start":18,"column_end":36},"name":"replace_nanosecond","qualname":"<Time>::replace_nanosecond","value":"pub const fn replace_nanosecond(Self, u32)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the nanoseconds within the second.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":280317,"byte_end":280363,"line_start":564,"line_end":564,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":280368,"byte_end":280371,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":280376,"byte_end":280387,"line_start":566,"line_end":566,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":280392,"byte_end":280421,"line_start":567,"line_end":567,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":280426,"byte_end":280441,"line_start":568,"line_end":568,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_nanosecond(7_008_009),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":280446,"byte_end":280512,"line_start":569,"line_end":569,"column_start":5,"column_end":71}},{"value":"/     Ok(time!(01:02:03.007_008_009))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":280517,"byte_end":280556,"line_start":570,"line_end":570,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":280561,"byte_end":280567,"line_start":571,"line_end":571,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_nanosecond(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid nanosecond","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":280572,"byte_end":280698,"line_start":572,"line_end":572,"column_start":5,"column_end":131}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":280703,"byte_end":280710,"line_start":573,"line_end":573,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":280715,"byte_end":280779,"line_start":574,"line_end":574,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1411},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":281315,"byte_end":281326,"line_start":591,"line_end":591,"column_start":12,"column_end":23},"name":"format_into","qualname":"<Time>::format_into","value":"pub fn format_into<impl io::Write: io::Write,\n                   impl Formattable + ?Sized: Formattable +\n                   ?Sized>(Self, &mut impl io::Write,\n                           &impl Formattable + ?Sized)\n-> Result<usize, crate::error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `Time` using the provided [format description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `Time` using the provided [format description](crate::format_description).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":281214,"byte_end":281303,"line_start":590,"line_end":590,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":1414},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":281910,"byte_end":281916,"line_start":607,"line_end":607,"column_start":12,"column_end":18},"name":"format","qualname":"<Time>::format","value":"pub fn format<impl Formattable + ?Sized: Formattable +\n              ?Sized>(Self, &impl Formattable + ?Sized)\n-> Result<String, crate::error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `Time` using the provided [format description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `Time` using the provided [format description](crate::format_description).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":281542,"byte_end":281631,"line_start":599,"line_end":599,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":281636,"byte_end":281639,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":281644,"byte_end":281655,"line_start":601,"line_end":601,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::time};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":281660,"byte_end":281711,"line_start":602,"line_end":602,"column_start":5,"column_end":56}},{"value":"/ let format = format_description::parse(\"[hour]:[minute]:[second]\")?;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":281716,"byte_end":281788,"line_start":603,"line_end":603,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(time!(12:00).format(&format)?, \"12:00:00\");","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":281793,"byte_end":281851,"line_start":604,"line_end":604,"column_start":5,"column_end":63}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":281856,"byte_end":281886,"line_start":605,"line_end":605,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":281891,"byte_end":281898,"line_start":606,"line_end":606,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2579},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":287576,"byte_end":287585,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"name":"UtcOffset","qualname":"::utc_offset::UtcOffset","value":"UtcOffset {  }","parent":null,"children":[{"krate":0,"index":2580},{"krate":0,"index":2581},{"krate":0,"index":2582}],"decl_id":null,"docs":" An offset from UTC.","sig":null,"attributes":[{"value":"/ An offset from UTC.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":287282,"byte_end":287305,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":287306,"byte_end":287309,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This struct can store values up to ±23:59:59. If you need support outside this range, please","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":287310,"byte_end":287407,"line_start":20,"line_end":20,"column_start":1,"column_end":97}},{"value":"/ file an issue with your use case.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":287408,"byte_end":287445,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":1456},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":287997,"byte_end":288000,"line_start":40,"line_end":40,"column_start":15,"column_end":18},"name":"UTC","qualname":"::utc_offset::UtcOffset::UTC","value":"Self","parent":{"krate":0,"index":1455},"children":[],"decl_id":null,"docs":" A `UtcOffset` that is UTC.","sig":null,"attributes":[{"value":"/ A `UtcOffset` that is UTC.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":287817,"byte_end":287847,"line_start":34,"line_end":34,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":287852,"byte_end":287855,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":287860,"byte_end":287871,"line_start":36,"line_end":36,"column_start":5,"column_end":16}},{"value":"/ # use time::{UtcOffset, macros::offset};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":287876,"byte_end":287920,"line_start":37,"line_end":37,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(UtcOffset::UTC, offset!(UTC));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":287925,"byte_end":287970,"line_start":38,"line_end":38,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":287975,"byte_end":287982,"line_start":39,"line_end":39,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1457},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":288326,"byte_end":288346,"line_start":47,"line_end":47,"column_start":18,"column_end":38},"name":"__from_hms_unchecked","qualname":"<UtcOffset>::__from_hms_unchecked","value":"pub const fn __from_hms_unchecked(i8, i8, i8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `UtcOffset` representing an offset of the hours, minutes, and seconds provided, the\n validity of which must be guaranteed by the caller. All three parameters must have the same\n sign.\n","sig":null,"attributes":[{"value":"/ Create a `UtcOffset` representing an offset of the hours, minutes, and seconds provided, the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":288079,"byte_end":288175,"line_start":43,"line_end":43,"column_start":5,"column_end":101}},{"value":"/ validity of which must be guaranteed by the caller. All three parameters must have the same","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":288180,"byte_end":288275,"line_start":44,"line_end":44,"column_start":5,"column_end":100}},{"value":"/ sign.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":288280,"byte_end":288289,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1458},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":289006,"byte_end":289014,"line_start":67,"line_end":67,"column_start":18,"column_end":26},"name":"from_hms","qualname":"<UtcOffset>::from_hms","value":"pub const fn from_hms(i8, i8, i8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Create a `UtcOffset` representing an offset by the number of hours, minutes, and seconds\n provided.","sig":null,"attributes":[{"value":"/ Create a `UtcOffset` representing an offset by the number of hours, minutes, and seconds","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":288491,"byte_end":288583,"line_start":55,"line_end":55,"column_start":5,"column_end":97}},{"value":"/ provided.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":288588,"byte_end":288601,"line_start":56,"line_end":56,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":288606,"byte_end":288609,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The sign of all three components should match. If they do not, all smaller components will","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":288614,"byte_end":288708,"line_start":58,"line_end":58,"column_start":5,"column_end":99}},{"value":"/ have their signs flipped.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":288713,"byte_end":288742,"line_start":59,"line_end":59,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":288747,"byte_end":288750,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":288755,"byte_end":288766,"line_start":61,"line_end":61,"column_start":5,"column_end":16}},{"value":"/ # use time::UtcOffset;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":288771,"byte_end":288797,"line_start":62,"line_end":62,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(UtcOffset::from_hms(1, 2, 3)?.as_hms(), (1, 2, 3));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":288802,"byte_end":288868,"line_start":63,"line_end":63,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(UtcOffset::from_hms(1, -2, -3)?.as_hms(), (1, 2, 3));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":288873,"byte_end":288941,"line_start":64,"line_end":64,"column_start":5,"column_end":73}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":288946,"byte_end":288976,"line_start":65,"line_end":65,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":288981,"byte_end":288988,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1459},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":289972,"byte_end":289990,"line_start":97,"line_end":97,"column_start":18,"column_end":36},"name":"from_whole_seconds","qualname":"<UtcOffset>::from_whole_seconds","value":"pub const fn from_whole_seconds(i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Create a `UtcOffset` representing an offset by the number of seconds provided.","sig":null,"attributes":[{"value":"/ Create a `UtcOffset` representing an offset by the number of seconds provided.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":289691,"byte_end":289773,"line_start":90,"line_end":90,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":289778,"byte_end":289781,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":289786,"byte_end":289797,"line_start":92,"line_end":92,"column_start":5,"column_end":16}},{"value":"/ # use time::UtcOffset;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":289802,"byte_end":289828,"line_start":93,"line_end":93,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(UtcOffset::from_whole_seconds(3_723)?.as_hms(), (1, 2, 3));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":289833,"byte_end":289907,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":289912,"byte_end":289942,"line_start":95,"line_end":95,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":289947,"byte_end":289954,"line_start":96,"line_end":96,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1460},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":290738,"byte_end":290744,"line_start":117,"line_end":117,"column_start":18,"column_end":24},"name":"as_hms","qualname":"<UtcOffset>::as_hms","value":"pub const fn as_hms(Self) -> (i8, i8, i8)","parent":null,"children":[],"decl_id":null,"docs":" Obtain the UTC offset as its hours, minutes, and seconds. The sign of all three components\n will always match. A positive value indicates an offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the UTC offset as its hours, minutes, and seconds. The sign of all three components","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":290332,"byte_end":290426,"line_start":109,"line_end":109,"column_start":5,"column_end":99}},{"value":"/ will always match. A positive value indicates an offset to the east; a negative to the west.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":290431,"byte_end":290527,"line_start":110,"line_end":110,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":290532,"byte_end":290535,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":290540,"byte_end":290551,"line_start":112,"line_end":112,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":290556,"byte_end":290587,"line_start":113,"line_end":113,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).as_hms(), (1, 2, 3));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":290592,"byte_end":290646,"line_start":114,"line_end":114,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(offset!(-1:02:03).as_hms(), (-1, -2, -3));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":290651,"byte_end":290708,"line_start":115,"line_end":115,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":290713,"byte_end":290720,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1461},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":291174,"byte_end":291185,"line_start":129,"line_end":129,"column_start":18,"column_end":29},"name":"whole_hours","qualname":"<UtcOffset>::whole_hours","value":"pub const fn whole_hours(Self) -> i8","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of whole hours the offset is from UTC. A positive value indicates an\n offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of whole hours the offset is from UTC. A positive value indicates an","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":290829,"byte_end":290919,"line_start":121,"line_end":121,"column_start":5,"column_end":95}},{"value":"/ offset to the east; a negative to the west.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":290924,"byte_end":290971,"line_start":122,"line_end":122,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":290976,"byte_end":290979,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":290984,"byte_end":290995,"line_start":124,"line_end":124,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":291000,"byte_end":291031,"line_start":125,"line_end":125,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).whole_hours(), 1);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":291036,"byte_end":291087,"line_start":126,"line_end":126,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(offset!(-1:02:03).whole_hours(), -1);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":291092,"byte_end":291144,"line_start":127,"line_end":127,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":291149,"byte_end":291156,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1462},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":291583,"byte_end":291596,"line_start":141,"line_end":141,"column_start":18,"column_end":31},"name":"whole_minutes","qualname":"<UtcOffset>::whole_minutes","value":"pub const fn whole_minutes(Self) -> i16","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of whole minutes the offset is from UTC. A positive value indicates an\n offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of whole minutes the offset is from UTC. A positive value indicates an","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":291230,"byte_end":291322,"line_start":133,"line_end":133,"column_start":5,"column_end":97}},{"value":"/ offset to the east; a negative to the west.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":291327,"byte_end":291374,"line_start":134,"line_end":134,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":291379,"byte_end":291382,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":291387,"byte_end":291398,"line_start":136,"line_end":136,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":291403,"byte_end":291434,"line_start":137,"line_end":137,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).whole_minutes(), 62);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":291439,"byte_end":291493,"line_start":138,"line_end":138,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(offset!(-1:02:03).whole_minutes(), -62);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":291498,"byte_end":291553,"line_start":139,"line_end":139,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":291558,"byte_end":291565,"line_start":140,"line_end":140,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1463},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":292043,"byte_end":292060,"line_start":153,"line_end":153,"column_start":18,"column_end":35},"name":"minutes_past_hour","qualname":"<UtcOffset>::minutes_past_hour","value":"pub const fn minutes_past_hour(Self) -> i8","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of minutes past the hour the offset is from UTC. A positive value\n indicates an offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of minutes past the hour the offset is from UTC. A positive value","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":291676,"byte_end":291763,"line_start":145,"line_end":145,"column_start":5,"column_end":92}},{"value":"/ indicates an offset to the east; a negative to the west.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":291768,"byte_end":291828,"line_start":146,"line_end":146,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":291833,"byte_end":291836,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":291841,"byte_end":291852,"line_start":148,"line_end":148,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":291857,"byte_end":291888,"line_start":149,"line_end":149,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).minutes_past_hour(), 2);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":291893,"byte_end":291950,"line_start":150,"line_end":150,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(offset!(-1:02:03).minutes_past_hour(), -2);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":291955,"byte_end":292013,"line_start":151,"line_end":151,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":292018,"byte_end":292025,"line_start":152,"line_end":152,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1464},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":292596,"byte_end":292609,"line_start":167,"line_end":167,"column_start":18,"column_end":31},"name":"whole_seconds","qualname":"<UtcOffset>::whole_seconds","value":"pub const fn whole_seconds(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of whole seconds the offset is from UTC. A positive value indicates an\n offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of whole seconds the offset is from UTC. A positive value indicates an","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":292107,"byte_end":292199,"line_start":157,"line_end":157,"column_start":5,"column_end":97}},{"value":"/ offset to the east; a negative to the west.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":292204,"byte_end":292251,"line_start":158,"line_end":158,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":292256,"byte_end":292259,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":292264,"byte_end":292275,"line_start":160,"line_end":160,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":292280,"byte_end":292311,"line_start":161,"line_end":161,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).whole_seconds(), 3723);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":292316,"byte_end":292372,"line_start":162,"line_end":162,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(offset!(-1:02:03).whole_seconds(), -3723);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":292377,"byte_end":292434,"line_start":163,"line_end":163,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":292439,"byte_end":292446,"line_start":164,"line_end":164,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1465},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":293092,"byte_end":293111,"line_start":179,"line_end":179,"column_start":18,"column_end":37},"name":"seconds_past_minute","qualname":"<UtcOffset>::seconds_past_minute","value":"pub const fn seconds_past_minute(Self) -> i8","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of seconds past the minute the offset is from UTC. A positive value\n indicates an offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of seconds past the minute the offset is from UTC. A positive value","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":292719,"byte_end":292808,"line_start":171,"line_end":171,"column_start":5,"column_end":94}},{"value":"/ indicates an offset to the east; a negative to the west.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":292813,"byte_end":292873,"line_start":172,"line_end":172,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":292878,"byte_end":292881,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":292886,"byte_end":292897,"line_start":174,"line_end":174,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":292902,"byte_end":292933,"line_start":175,"line_end":175,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).seconds_past_minute(), 3);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":292938,"byte_end":292997,"line_start":176,"line_end":176,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(offset!(-1:02:03).seconds_past_minute(), -3);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":293002,"byte_end":293062,"line_start":177,"line_end":177,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":293067,"byte_end":293074,"line_start":178,"line_end":178,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1466},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":293477,"byte_end":293483,"line_start":194,"line_end":194,"column_start":18,"column_end":24},"name":"is_utc","qualname":"<UtcOffset>::is_utc","value":"pub const fn is_utc(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the offset is exactly UTC.","sig":null,"attributes":[{"value":"/ Check if the offset is exactly UTC.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":293208,"byte_end":293247,"line_start":185,"line_end":185,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":293252,"byte_end":293255,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":293260,"byte_end":293263,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":293268,"byte_end":293279,"line_start":188,"line_end":188,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":293284,"byte_end":293315,"line_start":189,"line_end":189,"column_start":5,"column_end":36}},{"value":"/ assert!(!offset!(+1:02:03).is_utc());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":293320,"byte_end":293361,"line_start":190,"line_end":190,"column_start":5,"column_end":46}},{"value":"/ assert!(!offset!(-1:02:03).is_utc());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":293366,"byte_end":293407,"line_start":191,"line_end":191,"column_start":5,"column_end":46}},{"value":"/ assert!(offset!(UTC).is_utc());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":293412,"byte_end":293447,"line_start":192,"line_end":192,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":293452,"byte_end":293459,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1467},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":293866,"byte_end":293877,"line_start":206,"line_end":206,"column_start":18,"column_end":29},"name":"is_positive","qualname":"<UtcOffset>::is_positive","value":"pub const fn is_positive(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the offset is positive, or east of UTC.","sig":null,"attributes":[{"value":"/ Check if the offset is positive, or east of UTC.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":293577,"byte_end":293629,"line_start":198,"line_end":198,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":293634,"byte_end":293637,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":293642,"byte_end":293653,"line_start":200,"line_end":200,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":293658,"byte_end":293689,"line_start":201,"line_end":201,"column_start":5,"column_end":36}},{"value":"/ assert!(offset!(+1:02:03).is_positive());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":293694,"byte_end":293739,"line_start":202,"line_end":202,"column_start":5,"column_end":50}},{"value":"/ assert!(!offset!(-1:02:03).is_positive());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":293744,"byte_end":293790,"line_start":203,"line_end":203,"column_start":5,"column_end":51}},{"value":"/ assert!(!offset!(UTC).is_positive());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":293795,"byte_end":293836,"line_start":204,"line_end":204,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":293841,"byte_end":293848,"line_start":205,"line_end":205,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1468},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":294257,"byte_end":294268,"line_start":218,"line_end":218,"column_start":18,"column_end":29},"name":"is_negative","qualname":"<UtcOffset>::is_negative","value":"pub const fn is_negative(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the offset is negative, or west of UTC.","sig":null,"attributes":[{"value":"/ Check if the offset is negative, or west of UTC.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":293968,"byte_end":294020,"line_start":210,"line_end":210,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":294025,"byte_end":294028,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":294033,"byte_end":294044,"line_start":212,"line_end":212,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":294049,"byte_end":294080,"line_start":213,"line_end":213,"column_start":5,"column_end":36}},{"value":"/ assert!(!offset!(+1:02:03).is_negative());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":294085,"byte_end":294131,"line_start":214,"line_end":214,"column_start":5,"column_end":51}},{"value":"/ assert!(offset!(-1:02:03).is_negative());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":294136,"byte_end":294181,"line_start":215,"line_end":215,"column_start":5,"column_end":50}},{"value":"/ assert!(!offset!(UTC).is_negative());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":294186,"byte_end":294227,"line_start":216,"line_end":216,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":294232,"byte_end":294239,"line_start":217,"line_end":217,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1469},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":294841,"byte_end":294856,"line_start":235,"line_end":235,"column_start":12,"column_end":27},"name":"local_offset_at","qualname":"<UtcOffset>::local_offset_at","value":"pub fn local_offset_at(OffsetDateTime)\n-> Result<Self, error::IndeterminateOffset>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to obtain the system's UTC offset at a known moment in time. If the offset cannot be\n determined, an error is returned.","sig":null,"attributes":[{"value":"/ Attempt to obtain the system's UTC offset at a known moment in time. If the offset cannot be","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":294414,"byte_end":294510,"line_start":224,"line_end":224,"column_start":5,"column_end":101}},{"value":"/ determined, an error is returned.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":294515,"byte_end":294552,"line_start":225,"line_end":225,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":294557,"byte_end":294560,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":294565,"byte_end":294576,"line_start":227,"line_end":227,"column_start":5,"column_end":16}},{"value":"/ # use time::{UtcOffset, OffsetDateTime};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":294581,"byte_end":294625,"line_start":228,"line_end":228,"column_start":5,"column_end":49}},{"value":"/ let local_offset = UtcOffset::local_offset_at(OffsetDateTime::UNIX_EPOCH);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":294630,"byte_end":294708,"line_start":229,"line_end":229,"column_start":5,"column_end":83}},{"value":"/ # if false {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":294713,"byte_end":294729,"line_start":230,"line_end":230,"column_start":5,"column_end":21}},{"value":"/ assert!(local_offset.is_ok());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":294734,"byte_end":294768,"line_start":231,"line_end":231,"column_start":5,"column_end":39}},{"value":"/ # }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":294773,"byte_end":294780,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":294785,"byte_end":294792,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"local-offset\")","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":294797,"byte_end":294829,"line_start":234,"line_end":234,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1470},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":295378,"byte_end":295398,"line_start":250,"line_end":250,"column_start":12,"column_end":32},"name":"current_local_offset","qualname":"<UtcOffset>::current_local_offset","value":"pub fn current_local_offset() -> Result<Self, error::IndeterminateOffset>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to obtain the system's current UTC offset. If the offset cannot be determined, an\n error is returned.","sig":null,"attributes":[{"value":"/ Attempt to obtain the system's current UTC offset. If the offset cannot be determined, an","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":295008,"byte_end":295101,"line_start":239,"line_end":239,"column_start":5,"column_end":98}},{"value":"/ error is returned.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":295106,"byte_end":295128,"line_start":240,"line_end":240,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":295133,"byte_end":295136,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":295141,"byte_end":295152,"line_start":242,"line_end":242,"column_start":5,"column_end":16}},{"value":"/ # use time::UtcOffset;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":295157,"byte_end":295183,"line_start":243,"line_end":243,"column_start":5,"column_end":31}},{"value":"/ let local_offset = UtcOffset::current_local_offset();","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":295188,"byte_end":295245,"line_start":244,"line_end":244,"column_start":5,"column_end":62}},{"value":"/ # if false {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":295250,"byte_end":295266,"line_start":245,"line_end":245,"column_start":5,"column_end":21}},{"value":"/ assert!(local_offset.is_ok());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":295271,"byte_end":295305,"line_start":246,"line_end":246,"column_start":5,"column_end":39}},{"value":"/ # }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":295310,"byte_end":295317,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":295322,"byte_end":295329,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"local-offset\")","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":295334,"byte_end":295366,"line_start":249,"line_end":249,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1472},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":295785,"byte_end":295796,"line_start":261,"line_end":261,"column_start":12,"column_end":23},"name":"format_into","qualname":"<UtcOffset>::format_into","value":"pub fn format_into<impl io::Write: io::Write,\n                   impl Formattable + ?Sized: Formattable +\n                   ?Sized>(Self, &mut impl io::Write,\n                           &impl Formattable + ?Sized)\n-> Result<usize, error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `UtcOffset` using the provided [format description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `UtcOffset` using the provided [format description](crate::format_description).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":295679,"byte_end":295773,"line_start":260,"line_end":260,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":1475},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":296397,"byte_end":296403,"line_start":277,"line_end":277,"column_start":12,"column_end":18},"name":"format","qualname":"<UtcOffset>::format","value":"pub fn format<impl Formattable + ?Sized: Formattable +\n              ?Sized>(Self, &impl Formattable + ?Sized)\n-> Result<String, error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `UtcOffset` using the provided [format description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `UtcOffset` using the provided [format description](crate::format_description).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":296005,"byte_end":296099,"line_start":269,"line_end":269,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":296104,"byte_end":296107,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":296112,"byte_end":296123,"line_start":271,"line_end":271,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::offset};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":296128,"byte_end":296181,"line_start":272,"line_end":272,"column_start":5,"column_end":58}},{"value":"/ let format = format_description::parse(\"[offset_hour sign:mandatory]:[offset_minute]\")?;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":296186,"byte_end":296278,"line_start":273,"line_end":273,"column_start":5,"column_end":97}},{"value":"/ assert_eq!(offset!(+1).format(&format)?, \"+01:00\");","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":296283,"byte_end":296338,"line_start":274,"line_end":274,"column_start":5,"column_end":60}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":296343,"byte_end":296373,"line_start":275,"line_end":275,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":296378,"byte_end":296385,"line_start":276,"line_end":276,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":1482},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"util","qualname":"::util","value":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","parent":null,"children":[{"krate":0,"index":1483},{"krate":0,"index":1486},{"krate":0,"index":1493},{"krate":0,"index":1495},{"krate":0,"index":1496},{"krate":0,"index":1497}],"decl_id":null,"docs":" Utility functions.\n","sig":null,"attributes":[{"value":"/ Utility functions.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":297720,"byte_end":297742,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":1493},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":298237,"byte_end":298255,"line_start":21,"line_end":21,"column_start":14,"column_end":32},"name":"days_in_year_month","qualname":"::util::days_in_year_month","value":"pub const fn days_in_year_month(i32, Month) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the number of days in the month of a given year.","sig":null,"attributes":[{"value":"/ Get the number of days in the month of a given year.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":298043,"byte_end":298099,"line_start":15,"line_end":15,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":298100,"byte_end":298103,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":298104,"byte_end":298115,"line_start":17,"line_end":17,"column_start":1,"column_end":12}},{"value":"/ # use time::{Month, util};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":298116,"byte_end":298146,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(util::days_in_year_month(2020, Month::February), 29);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":298147,"byte_end":298215,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":298216,"byte_end":298223,"line_start":20,"line_end":20,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1495},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":298954,"byte_end":298966,"line_start":42,"line_end":42,"column_start":14,"column_end":26},"name":"is_leap_year","qualname":"::util::is_leap_year","value":"pub const fn is_leap_year(i32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the provided year is a leap year in the proleptic Gregorian calendar. Uses\n [astronomical year numbering](https://en.wikipedia.org/wiki/Astronomical_year_numbering).","sig":null,"attributes":[{"value":"/ Returns if the provided year is a leap year in the proleptic Gregorian calendar. Uses","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":298529,"byte_end":298618,"line_start":31,"line_end":31,"column_start":1,"column_end":90}},{"value":"/ [astronomical year numbering](https://en.wikipedia.org/wiki/Astronomical_year_numbering).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":298619,"byte_end":298712,"line_start":32,"line_end":32,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":298713,"byte_end":298716,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":298717,"byte_end":298728,"line_start":34,"line_end":34,"column_start":1,"column_end":12}},{"value":"/ # use time::util::is_leap_year;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":298729,"byte_end":298764,"line_start":35,"line_end":35,"column_start":1,"column_end":36}},{"value":"/ assert!(!is_leap_year(1900));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":298765,"byte_end":298798,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ assert!(is_leap_year(2000));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":298799,"byte_end":298831,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/ assert!(is_leap_year(2004));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":298832,"byte_end":298864,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/ assert!(!is_leap_year(2005));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":298865,"byte_end":298898,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"/ assert!(!is_leap_year(2100));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":298899,"byte_end":298932,"line_start":40,"line_end":40,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":298933,"byte_end":298940,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1496},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":299439,"byte_end":299451,"line_start":58,"line_end":58,"column_start":14,"column_end":26},"name":"days_in_year","qualname":"::util::days_in_year","value":"pub const fn days_in_year(i32) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the number of calendar days in a given year.","sig":null,"attributes":[{"value":"/ Get the number of calendar days in a given year.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":299047,"byte_end":299099,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":299100,"byte_end":299103,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The returned value will always be either 365 or 366.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":299104,"byte_end":299160,"line_start":48,"line_end":48,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":299161,"byte_end":299164,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":299165,"byte_end":299176,"line_start":50,"line_end":50,"column_start":1,"column_end":12}},{"value":"/ # use time::util::days_in_year;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":299177,"byte_end":299212,"line_start":51,"line_end":51,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(days_in_year(1900), 365);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":299213,"byte_end":299253,"line_start":52,"line_end":52,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(days_in_year(2000), 366);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":299254,"byte_end":299294,"line_start":53,"line_end":53,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(days_in_year(2004), 366);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":299295,"byte_end":299335,"line_start":54,"line_end":54,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(days_in_year(2005), 365);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":299336,"byte_end":299376,"line_start":55,"line_end":55,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(days_in_year(2100), 365);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":299377,"byte_end":299417,"line_start":56,"line_end":56,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":299418,"byte_end":299425,"line_start":57,"line_end":57,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1497},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":299782,"byte_end":299795,"line_start":71,"line_end":71,"column_start":14,"column_end":27},"name":"weeks_in_year","qualname":"::util::weeks_in_year","value":"pub const fn weeks_in_year(i32) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the number of weeks in the ISO year.","sig":null,"attributes":[{"value":"/ Get the number of weeks in the ISO year.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":299522,"byte_end":299566,"line_start":62,"line_end":62,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":299567,"byte_end":299570,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ The returned value will always be either 52 or 53.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":299571,"byte_end":299625,"line_start":64,"line_end":64,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":299626,"byte_end":299629,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":299630,"byte_end":299641,"line_start":66,"line_end":66,"column_start":1,"column_end":12}},{"value":"/ # use time::util::weeks_in_year;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":299642,"byte_end":299678,"line_start":67,"line_end":67,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(weeks_in_year(2019), 52);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":299679,"byte_end":299719,"line_start":68,"line_end":68,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(weeks_in_year(2020), 53);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":299720,"byte_end":299760,"line_start":69,"line_end":69,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/util.rs","byte_start":299761,"byte_end":299768,"line_start":70,"line_end":70,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2603},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":300754,"byte_end":300760,"line_start":17,"line_end":17,"column_start":5,"column_end":11},"name":"Monday","qualname":"::weekday::Weekday::Monday","value":"Weekday::Monday","parent":{"krate":0,"index":2602},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":300702,"byte_end":300749,"line_start":16,"line_end":16,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2605},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":300818,"byte_end":300825,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"Tuesday","qualname":"::weekday::Weekday::Tuesday","value":"Weekday::Tuesday","parent":{"krate":0,"index":2602},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":300766,"byte_end":300813,"line_start":18,"line_end":18,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2607},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":300883,"byte_end":300892,"line_start":21,"line_end":21,"column_start":5,"column_end":14},"name":"Wednesday","qualname":"::weekday::Weekday::Wednesday","value":"Weekday::Wednesday","parent":{"krate":0,"index":2602},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":300831,"byte_end":300878,"line_start":20,"line_end":20,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2609},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":300950,"byte_end":300958,"line_start":23,"line_end":23,"column_start":5,"column_end":13},"name":"Thursday","qualname":"::weekday::Weekday::Thursday","value":"Weekday::Thursday","parent":{"krate":0,"index":2602},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":300898,"byte_end":300945,"line_start":22,"line_end":22,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2611},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":301016,"byte_end":301022,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Friday","qualname":"::weekday::Weekday::Friday","value":"Weekday::Friday","parent":{"krate":0,"index":2602},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":300964,"byte_end":301011,"line_start":24,"line_end":24,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2613},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":301080,"byte_end":301088,"line_start":27,"line_end":27,"column_start":5,"column_end":13},"name":"Saturday","qualname":"::weekday::Weekday::Saturday","value":"Weekday::Saturday","parent":{"krate":0,"index":2602},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":301028,"byte_end":301075,"line_start":26,"line_end":26,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2615},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":301146,"byte_end":301152,"line_start":29,"line_end":29,"column_start":5,"column_end":11},"name":"Sunday","qualname":"::weekday::Weekday::Sunday","value":"Weekday::Sunday","parent":{"krate":0,"index":2602},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":301094,"byte_end":301141,"line_start":28,"line_end":28,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":2602},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":300688,"byte_end":300695,"line_start":15,"line_end":15,"column_start":10,"column_end":17},"name":"Weekday","qualname":"::weekday::Weekday","value":"pub enum Weekday {\n    Monday,\n    Tuesday,\n    Wednesday,\n    Thursday,\n    Friday,\n    Saturday,\n    Sunday,\n}","parent":null,"children":[{"krate":0,"index":2603},{"krate":0,"index":2605},{"krate":0,"index":2607},{"krate":0,"index":2609},{"krate":0,"index":2611},{"krate":0,"index":2613},{"krate":0,"index":2615}],"decl_id":null,"docs":" Days of the week.","sig":null,"attributes":[{"value":"/ Days of the week.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":300441,"byte_end":300462,"line_start":10,"line_end":10,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":300463,"byte_end":300466,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ As order is dependent on context (Sunday could be either two days after or five days before","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":300467,"byte_end":300562,"line_start":12,"line_end":12,"column_start":1,"column_end":96}},{"value":"/ Friday), this type does not implement `PartialOrd` or `Ord`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":300563,"byte_end":300627,"line_start":13,"line_end":13,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1514},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":301354,"byte_end":301362,"line_start":39,"line_end":39,"column_start":18,"column_end":26},"name":"previous","qualname":"<Weekday>::previous","value":"pub const fn previous(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the previous weekday.","sig":null,"attributes":[{"value":"/ Get the previous weekday.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":301176,"byte_end":301205,"line_start":33,"line_end":33,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":301210,"byte_end":301213,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":301218,"byte_end":301229,"line_start":35,"line_end":35,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":301234,"byte_end":301258,"line_start":36,"line_end":36,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Tuesday.previous(), Weekday::Monday);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":301263,"byte_end":301324,"line_start":37,"line_end":37,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":301329,"byte_end":301336,"line_start":38,"line_end":38,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1515},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":301817,"byte_end":301821,"line_start":57,"line_end":57,"column_start":18,"column_end":22},"name":"next","qualname":"<Weekday>::next","value":"pub const fn next(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the next weekday.","sig":null,"attributes":[{"value":"/ Get the next weekday.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":301647,"byte_end":301672,"line_start":51,"line_end":51,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":301677,"byte_end":301680,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":301685,"byte_end":301696,"line_start":53,"line_end":53,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":301701,"byte_end":301725,"line_start":54,"line_end":54,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.next(), Weekday::Tuesday);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":301730,"byte_end":301787,"line_start":55,"line_end":55,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":301792,"byte_end":301799,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1516},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":302342,"byte_end":302360,"line_start":76,"line_end":76,"column_start":18,"column_end":36},"name":"number_from_monday","qualname":"<Weekday>::number_from_monday","value":"pub const fn number_from_monday(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the one-indexed number of days from Monday.","sig":null,"attributes":[{"value":"/ Get the one-indexed number of days from Monday.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":302106,"byte_end":302157,"line_start":69,"line_end":69,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":302162,"byte_end":302165,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":302170,"byte_end":302181,"line_start":71,"line_end":71,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":302186,"byte_end":302210,"line_start":72,"line_end":72,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.number_from_monday(), 1);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":302215,"byte_end":302271,"line_start":73,"line_end":73,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":302276,"byte_end":302283,"line_start":74,"line_end":74,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1517},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":302624,"byte_end":302642,"line_start":86,"line_end":86,"column_start":18,"column_end":36},"name":"number_from_sunday","qualname":"<Weekday>::number_from_sunday","value":"pub const fn number_from_sunday(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the one-indexed number of days from Sunday.","sig":null,"attributes":[{"value":"/ Get the one-indexed number of days from Sunday.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":302429,"byte_end":302480,"line_start":80,"line_end":80,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":302485,"byte_end":302488,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":302493,"byte_end":302504,"line_start":82,"line_end":82,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":302509,"byte_end":302533,"line_start":83,"line_end":83,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.number_from_sunday(), 2);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":302538,"byte_end":302594,"line_start":84,"line_end":84,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":302599,"byte_end":302606,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1518},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":302912,"byte_end":302935,"line_start":96,"line_end":96,"column_start":18,"column_end":41},"name":"number_days_from_monday","qualname":"<Weekday>::number_days_from_monday","value":"pub const fn number_days_from_monday(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the zero-indexed number of days from Monday.","sig":null,"attributes":[{"value":"/ Get the zero-indexed number of days from Monday.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":302711,"byte_end":302763,"line_start":90,"line_end":90,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":302768,"byte_end":302771,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":302776,"byte_end":302787,"line_start":92,"line_end":92,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":302792,"byte_end":302816,"line_start":93,"line_end":93,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.number_days_from_monday(), 0);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":302821,"byte_end":302882,"line_start":94,"line_end":94,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":302887,"byte_end":302894,"line_start":95,"line_end":95,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1519},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":303180,"byte_end":303203,"line_start":106,"line_end":106,"column_start":18,"column_end":41},"name":"number_days_from_sunday","qualname":"<Weekday>::number_days_from_sunday","value":"pub const fn number_days_from_sunday(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the zero-indexed number of days from Sunday.","sig":null,"attributes":[{"value":"/ Get the zero-indexed number of days from Sunday.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":302979,"byte_end":303031,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":303036,"byte_end":303039,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":303044,"byte_end":303055,"line_start":102,"line_end":102,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":303060,"byte_end":303084,"line_start":103,"line_end":103,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.number_days_from_sunday(), 1);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":303089,"byte_end":303150,"line_start":104,"line_end":104,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":303155,"byte_end":303162,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":1555},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":10942,"byte_end":10948,"line_start":330,"line_end":330,"column_start":10,"column_end":16},"name":"Result","qualname":"::Result","value":"core::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" An alias for [`std::result::Result`] with a generic error from the time crate.\n","sig":null,"attributes":[{"value":"/ An alias for [`std::result::Result`] with a generic error from the time crate.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":10850,"byte_end":10932,"line_start":329,"line_end":329,"column_start":1,"column_end":83}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":12587,"byte_end":12591,"line_start":45,"line_end":45,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":12823,"byte_end":12827,"line_start":54,"line_end":54,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":40155,"byte_end":40159,"line_start":810,"line_end":810,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":43646,"byte_end":43650,"line_start":918,"line_end":918,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":45139,"byte_end":45143,"line_start":960,"line_end":960,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":45823,"byte_end":45827,"line_start":985,"line_end":985,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":46036,"byte_end":46040,"line_start":994,"line_end":994,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":46353,"byte_end":46357,"line_start":1005,"line_end":1005,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":46573,"byte_end":46577,"line_start":1014,"line_end":1014,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":46887,"byte_end":46891,"line_start":1025,"line_end":1025,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":47734,"byte_end":47741,"line_start":23,"line_end":23,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":48453,"byte_end":48461,"line_start":45,"line_end":45,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":48696,"byte_end":48704,"line_start":54,"line_end":54,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":74197,"byte_end":74205,"line_start":747,"line_end":747,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":75169,"byte_end":75177,"line_start":781,"line_end":781,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":75545,"byte_end":75556,"line_start":795,"line_end":795,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":75996,"byte_end":76004,"line_start":812,"line_end":812,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":76197,"byte_end":76205,"line_start":821,"line_end":821,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":76456,"byte_end":76467,"line_start":830,"line_end":830,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":76654,"byte_end":76665,"line_start":840,"line_end":840,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":76924,"byte_end":76932,"line_start":849,"line_end":849,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":77079,"byte_end":77087,"line_start":857,"line_end":857,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":271},{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":77285,"byte_end":77293,"line_start":866,"line_end":866,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":77526,"byte_end":77537,"line_start":875,"line_end":875,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":77841,"byte_end":77852,"line_start":887,"line_end":887,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":79108,"byte_end":79116,"line_start":930,"line_end":930,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":79407,"byte_end":79415,"line_start":946,"line_end":946,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":79773,"byte_end":79781,"line_start":964,"line_end":964,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":79936,"byte_end":79944,"line_start":972,"line_end":972,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":80161,"byte_end":80169,"line_start":982,"line_end":982,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":80330,"byte_end":80338,"line_start":990,"line_end":990,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":80500,"byte_end":80511,"line_start":998,"line_end":998,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":80679,"byte_end":80687,"line_start":1006,"line_end":1006,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":80816,"byte_end":80827,"line_start":1012,"line_end":1012,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":80935,"byte_end":80943,"line_start":1018,"line_end":1018,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":81321,"byte_end":81332,"line_start":1032,"line_end":1032,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":81474,"byte_end":81482,"line_start":1038,"line_end":1038,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":81631,"byte_end":81639,"line_start":1044,"line_end":1044,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/component_range.rs","byte_start":86846,"byte_end":86860,"line_start":26,"line_end":26,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/component_range.rs","byte_start":87292,"byte_end":87306,"line_start":39,"line_end":39,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/component_range.rs","byte_start":87685,"byte_end":87690,"line_start":55,"line_end":55,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/component_range.rs","byte_start":87820,"byte_end":87834,"line_start":61,"line_end":61,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":345},{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/component_range.rs","byte_start":88759,"byte_end":88773,"line_start":93,"line_end":93,"column_start":28,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/conversion_range.rs","byte_start":89082,"byte_end":89097,"line_start":13,"line_end":13,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/conversion_range.rs","byte_start":89295,"byte_end":89310,"line_start":20,"line_end":20,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/conversion_range.rs","byte_start":89353,"byte_end":89358,"line_start":22,"line_end":22,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/conversion_range.rs","byte_start":89480,"byte_end":89495,"line_start":28,"line_end":28,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/different_variant.rs","byte_start":90065,"byte_end":90081,"line_start":11,"line_end":11,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/different_variant.rs","byte_start":90275,"byte_end":90291,"line_start":18,"line_end":18,"column_start":28,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/different_variant.rs","byte_start":90335,"byte_end":90340,"line_start":20,"line_end":20,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/different_variant.rs","byte_start":90464,"byte_end":90480,"line_start":26,"line_end":26,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/format.rs","byte_start":91464,"byte_end":91470,"line_start":26,"line_end":26,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/format.rs","byte_start":92048,"byte_end":92054,"line_start":43,"line_end":43,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/format.rs","byte_start":92158,"byte_end":92163,"line_start":49,"line_end":49,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":399},{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/format.rs","byte_start":92449,"byte_end":92455,"line_start":61,"line_end":61,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/format.rs","byte_start":92789,"byte_end":92794,"line_start":71,"line_end":71,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/format.rs","byte_start":92970,"byte_end":92976,"line_start":78,"line_end":78,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/indeterminate_offset.rs","byte_start":93878,"byte_end":93897,"line_start":13,"line_end":13,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/indeterminate_offset.rs","byte_start":94094,"byte_end":94113,"line_start":20,"line_end":20,"column_start":28,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/indeterminate_offset.rs","byte_start":94224,"byte_end":94229,"line_start":23,"line_end":23,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/indeterminate_offset.rs","byte_start":94414,"byte_end":94433,"line_start":30,"line_end":30,"column_start":32,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":424},{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/invalid_format_description.rs","byte_start":96130,"byte_end":96135,"line_start":51,"line_end":51,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/invalid_format_description.rs","byte_start":96407,"byte_end":96431,"line_start":61,"line_end":61,"column_start":32,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/invalid_format_description.rs","byte_start":96719,"byte_end":96743,"line_start":72,"line_end":72,"column_start":23,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/invalid_format_description.rs","byte_start":97553,"byte_end":97577,"line_start":95,"line_end":95,"column_start":28,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/invalid_variant.rs","byte_start":97875,"byte_end":97889,"line_start":11,"line_end":11,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/invalid_variant.rs","byte_start":98066,"byte_end":98080,"line_start":18,"line_end":18,"column_start":28,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/invalid_variant.rs","byte_start":98122,"byte_end":98127,"line_start":20,"line_end":20,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/invalid_variant.rs","byte_start":98247,"byte_end":98261,"line_start":26,"line_end":26,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/mod.rs","byte_start":84083,"byte_end":84088,"line_start":67,"line_end":67,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/mod.rs","byte_start":85099,"byte_end":85104,"line_start":91,"line_end":91,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/component.rs","byte_start":115437,"byte_end":115451,"line_start":78,"line_end":78,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":602},{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":132905,"byte_end":132914,"line_start":385,"line_end":385,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":111305,"byte_end":111315,"line_start":118,"line_end":118,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":678}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":111847,"byte_end":111857,"line_start":130,"line_end":130,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":111985,"byte_end":111994,"line_start":136,"line_end":136,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":682},{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":112301,"byte_end":112311,"line_start":147,"line_end":147,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":112766,"byte_end":112776,"line_start":164,"line_end":164,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":112948,"byte_end":112957,"line_start":170,"line_end":170,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":113076,"byte_end":113086,"line_start":176,"line_end":176,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/formatting/formattable.rs","byte_start":158136,"byte_end":158146,"line_start":16,"line_end":16,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/formatting/formattable.rs","byte_start":158216,"byte_end":158223,"line_start":18,"line_end":18,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/formatting/formattable.rs","byte_start":158248,"byte_end":158255,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/formatting/formattable.rs","byte_start":158290,"byte_end":158291,"line_start":20,"line_end":20,"column_start":32,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/formatting/formattable.rs","byte_start":159448,"byte_end":159458,"line_start":54,"line_end":54,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/formatting/formattable.rs","byte_start":160659,"byte_end":160660,"line_start":91,"line_end":91,"column_start":35,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/formatting/formattable.rs","byte_start":161055,"byte_end":161062,"line_start":108,"line_end":108,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/formatting/formattable.rs","byte_start":163019,"byte_end":163026,"line_start":157,"line_end":157,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":167840,"byte_end":167847,"line_start":34,"line_end":34,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":170764,"byte_end":170771,"line_start":118,"line_end":118,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":170871,"byte_end":170881,"line_start":124,"line_end":124,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":958}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":170964,"byte_end":170971,"line_start":130,"line_end":130,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":960},{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":171507,"byte_end":171514,"line_start":145,"line_end":145,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":963},{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":171658,"byte_end":171668,"line_start":153,"line_end":153,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":966},{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":171813,"byte_end":171820,"line_start":161,"line_end":161,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":969},{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":172150,"byte_end":172160,"line_start":175,"line_end":175,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":972},{"krate":0,"index":973}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":172315,"byte_end":172322,"line_start":183,"line_end":183,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":975},{"krate":0,"index":976}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":172563,"byte_end":172570,"line_start":194,"line_end":194,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":978},{"krate":0,"index":979}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":172900,"byte_end":172910,"line_start":208,"line_end":208,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":981},{"krate":0,"index":982}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":173065,"byte_end":173072,"line_start":216,"line_end":216,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":984},{"krate":0,"index":985}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":173321,"byte_end":173328,"line_start":227,"line_end":227,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":987}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":173436,"byte_end":173446,"line_start":233,"line_end":233,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":989}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":173556,"byte_end":173563,"line_start":239,"line_end":239,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":173702,"byte_end":173712,"line_start":245,"line_end":245,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":173847,"byte_end":173854,"line_start":251,"line_end":251,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":173948,"byte_end":173955,"line_start":257,"line_end":257,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":997}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/month.rs","byte_start":174598,"byte_end":174603,"line_start":30,"line_end":30,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/month.rs","byte_start":176582,"byte_end":176587,"line_start":103,"line_end":103,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/month.rs","byte_start":177111,"byte_end":177116,"line_start":122,"line_end":122,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1022},{"krate":0,"index":1023}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/month.rs","byte_start":177841,"byte_end":177846,"line_start":150,"line_end":150,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1027},{"krate":0,"index":1028}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":179661,"byte_end":179675,"line_start":40,"line_end":40,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1130}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":206643,"byte_end":206657,"line_start":807,"line_end":807,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1136},{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1144}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":216408,"byte_end":216422,"line_start":1073,"line_end":1073,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1146},{"krate":0,"index":1149}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":219254,"byte_end":219268,"line_start":1148,"line_end":1148,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":219488,"byte_end":219502,"line_start":1156,"line_end":1156,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":219621,"byte_end":219635,"line_start":1162,"line_end":1162,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1156}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":219748,"byte_end":219762,"line_start":1168,"line_end":1168,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1158}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":219881,"byte_end":219895,"line_start":1174,"line_end":1174,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1160}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":220154,"byte_end":220168,"line_start":1182,"line_end":1182,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1164},{"krate":0,"index":1165}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":220486,"byte_end":220500,"line_start":1197,"line_end":1197,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1168},{"krate":0,"index":1169}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":220812,"byte_end":220826,"line_start":1212,"line_end":1212,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1171},{"krate":0,"index":1172}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":221005,"byte_end":221015,"line_start":1221,"line_end":1221,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1174},{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":221465,"byte_end":221475,"line_start":1239,"line_end":1239,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1177},{"krate":0,"index":1178}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":221736,"byte_end":221750,"line_start":1250,"line_end":1250,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1180},{"krate":0,"index":1181}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":221927,"byte_end":221937,"line_start":1259,"line_end":1259,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1183},{"krate":0,"index":1184}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":222130,"byte_end":222144,"line_start":1268,"line_end":1268,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1186}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":222294,"byte_end":222304,"line_start":1275,"line_end":1275,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":222465,"byte_end":222479,"line_start":1282,"line_end":1282,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1190}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":222665,"byte_end":222675,"line_start":1289,"line_end":1289,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1192}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":222864,"byte_end":222878,"line_start":1296,"line_end":1296,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1194}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":223250,"byte_end":223260,"line_start":1307,"line_end":1307,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1196}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":224394,"byte_end":224411,"line_start":24,"line_end":24,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1262},{"krate":0,"index":1263},{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":243098,"byte_end":243115,"line_start":583,"line_end":583,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1289},{"krate":0,"index":1290}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":250695,"byte_end":250712,"line_start":772,"line_end":772,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1292},{"krate":0,"index":1293}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":252197,"byte_end":252214,"line_start":811,"line_end":811,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1295},{"krate":0,"index":1298}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":253996,"byte_end":254013,"line_start":861,"line_end":861,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1301}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":254217,"byte_end":254234,"line_start":869,"line_end":869,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1303},{"krate":0,"index":1304}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":254442,"byte_end":254459,"line_start":878,"line_end":878,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1306},{"krate":0,"index":1307}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":254997,"byte_end":255014,"line_start":899,"line_end":899,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1309},{"krate":0,"index":1310}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":255222,"byte_end":255239,"line_start":908,"line_end":908,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1312},{"krate":0,"index":1313}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":255779,"byte_end":255796,"line_start":929,"line_end":929,"column_start":14,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1315},{"krate":0,"index":1316}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":262358,"byte_end":262362,"line_start":45,"line_end":45,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1380}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":262671,"byte_end":262675,"line_start":56,"line_end":56,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1382},{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1386},{"krate":0,"index":1387},{"krate":0,"index":1388},{"krate":0,"index":1389},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1402},{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1406},{"krate":0,"index":1407},{"krate":0,"index":1408},{"krate":0,"index":1409}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":281203,"byte_end":281207,"line_start":589,"line_end":589,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1411},{"krate":0,"index":1414}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":282719,"byte_end":282723,"line_start":634,"line_end":634,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1417}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":283747,"byte_end":283751,"line_start":661,"line_end":661,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1419},{"krate":0,"index":1420}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":284217,"byte_end":284221,"line_start":676,"line_end":676,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1422},{"krate":0,"index":1423}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":284758,"byte_end":284762,"line_start":693,"line_end":693,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1425},{"krate":0,"index":1426}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":285235,"byte_end":285239,"line_start":708,"line_end":708,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1428},{"krate":0,"index":1429}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":285773,"byte_end":285777,"line_start":725,"line_end":725,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1431},{"krate":0,"index":1432}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":287801,"byte_end":287810,"line_start":33,"line_end":33,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1459},{"krate":0,"index":1460},{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1463},{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1470}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":295663,"byte_end":295672,"line_start":259,"line_end":259,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1472},{"krate":0,"index":1475}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":297205,"byte_end":297214,"line_start":301,"line_end":301,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1478}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":297561,"byte_end":297570,"line_start":315,"line_end":315,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1480},{"krate":0,"index":1481}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":301162,"byte_end":301169,"line_start":32,"line_end":32,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1514},{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1519}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":303458,"byte_end":303465,"line_start":119,"line_end":119,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1521}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":303841,"byte_end":303848,"line_start":133,"line_end":133,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1523},{"krate":0,"index":1524}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":9676,"byte_end":9681,"line_start":284,"line_end":284,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":326}},{"kind":"Mod","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":9691,"byte_end":9694,"line_start":285,"line_end":285,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":491}},{"kind":"Mod","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":9761,"byte_end":9779,"line_start":287,"line_end":287,"column_start":9,"column_end":27},"ref_id":{"krate":0,"index":557}},{"kind":"Mod","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":107529,"byte_end":107537,"line_start":9,"line_end":9,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":604}},{"kind":"Mod","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":9820,"byte_end":9830,"line_start":289,"line_end":289,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":699}},{"kind":"Mod","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/lib.rs","byte_start":10450,"byte_end":10454,"line_start":314,"line_end":314,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1482}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":12587,"byte_end":12591,"line_start":45,"line_end":45,"column_start":21,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1557},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":12823,"byte_end":12827,"line_start":54,"line_end":54,"column_start":6,"column_end":10},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1557},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":40155,"byte_end":40159,"line_start":810,"line_end":810,"column_start":6,"column_end":10},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1557},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":43646,"byte_end":43650,"line_start":918,"line_end":918,"column_start":6,"column_end":10},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1557},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":45139,"byte_end":45143,"line_start":960,"line_end":960,"column_start":23,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1557},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":45823,"byte_end":45827,"line_start":985,"line_end":985,"column_start":24,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1557},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":46036,"byte_end":46040,"line_start":994,"line_end":994,"column_start":27,"column_end":31},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1557},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":46353,"byte_end":46357,"line_start":1005,"line_end":1005,"column_start":24,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1557},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":46573,"byte_end":46577,"line_start":1014,"line_end":1014,"column_start":27,"column_end":31},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1557},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/date.rs","byte_start":46887,"byte_end":46891,"line_start":1025,"line_end":1025,"column_start":14,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1557},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":47734,"byte_end":47741,"line_start":23,"line_end":23,"column_start":18,"column_end":25},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1584},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":48453,"byte_end":48461,"line_start":45,"line_end":45,"column_start":21,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1605},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":48696,"byte_end":48704,"line_start":54,"line_end":54,"column_start":6,"column_end":14},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1605},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":74197,"byte_end":74205,"line_start":747,"line_end":747,"column_start":23,"column_end":31},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1605},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":75169,"byte_end":75177,"line_start":781,"line_end":781,"column_start":31,"column_end":39},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1605},"to":{"krate":2,"index":2932}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":75545,"byte_end":75556,"line_start":795,"line_end":795,"column_start":28,"column_end":39},"kind":{"Impl":{"id":19}},"from":{"krate":2,"index":47686},"to":{"krate":2,"index":2932}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":75996,"byte_end":76004,"line_start":812,"line_end":812,"column_start":14,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1605},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":76197,"byte_end":76205,"line_start":821,"line_end":821,"column_start":27,"column_end":35},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1605},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":76456,"byte_end":76467,"line_start":830,"line_end":830,"column_start":24,"column_end":35},"kind":{"Impl":{"id":22}},"from":{"krate":2,"index":47686},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":76654,"byte_end":76665,"line_start":840,"line_end":840,"column_start":30,"column_end":41},"kind":{"Impl":{"id":25}},"from":{"krate":2,"index":47686},"to":{"krate":2,"index":3117}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":76924,"byte_end":76932,"line_start":849,"line_end":849,"column_start":14,"column_end":22},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1605},"to":{"krate":2,"index":3113}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":77079,"byte_end":77087,"line_start":857,"line_end":857,"column_start":14,"column_end":22},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1605},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":77285,"byte_end":77293,"line_start":866,"line_end":866,"column_start":27,"column_end":35},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1605},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":77526,"byte_end":77537,"line_start":875,"line_end":875,"column_start":24,"column_end":35},"kind":{"Impl":{"id":29}},"from":{"krate":2,"index":47686},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":77841,"byte_end":77852,"line_start":887,"line_end":887,"column_start":30,"column_end":41},"kind":{"Impl":{"id":32}},"from":{"krate":2,"index":47686},"to":{"krate":2,"index":3121}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":79108,"byte_end":79116,"line_start":930,"line_end":930,"column_start":19,"column_end":27},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1605},"to":{"krate":2,"index":3096}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":79407,"byte_end":79415,"line_start":946,"line_end":946,"column_start":19,"column_end":27},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1605},"to":{"krate":2,"index":3096}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":79773,"byte_end":79781,"line_start":964,"line_end":964,"column_start":19,"column_end":27},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1605},"to":{"krate":2,"index":3101}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":79936,"byte_end":79944,"line_start":972,"line_end":972,"column_start":19,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1605},"to":{"krate":2,"index":3101}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":80161,"byte_end":80169,"line_start":982,"line_end":982,"column_start":14,"column_end":22},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1605},"to":{"krate":2,"index":3101}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":80330,"byte_end":80338,"line_start":990,"line_end":990,"column_start":27,"column_end":35},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1605},"to":{"krate":2,"index":3101}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":80500,"byte_end":80511,"line_start":998,"line_end":998,"column_start":24,"column_end":35},"kind":{"Impl":{"id":63}},"from":{"krate":2,"index":47686},"to":{"krate":2,"index":3101}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":80679,"byte_end":80687,"line_start":1006,"line_end":1006,"column_start":33,"column_end":41},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1605},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":80816,"byte_end":80827,"line_start":1012,"line_end":1012,"column_start":30,"column_end":41},"kind":{"Impl":{"id":65}},"from":{"krate":2,"index":47686},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":80935,"byte_end":80943,"line_start":1018,"line_end":1018,"column_start":34,"column_end":42},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1605},"to":{"krate":2,"index":2717}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":81321,"byte_end":81332,"line_start":1032,"line_end":1032,"column_start":31,"column_end":42},"kind":{"Impl":{"id":67}},"from":{"krate":2,"index":47686},"to":{"krate":2,"index":2717}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":81474,"byte_end":81482,"line_start":1038,"line_end":1038,"column_start":14,"column_end":22},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1605},"to":{"krate":2,"index":7592}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/duration.rs","byte_start":81631,"byte_end":81639,"line_start":1044,"line_end":1044,"column_start":28,"column_end":36},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1605},"to":{"krate":2,"index":7592}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/component_range.rs","byte_start":86846,"byte_end":86860,"line_start":26,"line_end":26,"column_start":6,"column_end":20},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/component_range.rs","byte_start":87292,"byte_end":87306,"line_start":39,"line_end":39,"column_start":23,"column_end":37},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1722},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/component_range.rs","byte_start":87685,"byte_end":87690,"line_start":55,"line_end":55,"column_start":38,"column_end":43},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1828},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/component_range.rs","byte_start":87820,"byte_end":87834,"line_start":61,"line_end":61,"column_start":32,"column_end":46},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1722},"to":{"krate":2,"index":2932}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/component_range.rs","byte_start":88759,"byte_end":88773,"line_start":93,"line_end":93,"column_start":28,"column_end":42},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1722},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/conversion_range.rs","byte_start":89082,"byte_end":89097,"line_start":13,"line_end":13,"column_start":23,"column_end":38},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1743},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/conversion_range.rs","byte_start":89295,"byte_end":89310,"line_start":20,"line_end":20,"column_start":28,"column_end":43},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1743},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/conversion_range.rs","byte_start":89353,"byte_end":89358,"line_start":22,"line_end":22,"column_start":39,"column_end":44},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1828},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/conversion_range.rs","byte_start":89480,"byte_end":89495,"line_start":28,"line_end":28,"column_start":32,"column_end":47},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1743},"to":{"krate":2,"index":2932}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/different_variant.rs","byte_start":90065,"byte_end":90081,"line_start":11,"line_end":11,"column_start":23,"column_end":39},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1756},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/different_variant.rs","byte_start":90275,"byte_end":90291,"line_start":18,"line_end":18,"column_start":28,"column_end":44},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1756},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/different_variant.rs","byte_start":90335,"byte_end":90340,"line_start":20,"line_end":20,"column_start":40,"column_end":45},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1828},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/different_variant.rs","byte_start":90464,"byte_end":90480,"line_start":26,"line_end":26,"column_start":32,"column_end":48},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1756},"to":{"krate":2,"index":2932}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/format.rs","byte_start":91464,"byte_end":91470,"line_start":26,"line_end":26,"column_start":23,"column_end":29},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1769},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/format.rs","byte_start":92048,"byte_end":92054,"line_start":43,"line_end":43,"column_start":26,"column_end":32},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1769},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/format.rs","byte_start":92158,"byte_end":92163,"line_start":49,"line_end":49,"column_start":30,"column_end":35},"kind":{"Impl":{"id":85}},"from":{"krate":1,"index":3816},"to":{"krate":2,"index":2932}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/format.rs","byte_start":92449,"byte_end":92455,"line_start":61,"line_end":61,"column_start":28,"column_end":34},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1769},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/format.rs","byte_start":92789,"byte_end":92794,"line_start":71,"line_end":71,"column_start":30,"column_end":35},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1828},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/format.rs","byte_start":92970,"byte_end":92976,"line_start":78,"line_end":78,"column_start":32,"column_end":38},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1769},"to":{"krate":2,"index":2932}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/indeterminate_offset.rs","byte_start":93878,"byte_end":93897,"line_start":13,"line_end":13,"column_start":23,"column_end":42},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1780},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/indeterminate_offset.rs","byte_start":94094,"byte_end":94113,"line_start":20,"line_end":20,"column_start":28,"column_end":47},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1780},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/indeterminate_offset.rs","byte_start":94224,"byte_end":94229,"line_start":23,"line_end":23,"column_start":43,"column_end":48},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1828},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/indeterminate_offset.rs","byte_start":94414,"byte_end":94433,"line_start":30,"line_end":30,"column_start":32,"column_end":51},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1780},"to":{"krate":2,"index":2932}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/invalid_format_description.rs","byte_start":96130,"byte_end":96135,"line_start":51,"line_end":51,"column_start":48,"column_end":53},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1828},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/invalid_format_description.rs","byte_start":96407,"byte_end":96431,"line_start":61,"line_end":61,"column_start":32,"column_end":56},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1793},"to":{"krate":2,"index":2932}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/invalid_format_description.rs","byte_start":96719,"byte_end":96743,"line_start":72,"line_end":72,"column_start":23,"column_end":47},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1793},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/invalid_format_description.rs","byte_start":97553,"byte_end":97577,"line_start":95,"line_end":95,"column_start":28,"column_end":52},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1793},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/invalid_variant.rs","byte_start":97875,"byte_end":97889,"line_start":11,"line_end":11,"column_start":23,"column_end":37},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1815},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/invalid_variant.rs","byte_start":98066,"byte_end":98080,"line_start":18,"line_end":18,"column_start":28,"column_end":42},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1815},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/invalid_variant.rs","byte_start":98122,"byte_end":98127,"line_start":20,"line_end":20,"column_start":38,"column_end":43},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1828},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/invalid_variant.rs","byte_start":98247,"byte_end":98261,"line_start":26,"line_end":26,"column_start":32,"column_end":46},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1815},"to":{"krate":2,"index":2932}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/mod.rs","byte_start":84083,"byte_end":84088,"line_start":67,"line_end":67,"column_start":23,"column_end":28},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1828},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/error/mod.rs","byte_start":85099,"byte_end":85104,"line_start":91,"line_end":91,"column_start":28,"column_end":33},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1828},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":100597,"byte_end":100603,"line_start":60,"line_end":60,"column_start":38,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":499},"to":{"krate":0,"index":503}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/ext.rs","byte_start":104255,"byte_end":104261,"line_start":185,"line_end":185,"column_start":41,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":499},"to":{"krate":0,"index":530}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/component.rs","byte_start":115437,"byte_end":115451,"line_start":78,"line_end":78,"column_start":6,"column_end":20},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":572},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/modifier.rs","byte_start":132905,"byte_end":132914,"line_start":385,"line_end":385,"column_start":6,"column_end":15},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2310},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":111305,"byte_end":111315,"line_start":118,"line_end":118,"column_start":21,"column_end":31},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2360},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":111847,"byte_end":111857,"line_start":130,"line_end":130,"column_start":26,"column_end":36},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2360},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":111985,"byte_end":111994,"line_start":136,"line_end":136,"column_start":34,"column_end":43},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1852},"to":{"krate":2,"index":2932}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":112301,"byte_end":112311,"line_start":147,"line_end":147,"column_start":41,"column_end":51},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2360},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":112766,"byte_end":112776,"line_start":164,"line_end":164,"column_start":31,"column_end":41},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":2360},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":112948,"byte_end":112957,"line_start":170,"line_end":170,"column_start":36,"column_end":45},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1852},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/format_description/mod.rs","byte_start":113076,"byte_end":113086,"line_start":176,"line_end":176,"column_start":39,"column_end":49},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":2360},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/formatting/formattable.rs","byte_start":158105,"byte_end":158111,"line_start":15,"line_end":15,"column_start":32,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":755},"to":{"krate":0,"index":746}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/formatting/formattable.rs","byte_start":158136,"byte_end":158146,"line_start":16,"line_end":16,"column_start":22,"column_end":32},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2360},"to":{"krate":0,"index":746}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/formatting/formattable.rs","byte_start":158216,"byte_end":158223,"line_start":18,"line_end":18,"column_start":22,"column_end":29},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2334},"to":{"krate":0,"index":746}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/formatting/formattable.rs","byte_start":158248,"byte_end":158255,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2347},"to":{"krate":0,"index":746}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/formatting/formattable.rs","byte_start":158290,"byte_end":158291,"line_start":20,"line_end":20,"column_start":32,"column_end":33},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":752},"to":{"krate":0,"index":746}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/formatting/formattable.rs","byte_start":159448,"byte_end":159458,"line_start":54,"line_end":54,"column_start":29,"column_end":39},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":2360},"to":{"krate":0,"index":755}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/formatting/formattable.rs","byte_start":160659,"byte_end":160660,"line_start":91,"line_end":91,"column_start":35,"column_end":36},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":768},"to":{"krate":0,"index":755}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/formatting/formattable.rs","byte_start":161055,"byte_end":161062,"line_start":108,"line_end":108,"column_start":25,"column_end":32},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":2347},"to":{"krate":0,"index":755}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/formatting/formattable.rs","byte_start":163019,"byte_end":163026,"line_start":157,"line_end":157,"column_start":25,"column_end":32},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":2334},"to":{"krate":0,"index":755}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":167840,"byte_end":167847,"line_start":34,"line_end":34,"column_start":6,"column_end":13},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2391},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":170764,"byte_end":170771,"line_start":118,"line_end":118,"column_start":27,"column_end":34},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":2391},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":170871,"byte_end":170881,"line_start":124,"line_end":124,"column_start":24,"column_end":34},"kind":{"Impl":{"id":172}},"from":{"krate":1,"index":11837},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":170964,"byte_end":170971,"line_start":130,"line_end":130,"column_start":14,"column_end":21},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":2391},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":171507,"byte_end":171514,"line_start":145,"line_end":145,"column_start":26,"column_end":33},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":2391},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":171658,"byte_end":171668,"line_start":153,"line_end":153,"column_start":23,"column_end":33},"kind":{"Impl":{"id":175}},"from":{"krate":1,"index":11837},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":171813,"byte_end":171820,"line_start":161,"line_end":161,"column_start":24,"column_end":31},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":2391},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":172150,"byte_end":172160,"line_start":175,"line_end":175,"column_start":24,"column_end":34},"kind":{"Impl":{"id":177}},"from":{"krate":1,"index":11837},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":172315,"byte_end":172322,"line_start":183,"line_end":183,"column_start":27,"column_end":34},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":2391},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":172563,"byte_end":172570,"line_start":194,"line_end":194,"column_start":24,"column_end":31},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":2391},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":172900,"byte_end":172910,"line_start":208,"line_end":208,"column_start":24,"column_end":34},"kind":{"Impl":{"id":183}},"from":{"krate":1,"index":11837},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":173065,"byte_end":173072,"line_start":216,"line_end":216,"column_start":27,"column_end":34},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":2391},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":173321,"byte_end":173328,"line_start":227,"line_end":227,"column_start":32,"column_end":39},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":2391},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":173436,"byte_end":173446,"line_start":233,"line_end":233,"column_start":29,"column_end":39},"kind":{"Impl":{"id":189}},"from":{"krate":1,"index":11837},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":173556,"byte_end":173563,"line_start":239,"line_end":239,"column_start":33,"column_end":40},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":2391},"to":{"krate":2,"index":2717}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":173702,"byte_end":173712,"line_start":245,"line_end":245,"column_start":30,"column_end":40},"kind":{"Impl":{"id":191}},"from":{"krate":1,"index":11837},"to":{"krate":2,"index":2717}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":173847,"byte_end":173854,"line_start":251,"line_end":251,"column_start":28,"column_end":35},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":2391},"to":{"krate":2,"index":2916}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/instant.rs","byte_start":173948,"byte_end":173955,"line_start":257,"line_end":257,"column_start":29,"column_end":36},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":2391},"to":{"krate":2,"index":2618}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/month.rs","byte_start":174598,"byte_end":174603,"line_start":30,"line_end":30,"column_start":6,"column_end":11},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":2425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/month.rs","byte_start":176582,"byte_end":176587,"line_start":103,"line_end":103,"column_start":23,"column_end":28},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":2425},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/month.rs","byte_start":177111,"byte_end":177116,"line_start":122,"line_end":122,"column_start":18,"column_end":23},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":2425},"to":{"krate":2,"index":12144}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/month.rs","byte_start":177841,"byte_end":177846,"line_start":150,"line_end":150,"column_start":22,"column_end":27},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":2425},"to":{"krate":2,"index":2932}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":179661,"byte_end":179675,"line_start":40,"line_end":40,"column_start":6,"column_end":20},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":2476},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":206643,"byte_end":206657,"line_start":807,"line_end":807,"column_start":6,"column_end":20},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":2476},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":216408,"byte_end":216422,"line_start":1073,"line_end":1073,"column_start":6,"column_end":20},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":2476},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":219254,"byte_end":219268,"line_start":1148,"line_end":1148,"column_start":23,"column_end":37},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":2476},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":219488,"byte_end":219502,"line_start":1156,"line_end":1156,"column_start":20,"column_end":34},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":2476},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":219621,"byte_end":219635,"line_start":1162,"line_end":1162,"column_start":21,"column_end":35},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":2476},"to":{"krate":2,"index":2717}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":219748,"byte_end":219762,"line_start":1168,"line_end":1168,"column_start":14,"column_end":28},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":2476},"to":{"krate":2,"index":2706}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":219881,"byte_end":219895,"line_start":1174,"line_end":1174,"column_start":15,"column_end":29},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":2476},"to":{"krate":2,"index":9760}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":220154,"byte_end":220168,"line_start":1182,"line_end":1182,"column_start":20,"column_end":34},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":2476},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":220486,"byte_end":220500,"line_start":1197,"line_end":1197,"column_start":20,"column_end":34},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":2476},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":220812,"byte_end":220826,"line_start":1212,"line_end":1212,"column_start":14,"column_end":28},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":2476},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":221005,"byte_end":221015,"line_start":1221,"line_end":1221,"column_start":24,"column_end":34},"kind":{"Impl":{"id":214}},"from":{"krate":1,"index":11857},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":221465,"byte_end":221475,"line_start":1239,"line_end":1239,"column_start":24,"column_end":34},"kind":{"Impl":{"id":216}},"from":{"krate":1,"index":11857},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":221736,"byte_end":221750,"line_start":1250,"line_end":1250,"column_start":26,"column_end":40},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":2476},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":221927,"byte_end":221937,"line_start":1259,"line_end":1259,"column_start":30,"column_end":40},"kind":{"Impl":{"id":219}},"from":{"krate":1,"index":11857},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":222130,"byte_end":222144,"line_start":1268,"line_end":1268,"column_start":32,"column_end":46},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":2476},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":222294,"byte_end":222304,"line_start":1275,"line_end":1275,"column_start":36,"column_end":46},"kind":{"Impl":{"id":221}},"from":{"krate":1,"index":11857},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":222465,"byte_end":222479,"line_start":1282,"line_end":1282,"column_start":33,"column_end":47},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":2476},"to":{"krate":2,"index":2717}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":222665,"byte_end":222675,"line_start":1289,"line_end":1289,"column_start":37,"column_end":47},"kind":{"Impl":{"id":223}},"from":{"krate":1,"index":11857},"to":{"krate":2,"index":2717}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":222864,"byte_end":222878,"line_start":1296,"line_end":1296,"column_start":27,"column_end":41},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":2476},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/offset_date_time.rs","byte_start":223250,"byte_end":223260,"line_start":1307,"line_end":1307,"column_start":31,"column_end":41},"kind":{"Impl":{"id":225}},"from":{"krate":1,"index":11857},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":224394,"byte_end":224411,"line_start":24,"line_end":24,"column_start":6,"column_end":23},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":2499},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":243098,"byte_end":243115,"line_start":583,"line_end":583,"column_start":6,"column_end":23},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":2499},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":250695,"byte_end":250712,"line_start":772,"line_end":772,"column_start":6,"column_end":23},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":2499},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":252197,"byte_end":252214,"line_start":811,"line_end":811,"column_start":6,"column_end":23},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":2499},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":253996,"byte_end":254013,"line_start":861,"line_end":861,"column_start":23,"column_end":40},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":2499},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":254217,"byte_end":254234,"line_start":869,"line_end":869,"column_start":24,"column_end":41},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":2499},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":254442,"byte_end":254459,"line_start":878,"line_end":878,"column_start":27,"column_end":44},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":2499},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":254997,"byte_end":255014,"line_start":899,"line_end":899,"column_start":24,"column_end":41},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":2499},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":255222,"byte_end":255239,"line_start":908,"line_end":908,"column_start":27,"column_end":44},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":2499},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/primitive_date_time.rs","byte_start":255779,"byte_end":255796,"line_start":929,"line_end":929,"column_start":14,"column_end":31},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":2499},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":262358,"byte_end":262362,"line_start":45,"line_end":45,"column_start":21,"column_end":25},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":2548},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":262671,"byte_end":262675,"line_start":56,"line_end":56,"column_start":6,"column_end":10},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":2548},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":281203,"byte_end":281207,"line_start":589,"line_end":589,"column_start":6,"column_end":10},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":2548},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":282719,"byte_end":282723,"line_start":634,"line_end":634,"column_start":23,"column_end":27},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":2548},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":283747,"byte_end":283751,"line_start":661,"line_end":661,"column_start":24,"column_end":28},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":2548},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":284217,"byte_end":284221,"line_start":676,"line_end":676,"column_start":27,"column_end":31},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":2548},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":284758,"byte_end":284762,"line_start":693,"line_end":693,"column_start":24,"column_end":28},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":2548},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":285235,"byte_end":285239,"line_start":708,"line_end":708,"column_start":27,"column_end":31},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":2548},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/time.rs","byte_start":285773,"byte_end":285777,"line_start":725,"line_end":725,"column_start":14,"column_end":18},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":2548},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":287801,"byte_end":287810,"line_start":33,"line_end":33,"column_start":6,"column_end":15},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":2579},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":295663,"byte_end":295672,"line_start":259,"line_end":259,"column_start":6,"column_end":15},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":2579},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":297205,"byte_end":297214,"line_start":301,"line_end":301,"column_start":23,"column_end":32},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":2579},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/utc_offset.rs","byte_start":297561,"byte_end":297570,"line_start":315,"line_end":315,"column_start":14,"column_end":23},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":2579},"to":{"krate":2,"index":3113}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":301162,"byte_end":301169,"line_start":32,"line_end":32,"column_start":6,"column_end":13},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":2602},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":303458,"byte_end":303465,"line_start":119,"line_end":119,"column_start":18,"column_end":25},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":2602},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.9/src/weekday.rs","byte_start":303841,"byte_end":303848,"line_start":133,"line_end":133,"column_start":18,"column_end":25},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":2602},"to":{"krate":2,"index":12144}}]}