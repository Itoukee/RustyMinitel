{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13","program":"/home/matheo/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","signal_hook","--edition=2018","/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","--json=diagnostic-rendered-ansi,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"channel\"","--cfg","feature=\"default\"","--cfg","feature=\"iterator\"","-C","metadata=1476a8c15d3d2eba","-C","extra-filename=-1476a8c15d3d2eba","--out-dir","/home/matheo/Bureau/RustyMinitel/rustyminitel/target/rls/debug/deps","-L","dependency=/home/matheo/Bureau/RustyMinitel/rustyminitel/target/rls/debug/deps","--extern","libc=/home/matheo/Bureau/RustyMinitel/rustyminitel/target/rls/debug/deps/liblibc-d750c14aa193b6fb.rmeta","--extern","signal_hook_registry=/home/matheo/Bureau/RustyMinitel/rustyminitel/target/rls/debug/deps/libsignal_hook_registry-3a36533877558551.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/matheo/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/matheo/Bureau/RustyMinitel/rustyminitel/target/rls/debug/deps/libsignal_hook-1476a8c15d3d2eba.rmeta"},"prelude":{"crate_id":{"name":"signal_hook","disambiguator":[11360340701742729477,0]},"crate_root":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src","external_crates":[{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14026078687029744792,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5443730852259234579,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4162025702538114948,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17612152343462746361,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5560808256873132085,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[135160560163186024,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5800521777261530329,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7095478770525139037,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17225897750877482818,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15613653607383163471,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[12428323400248712701,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[11893279639181573711,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[13583305032161054644,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16609837797022023111,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[18098459435141129808,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[15244551393771456017,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[6576340271055396708,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[15284510821186066958,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12982807908830018159,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","num":20,"id":{"name":"libc","disambiguator":[4287381645232922677,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/mod.rs","num":21,"id":{"name":"signal_hook_registry","disambiguator":[7763098606571078555,0]}}],"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":0,"byte_end":20429,"line_start":1,"line_end":405,"column_start":1,"column_end":37}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":659},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":61048,"byte_end":61062,"line_start":21,"line_end":21,"column_start":14,"column_end":28},"alias_span":null,"name":"WithRawSiginfo","value":"","parent":{"krate":0,"index":201}},{"kind":"Use","ref_id":{"krate":0,"index":660},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":61048,"byte_end":61062,"line_start":21,"line_end":21,"column_start":14,"column_end":28},"alias_span":null,"name":"WithRawSiginfo","value":"","parent":{"krate":0,"index":201}},{"kind":"Use","ref_id":{"krate":0,"index":627},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":33803,"byte_end":33809,"line_start":70,"line_end":70,"column_start":25,"column_end":31},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":0,"index":645},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":33811,"byte_end":33818,"line_start":70,"line_end":70,"column_start":33,"column_end":40},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":21,"index":177},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/mod.rs","byte_start":70851,"byte_end":70859,"line_start":20,"line_end":20,"column_start":32,"column_end":40},"alias_span":null,"name":"register","value":"","parent":{"krate":0,"index":373}},{"kind":"Use","ref_id":{"krate":21,"index":191},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/mod.rs","byte_start":70861,"byte_end":70871,"line_start":20,"line_end":20,"column_start":42,"column_end":52},"alias_span":null,"name":"unregister","value":"","parent":{"krate":0,"index":373}},{"kind":"Use","ref_id":{"krate":0,"index":499},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/mod.rs","byte_start":70906,"byte_end":70929,"line_start":22,"line_end":22,"column_start":32,"column_end":55},"alias_span":null,"name":"emulate_default_handler","value":"","parent":{"krate":0,"index":373}},{"kind":"Use","ref_id":{"krate":0,"index":495},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/mod.rs","byte_start":70931,"byte_end":70942,"line_start":22,"line_end":22,"column_start":57,"column_end":68},"alias_span":null,"name":"signal_name","value":"","parent":{"krate":0,"index":373}},{"kind":"Use","ref_id":{"krate":20,"index":740},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":19175,"byte_end":19182,"line_start":372,"line_end":372,"column_start":13,"column_end":20},"alias_span":null,"name":"SIGABRT","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":20,"index":745},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":19184,"byte_end":19191,"line_start":372,"line_end":372,"column_start":22,"column_end":29},"alias_span":null,"name":"SIGALRM","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":20,"index":5671},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":19193,"byte_end":19199,"line_start":372,"line_end":372,"column_start":31,"column_end":37},"alias_span":null,"name":"SIGBUS","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":20,"index":5670},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":19201,"byte_end":19208,"line_start":372,"line_end":372,"column_start":39,"column_end":46},"alias_span":null,"name":"SIGCHLD","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":20,"index":5674},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":19210,"byte_end":19217,"line_start":372,"line_end":372,"column_start":48,"column_end":55},"alias_span":null,"name":"SIGCONT","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":20,"index":741},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":19219,"byte_end":19225,"line_start":372,"line_end":372,"column_start":57,"column_end":63},"alias_span":null,"name":"SIGFPE","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":20,"index":736},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":19227,"byte_end":19233,"line_start":372,"line_end":372,"column_start":65,"column_end":71},"alias_span":null,"name":"SIGHUP","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":20,"index":739},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":19235,"byte_end":19241,"line_start":372,"line_end":372,"column_start":73,"column_end":79},"alias_span":null,"name":"SIGILL","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":20,"index":737},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":19243,"byte_end":19249,"line_start":372,"line_end":372,"column_start":81,"column_end":87},"alias_span":null,"name":"SIGINT","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":20,"index":742},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":19251,"byte_end":19258,"line_start":372,"line_end":372,"column_start":89,"column_end":96},"alias_span":null,"name":"SIGKILL","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":20,"index":744},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":19272,"byte_end":19279,"line_start":373,"line_end":373,"column_start":13,"column_end":20},"alias_span":null,"name":"SIGPIPE","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":20,"index":5668},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":19281,"byte_end":19288,"line_start":373,"line_end":373,"column_start":22,"column_end":29},"alias_span":null,"name":"SIGPROF","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":20,"index":738},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":19290,"byte_end":19297,"line_start":373,"line_end":373,"column_start":31,"column_end":38},"alias_span":null,"name":"SIGQUIT","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":20,"index":743},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":19299,"byte_end":19306,"line_start":373,"line_end":373,"column_start":40,"column_end":47},"alias_span":null,"name":"SIGSEGV","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":20,"index":5675},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":19308,"byte_end":19315,"line_start":373,"line_end":373,"column_start":49,"column_end":56},"alias_span":null,"name":"SIGSTOP","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":20,"index":5679},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":19317,"byte_end":19323,"line_start":373,"line_end":373,"column_start":58,"column_end":64},"alias_span":null,"name":"SIGSYS","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":20,"index":746},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":19325,"byte_end":19332,"line_start":373,"line_end":373,"column_start":66,"column_end":73},"alias_span":null,"name":"SIGTERM","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":20,"index":689},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":19334,"byte_end":19341,"line_start":373,"line_end":373,"column_start":75,"column_end":82},"alias_span":null,"name":"SIGTRAP","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":20,"index":5676},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":19343,"byte_end":19350,"line_start":373,"line_end":373,"column_start":84,"column_end":91},"alias_span":null,"name":"SIGTSTP","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":20,"index":5663},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":19364,"byte_end":19371,"line_start":374,"line_end":374,"column_start":13,"column_end":20},"alias_span":null,"name":"SIGTTIN","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":20,"index":5664},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":19373,"byte_end":19380,"line_start":374,"line_end":374,"column_start":22,"column_end":29},"alias_span":null,"name":"SIGTTOU","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":20,"index":5677},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":19382,"byte_end":19388,"line_start":374,"line_end":374,"column_start":31,"column_end":37},"alias_span":null,"name":"SIGURG","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":20,"index":5672},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":19390,"byte_end":19397,"line_start":374,"line_end":374,"column_start":39,"column_end":46},"alias_span":null,"name":"SIGUSR1","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":20,"index":5673},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":19399,"byte_end":19406,"line_start":374,"line_end":374,"column_start":48,"column_end":55},"alias_span":null,"name":"SIGUSR2","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":20,"index":5667},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":19408,"byte_end":19417,"line_start":374,"line_end":374,"column_start":57,"column_end":66},"alias_span":null,"name":"SIGVTALRM","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":20,"index":5669},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":19419,"byte_end":19427,"line_start":374,"line_end":374,"column_start":68,"column_end":76},"alias_span":null,"name":"SIGWINCH","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":20,"index":5665},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":19429,"byte_end":19436,"line_start":374,"line_end":374,"column_start":78,"column_end":85},"alias_span":null,"name":"SIGXCPU","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":20,"index":5666},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":19438,"byte_end":19445,"line_start":374,"line_end":374,"column_start":87,"column_end":94},"alias_span":null,"name":"SIGXFSZ","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":20,"index":5678},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":19536,"byte_end":19541,"line_start":378,"line_end":378,"column_start":23,"column_end":28},"alias_span":null,"name":"SIGIO","value":"","parent":{"krate":0,"index":525}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":20023,"byte_end":20024,"line_start":392,"line_end":392,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"SIGTERM, SIGQUIT, SIGINT","parent":{"krate":0,"index":521}},{"kind":"Use","ref_id":{"krate":21,"index":175},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":20061,"byte_end":20070,"line_start":394,"line_end":394,"column_start":35,"column_end":44},"alias_span":null,"name":"FORBIDDEN","value":"","parent":{"krate":0,"index":521}},{"kind":"Use","ref_id":{"krate":21,"index":215},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":20423,"byte_end":20428,"line_start":405,"line_end":405,"column_start":31,"column_end":36},"alias_span":null,"name":"SigId","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":0,"byte_end":20429,"line_start":1,"line_end":405,"column_start":1,"column_end":37},"name":"","qualname":"::","value":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":43},{"krate":0,"index":373},{"krate":0,"index":521},{"krate":0,"index":619}],"decl_id":null,"docs":" Library for easier and safe Unix signal handling","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":100,"byte_end":122,"line_start":5,"line_end":5,"column_start":1,"column_end":23}},{"value":"allow(unknown_lints, renamed_and_removed_lints,\n        intra_doc_link_resolution_failure, broken_intra_doc_links)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":180,"byte_end":308,"line_start":7,"line_end":12,"column_start":1,"column_end":3}},{"value":"/ Library for easier and safe Unix signal handling","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":429,"byte_end":481,"line_start":15,"line_end":15,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":482,"byte_end":485,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Unix signals are inherently hard to handle correctly, for several reasons:","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":486,"byte_end":564,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":565,"byte_end":568,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * They are a global resource. If a library wants to set its own signal handlers, it risks","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":569,"byte_end":662,"line_start":19,"line_end":19,"column_start":1,"column_end":94}},{"value":"/   disrupting some other library. It is possible to chain the previous signal handler, but then","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":663,"byte_end":761,"line_start":20,"line_end":20,"column_start":1,"column_end":99}},{"value":"/   it is impossible to remove the old signal handlers from the chains in any practical manner.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":762,"byte_end":859,"line_start":21,"line_end":21,"column_start":1,"column_end":98}},{"value":"/ * They can be called from whatever thread, requiring synchronization. Also, as they can","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":860,"byte_end":951,"line_start":22,"line_end":22,"column_start":1,"column_end":92}},{"value":"/   interrupt a thread at any time, making most handling race-prone.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":952,"byte_end":1022,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/ * According to the POSIX standard, the set of functions one may call inside a signal handler is","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":1023,"byte_end":1122,"line_start":24,"line_end":24,"column_start":1,"column_end":100}},{"value":"/   limited to very few of them. To highlight, mutexes (or other locking mechanisms) and memory","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":1123,"byte_end":1220,"line_start":25,"line_end":25,"column_start":1,"column_end":98}},{"value":"/   allocation and deallocation is *not* allowed.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":1221,"byte_end":1272,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":1273,"byte_end":1276,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # The goal of the library","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":1277,"byte_end":1306,"line_start":28,"line_end":28,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":1307,"byte_end":1310,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ The aim is to subscriptions to signals a „structured“ resource, in a similar way memory","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":1311,"byte_end":1406,"line_start":30,"line_end":30,"column_start":1,"column_end":92}},{"value":"/ allocation is ‒ parts of the program can independently subscribe and it's the same part of the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":1407,"byte_end":1507,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ program that can give them up, independently of what the other parts do. Therefore, it is","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":1508,"byte_end":1601,"line_start":32,"line_end":32,"column_start":1,"column_end":94}},{"value":"/ possible to register multiple actions to the same signal.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":1602,"byte_end":1663,"line_start":33,"line_end":33,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":1664,"byte_end":1667,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Another goal is to shield applications away from differences between platforms. Various Unix","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":1668,"byte_end":1764,"line_start":35,"line_end":35,"column_start":1,"column_end":97}},{"value":"/ systems have little quirks and differences that need to be worked around and that's not","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":1765,"byte_end":1856,"line_start":36,"line_end":36,"column_start":1,"column_end":92}},{"value":"/ something every application should be dealing with. We even try to provide some support for","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":1857,"byte_end":1952,"line_start":37,"line_end":37,"column_start":1,"column_end":96}},{"value":"/ Windows, but we lack the expertise in that area, so that one is not complete and is a bit rough","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":1953,"byte_end":2052,"line_start":38,"line_end":38,"column_start":1,"column_end":100}},{"value":"/ (if you know how it works there and are willing to either contribute the code or consult,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":2053,"byte_end":2146,"line_start":39,"line_end":39,"column_start":1,"column_end":94}},{"value":"/ please get in touch).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":2147,"byte_end":2172,"line_start":40,"line_end":40,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":2173,"byte_end":2176,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Furthermore, it provides implementation of certain common signal-handling patterns, usable from","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":2177,"byte_end":2276,"line_start":42,"line_end":42,"column_start":1,"column_end":100}},{"value":"/ safe Rust, without the application author needing to learn about *all* the traps.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":2277,"byte_end":2362,"line_start":43,"line_end":43,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":2363,"byte_end":2366,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Note that despite everything, there are still some quirks around signal handling that are not","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":2367,"byte_end":2464,"line_start":45,"line_end":45,"column_start":1,"column_end":98}},{"value":"/ possible to paper over and need to be considered. Also, there are some signal use cases that","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":2465,"byte_end":2561,"line_start":46,"line_end":46,"column_start":1,"column_end":97}},{"value":"/ are inherently unsafe and they are not covered by this crate.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":2562,"byte_end":2627,"line_start":47,"line_end":47,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":2628,"byte_end":2631,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Anatomy of the crate","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":2632,"byte_end":2658,"line_start":49,"line_end":49,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":2659,"byte_end":2662,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The crate is split into several modules.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":2663,"byte_end":2707,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":2708,"byte_end":2711,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ The easiest way to handle signals is using the [`Signals`][crate::iterator::Signals] iterator","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":2712,"byte_end":2809,"line_start":53,"line_end":53,"column_start":1,"column_end":98}},{"value":"/ thing. It can register for a set of signals and produce them one by one, in a blocking manner.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":2810,"byte_end":2908,"line_start":54,"line_end":54,"column_start":1,"column_end":99}},{"value":"/ You can reserve a thread for handling them as they come. If you want something asynchronous,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":2909,"byte_end":3005,"line_start":55,"line_end":55,"column_start":1,"column_end":97}},{"value":"/ there are adaptor crates for the most common asynchronous runtimes. The module also contains","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":3006,"byte_end":3102,"line_start":56,"line_end":56,"column_start":1,"column_end":97}},{"value":"/ ways to build iterators that produce a bit more information that just the signal number.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":3103,"byte_end":3195,"line_start":57,"line_end":57,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":3196,"byte_end":3199,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ The [`flag`] module contains routines to set a flag based on incoming signals and to do","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":3200,"byte_end":3291,"line_start":59,"line_end":59,"column_start":1,"column_end":92}},{"value":"/ certain actions inside the signal handlers based on the flags (the flags can also be","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":3292,"byte_end":3380,"line_start":60,"line_end":60,"column_start":1,"column_end":89}},{"value":"/ manipulated by the rest of the application). This allows building things like checking if a","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":3381,"byte_end":3476,"line_start":61,"line_end":61,"column_start":1,"column_end":96}},{"value":"/ signal happened on each loop iteration or making sure application shuts down on the second","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":3477,"byte_end":3571,"line_start":62,"line_end":62,"column_start":1,"column_end":95}},{"value":"/ CTRL+C if it got stuck in graceful shutdown requested by the first.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":3572,"byte_end":3643,"line_start":63,"line_end":63,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":3644,"byte_end":3647,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ The [`consts`] module contains some constants, most importantly the signal numbers themselves","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":3648,"byte_end":3745,"line_start":65,"line_end":65,"column_start":1,"column_end":98}},{"value":"/ (these are just re-exports from [`libc`] and if your OS has some extra ones, you can use them","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":3746,"byte_end":3843,"line_start":66,"line_end":66,"column_start":1,"column_end":98}},{"value":"/ too, this is just for convenience).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":3844,"byte_end":3883,"line_start":67,"line_end":67,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":3884,"byte_end":3887,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ And last, there is the [`low_level`] module. It contains routines to directly register and","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":3888,"byte_end":3982,"line_start":69,"line_end":69,"column_start":1,"column_end":95}},{"value":"/ unregister arbitrary actions. Some of the patters in the above modules return a [`SigId`],","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":3983,"byte_end":4077,"line_start":70,"line_end":70,"column_start":1,"column_end":95}},{"value":"/ which can be used with the [`low_level::unregister`] to remove the action. There are also some","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":4078,"byte_end":4176,"line_start":71,"line_end":71,"column_start":1,"column_end":99}},{"value":"/ other utilities that are more suited to build other abstractions with than to use directly.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":4177,"byte_end":4272,"line_start":72,"line_end":72,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":4273,"byte_end":4276,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ Certain parts of the library can be enabled or disabled with use flags:","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":4277,"byte_end":4352,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":4353,"byte_end":4356,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ * `channel`: The [low_level::channel] module (on by default).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":4357,"byte_end":4422,"line_start":76,"line_end":76,"column_start":1,"column_end":66}},{"value":"/ * `iterator`: The [iterator] module (on by default).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":4423,"byte_end":4479,"line_start":77,"line_end":77,"column_start":1,"column_end":57}},{"value":"/ * `extended-sig-info`: Support for providing more information in the iterators or from the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":4480,"byte_end":4574,"line_start":78,"line_end":78,"column_start":1,"column_end":95}},{"value":"/   async adaptor crates. This is off by default.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":4575,"byte_end":4626,"line_start":79,"line_end":79,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":4627,"byte_end":4630,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ # Limitations","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":4631,"byte_end":4648,"line_start":81,"line_end":81,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":4649,"byte_end":4652,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ * OS limitations still apply. Certain signals are not possible to override or subscribe to ‒","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":4653,"byte_end":4751,"line_start":83,"line_end":83,"column_start":1,"column_end":97}},{"value":"/   `SIGKILL` or `SIGSTOP`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":4752,"byte_end":4781,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/ * Overriding some others is probably a very stupid idea (or very unusual needs) ‒ handling eg.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":4782,"byte_end":4882,"line_start":85,"line_end":85,"column_start":1,"column_end":99}},{"value":"/   `SIGSEGV` is not something done lightly. For that reason, the crate will panic in case","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":4883,"byte_end":4975,"line_start":86,"line_end":86,"column_start":1,"column_end":93}},{"value":"/   registering of these is attempted (see [`FORBIDDEN`][crate::consts::FORBIDDEN]. If you still","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":4976,"byte_end":5074,"line_start":87,"line_end":87,"column_start":1,"column_end":99}},{"value":"/   need to do so, you can find such APIs in the `signal-hook-registry` backend crate, but","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":5075,"byte_end":5167,"line_start":88,"line_end":88,"column_start":1,"column_end":93}},{"value":"/   additional care must be taken.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":5168,"byte_end":5204,"line_start":89,"line_end":89,"column_start":1,"column_end":37}},{"value":"/ * Interaction with other signal-handling libraries is limited. If signal-hook finds an existing","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":5205,"byte_end":5304,"line_start":90,"line_end":90,"column_start":1,"column_end":100}},{"value":"/   handler present, it chain-calls it from the signal it installs and assumes other libraries","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":5305,"byte_end":5401,"line_start":91,"line_end":91,"column_start":1,"column_end":97}},{"value":"/   would do the same, but that's everything that can be done to make it work with libraries not","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":5402,"byte_end":5500,"line_start":92,"line_end":92,"column_start":1,"column_end":99}},{"value":"/   based on [`signal-hook-registry`](https://lib.rs/signal-hook-registry)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":5501,"byte_end":5577,"line_start":93,"line_end":93,"column_start":1,"column_end":77}},{"value":"/   (the backend of this crate).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":5578,"byte_end":5612,"line_start":94,"line_end":94,"column_start":1,"column_end":35}},{"value":"/ * The above chaining contains a race condition in multi-threaded programs, where the previous","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":5613,"byte_end":5710,"line_start":95,"line_end":95,"column_start":1,"column_end":98}},{"value":"/   handler might not get called if it is received during the registration process. This is","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":5711,"byte_end":5804,"line_start":96,"line_end":96,"column_start":1,"column_end":94}},{"value":"/   handled (at least on non-windows platforms) on the same thread where the registration","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":5805,"byte_end":5896,"line_start":97,"line_end":97,"column_start":1,"column_end":92}},{"value":"/   happens, therefore it is advised to register at least one action for each signal of interest","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":5897,"byte_end":5995,"line_start":98,"line_end":98,"column_start":1,"column_end":99}},{"value":"/   early, before any additional threads are started. Registering any additional (or removing and","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":5996,"byte_end":6095,"line_start":99,"line_end":99,"column_start":1,"column_end":100}},{"value":"/   registering again) action on the same signal is without the race condition.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":6096,"byte_end":6177,"line_start":100,"line_end":100,"column_start":1,"column_end":82}},{"value":"/ * Once at least one action is registered for a signal, the default action is replaced (this is","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":6178,"byte_end":6276,"line_start":101,"line_end":101,"column_start":1,"column_end":99}},{"value":"/   how signals work in the OS). Even if all actions of that signal are removed, `signal-hook`","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":6277,"byte_end":6373,"line_start":102,"line_end":102,"column_start":1,"column_end":97}},{"value":"/   does not restore the default handler (such behaviour would be at times inconsistent with","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":6374,"byte_end":6468,"line_start":103,"line_end":103,"column_start":1,"column_end":95}},{"value":"/   making the actions independent and there's no reasonable way to do so in a race-free way in a","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":6469,"byte_end":6568,"line_start":104,"line_end":104,"column_start":1,"column_end":100}},{"value":"/   multi-threaded program while also dealing with signal handlers registered with other","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":6569,"byte_end":6659,"line_start":105,"line_end":105,"column_start":1,"column_end":91}},{"value":"/   libraries). It is, however, possible to *emulate* the default handler (see the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":6660,"byte_end":6744,"line_start":106,"line_end":106,"column_start":1,"column_end":85}},{"value":"/   [`emulate_default_handler`][low_level::emulate_default_handler]) ‒ there are only 4","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":6745,"byte_end":6836,"line_start":107,"line_end":107,"column_start":1,"column_end":90}},{"value":"/   default handlers:","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":6837,"byte_end":6860,"line_start":108,"line_end":108,"column_start":1,"column_end":24}},{"value":"/   - Ignore. This is easy to emulate.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":6861,"byte_end":6901,"line_start":109,"line_end":109,"column_start":1,"column_end":41}},{"value":"/   - Abort. Depending on if you call it from within a signal handler of from outside, the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":6902,"byte_end":6994,"line_start":110,"line_end":110,"column_start":1,"column_end":93}},{"value":"/     [`low_level::abort`] or [`std::process::abort`] can be used.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":6995,"byte_end":7063,"line_start":111,"line_end":111,"column_start":1,"column_end":69}},{"value":"/   - Terminate. This can be done with `exit` ([`low_level::exit`] or [`std::process::exit`]).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":7064,"byte_end":7160,"line_start":112,"line_end":112,"column_start":1,"column_end":97}},{"value":"/   - Stop. It is possible to [`raise`][low_level::raise] the [`SIGSTOP`][consts::SIGSTOP] signal.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":7161,"byte_end":7261,"line_start":113,"line_end":113,"column_start":1,"column_end":101}},{"value":"/     That one can't be replaced and always stops the application.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":7262,"byte_end":7330,"line_start":114,"line_end":114,"column_start":1,"column_end":69}},{"value":"/ * Many of the patterns here can collate multiple instances of the same signal into fewer","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":7331,"byte_end":7423,"line_start":115,"line_end":115,"column_start":1,"column_end":93}},{"value":"/   instances, if the application doesn't consume them fast enough. This is consistent with what","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":7424,"byte_end":7522,"line_start":116,"line_end":116,"column_start":1,"column_end":99}},{"value":"/   the kernel does if the application doesn't keep up with them (at least for non-realtime","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":7523,"byte_end":7616,"line_start":117,"line_end":117,"column_start":1,"column_end":94}},{"value":"/   signals, see below), so it is something one needs to deal with anyway.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":7617,"byte_end":7693,"line_start":118,"line_end":118,"column_start":1,"column_end":77}},{"value":"/ * (By design) the library mostly _postpones_ or helps the user postpone acting on the signals","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":7694,"byte_end":7791,"line_start":119,"line_end":119,"column_start":1,"column_end":98}},{"value":"/   until later. This, in combination with the above collating inside the library may make it","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":7792,"byte_end":7887,"line_start":120,"line_end":120,"column_start":1,"column_end":96}},{"value":"/   unsuitable for realtime signals. These usually want to be handled directly inside the signal","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":7888,"byte_end":7986,"line_start":121,"line_end":121,"column_start":1,"column_end":99}},{"value":"/   handler ‒ which still can be done with [signal_hook_registry::register], but using unsafe and","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":7987,"byte_end":8088,"line_start":122,"line_end":122,"column_start":1,"column_end":100}},{"value":"/   due care. Patterns for working safely with realtime signals are not unwanted in the library,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":8089,"byte_end":8187,"line_start":123,"line_end":123,"column_start":1,"column_end":99}},{"value":"/   but nobody contributed them yet.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":8188,"byte_end":8226,"line_start":124,"line_end":124,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":8227,"byte_end":8230,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ # Signal masks","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":8231,"byte_end":8249,"line_start":126,"line_end":126,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":8250,"byte_end":8253,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ As the library uses `sigaction` under the hood, signal masking works as expected (eg. with","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":8254,"byte_end":8348,"line_start":128,"line_end":128,"column_start":1,"column_end":95}},{"value":"/ `pthread_sigmask`). This means, signals will *not* be delivered if the signal is masked in all","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":8349,"byte_end":8447,"line_start":129,"line_end":129,"column_start":1,"column_end":99}},{"value":"/ program's threads.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":8448,"byte_end":8470,"line_start":130,"line_end":130,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":8471,"byte_end":8474,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ By the way, if you do want to modify the signal mask (or do other Unix-specific magic), the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":8475,"byte_end":8570,"line_start":132,"line_end":132,"column_start":1,"column_end":96}},{"value":"/ [nix](https://lib.rs/crates/nix) crate offers safe interface to many low-level functions,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":8571,"byte_end":8664,"line_start":133,"line_end":133,"column_start":1,"column_end":94}},{"value":"/ including","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":8665,"byte_end":8678,"line_start":134,"line_end":134,"column_start":1,"column_end":14}},{"value":"/ [`pthread_sigmask`](https://docs.rs/nix/0.11.0/nix/sys/signal/fn.pthread_sigmask.html).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":8679,"byte_end":8770,"line_start":135,"line_end":135,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":8771,"byte_end":8774,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ # Portability","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":8775,"byte_end":8792,"line_start":137,"line_end":137,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":8793,"byte_end":8796,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ It should work on any POSIX.1-2001 system, which are all the major big OSes with the notable","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":8797,"byte_end":8893,"line_start":139,"line_end":139,"column_start":1,"column_end":97}},{"value":"/ exception of Windows.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":8894,"byte_end":8919,"line_start":140,"line_end":140,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":8920,"byte_end":8923,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ Non-standard signals are also supported. Pass the signal value directly from `libc` or use","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":8924,"byte_end":9018,"line_start":142,"line_end":142,"column_start":1,"column_end":95}},{"value":"/ the numeric value directly.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":9019,"byte_end":9050,"line_start":143,"line_end":143,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":9051,"byte_end":9054,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":9055,"byte_end":9066,"line_start":145,"line_end":145,"column_start":1,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":9067,"byte_end":9090,"line_start":146,"line_end":146,"column_start":1,"column_end":24}},{"value":"/ use std::sync::atomic::{AtomicBool};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":9091,"byte_end":9131,"line_start":147,"line_end":147,"column_start":1,"column_end":41}},{"value":"/ let term = Arc::new(AtomicBool::new(false));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":9132,"byte_end":9180,"line_start":148,"line_end":148,"column_start":1,"column_end":49}},{"value":"/ let _ = signal_hook::flag::register(libc::SIGINT, Arc::clone(&term));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":9181,"byte_end":9254,"line_start":149,"line_end":149,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":9255,"byte_end":9262,"line_start":150,"line_end":150,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":9263,"byte_end":9266,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ This crate includes a limited support for Windows, based on `signal`/`raise` in the CRT.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":9267,"byte_end":9359,"line_start":152,"line_end":152,"column_start":1,"column_end":93}},{"value":"/ There are differences in both API and behavior:","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":9360,"byte_end":9411,"line_start":153,"line_end":153,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":9412,"byte_end":9415,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ - Many parts of the library are not available there.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":9416,"byte_end":9472,"line_start":155,"line_end":155,"column_start":1,"column_end":57}},{"value":"/ - We have only a few signals: `SIGABRT`, `SIGABRT_COMPAT`, `SIGBREAK`,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":9473,"byte_end":9547,"line_start":156,"line_end":156,"column_start":1,"column_end":75}},{"value":"/   `SIGFPE`, `SIGILL`, `SIGINT`, `SIGSEGV` and `SIGTERM`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":9548,"byte_end":9608,"line_start":157,"line_end":157,"column_start":1,"column_end":61}},{"value":"/ - Due to lack of signal blocking, there's a race condition.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":9609,"byte_end":9672,"line_start":158,"line_end":158,"column_start":1,"column_end":64}},{"value":"/   After the call to `signal`, there's a moment where we miss a signal.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":9673,"byte_end":9747,"line_start":159,"line_end":159,"column_start":1,"column_end":75}},{"value":"/   That means when you register a handler, there may be a signal which invokes","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":9748,"byte_end":9829,"line_start":160,"line_end":160,"column_start":1,"column_end":82}},{"value":"/   neither the default handler or the handler you register.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":9830,"byte_end":9892,"line_start":161,"line_end":161,"column_start":1,"column_end":63}},{"value":"/ - Handlers registered by `signal` in Windows are cleared on first signal.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":9893,"byte_end":9970,"line_start":162,"line_end":162,"column_start":1,"column_end":78}},{"value":"/   To match behavior in other platforms, we re-register the handler each time the handler is","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":9971,"byte_end":10066,"line_start":163,"line_end":163,"column_start":1,"column_end":96}},{"value":"/   called, but there's a moment where we miss a handler.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":10067,"byte_end":10126,"line_start":164,"line_end":164,"column_start":1,"column_end":60}},{"value":"/   That means when you receive two signals in a row, there may be a signal which invokes","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":10127,"byte_end":10218,"line_start":165,"line_end":165,"column_start":1,"column_end":92}},{"value":"/   the default handler, nevertheless you certainly have registered the handler.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":10219,"byte_end":10301,"line_start":166,"line_end":166,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":10302,"byte_end":10305,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ Moreover, signals won't work as you expected. `SIGTERM` isn't actually used and","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":10306,"byte_end":10389,"line_start":168,"line_end":168,"column_start":1,"column_end":84}},{"value":"/ not all `Ctrl-C`s are turned into `SIGINT`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":10390,"byte_end":10437,"line_start":169,"line_end":169,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":10438,"byte_end":10441,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ Patches to improve Windows support in this library are welcome.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":10442,"byte_end":10509,"line_start":171,"line_end":171,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":10510,"byte_end":10513,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ # Features","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":10514,"byte_end":10528,"line_start":173,"line_end":173,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":10529,"byte_end":10532,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ There are several feature flags that control how much is available as part of the crate, some","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":10533,"byte_end":10630,"line_start":175,"line_end":175,"column_start":1,"column_end":98}},{"value":"/ enabled by default.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":10631,"byte_end":10654,"line_start":176,"line_end":176,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":10655,"byte_end":10658,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ * `channel`: (enabled by default) The [Channel][crate::low_level::channel] synchronization","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":10659,"byte_end":10753,"line_start":178,"line_end":178,"column_start":1,"column_end":95}},{"value":"/   primitive for exporting data out of signal handlers.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":10754,"byte_end":10812,"line_start":179,"line_end":179,"column_start":1,"column_end":59}},{"value":"/ * `iterator`: (enabled by default) An [Signals iterator][crate::iterator::Signals] that","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":10813,"byte_end":10904,"line_start":180,"line_end":180,"column_start":1,"column_end":92}},{"value":"/   provides a convenient interface for receiving signals in rust-friendly way.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":10905,"byte_end":10986,"line_start":181,"line_end":181,"column_start":1,"column_end":82}},{"value":"/ * `extended-siginfo` adds support for providing extra information as part of the iterator","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":10987,"byte_end":11080,"line_start":182,"line_end":182,"column_start":1,"column_end":94}},{"value":"/   interface.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":11081,"byte_end":11097,"line_start":183,"line_end":183,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":11098,"byte_end":11101,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":11102,"byte_end":11116,"line_start":185,"line_end":185,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":11117,"byte_end":11120,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ ## Using a flag to terminate a loop-based application","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":11121,"byte_end":11178,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":11179,"byte_end":11182,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":11183,"byte_end":11194,"line_start":189,"line_end":189,"column_start":1,"column_end":12}},{"value":"/ use std::io::Error;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":11195,"byte_end":11218,"line_start":190,"line_end":190,"column_start":1,"column_end":24}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":11219,"byte_end":11242,"line_start":191,"line_end":191,"column_start":1,"column_end":24}},{"value":"/ use std::sync::atomic::{AtomicBool, Ordering};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":11243,"byte_end":11293,"line_start":192,"line_end":192,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":11294,"byte_end":11297,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Error> {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":11298,"byte_end":11334,"line_start":194,"line_end":194,"column_start":1,"column_end":37}},{"value":"/     let term = Arc::new(AtomicBool::new(false));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":11335,"byte_end":11387,"line_start":195,"line_end":195,"column_start":1,"column_end":53}},{"value":"/     signal_hook::flag::register(signal_hook::consts::SIGTERM, Arc::clone(&term))?;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":11388,"byte_end":11474,"line_start":196,"line_end":196,"column_start":1,"column_end":87}},{"value":"/     while !term.load(Ordering::Relaxed) {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":11475,"byte_end":11520,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/         // Do some time-limited stuff here","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":11521,"byte_end":11567,"line_start":198,"line_end":198,"column_start":1,"column_end":47}},{"value":"/         // (if this could block forever, then there's no guarantee the signal will have any","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":11568,"byte_end":11663,"line_start":199,"line_end":199,"column_start":1,"column_end":96}},{"value":"/         // effect).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":11664,"byte_end":11687,"line_start":200,"line_end":200,"column_start":1,"column_end":24}},{"value":"/ #","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":11688,"byte_end":11693,"line_start":201,"line_end":201,"column_start":1,"column_end":6}},{"value":"/ #       // Hack to terminate the example, not part of the real code.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":11694,"byte_end":11766,"line_start":202,"line_end":202,"column_start":1,"column_end":73}},{"value":"/ #       term.store(true, Ordering::Relaxed);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":11767,"byte_end":11815,"line_start":203,"line_end":203,"column_start":1,"column_end":49}},{"value":"/     }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":11816,"byte_end":11825,"line_start":204,"line_end":204,"column_start":1,"column_end":10}},{"value":"/     Ok(())","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":11826,"byte_end":11840,"line_start":205,"line_end":205,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":11841,"byte_end":11846,"line_start":206,"line_end":206,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":11847,"byte_end":11854,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":11855,"byte_end":11858,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ ## A complex signal handling with a background thread","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":11859,"byte_end":11916,"line_start":209,"line_end":209,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":11917,"byte_end":11920,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ This also handles the double CTRL+C situation (eg. the second CTRL+C kills) and resetting the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":11921,"byte_end":12018,"line_start":211,"line_end":211,"column_start":1,"column_end":98}},{"value":"/ terminal on `SIGTSTP` (CTRL+Z, curses-based applications should do something like this).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":12019,"byte_end":12111,"line_start":212,"line_end":212,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":12112,"byte_end":12115,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":12116,"byte_end":12127,"line_start":214,"line_end":214,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"extended-siginfo\")] pub mod test {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":12128,"byte_end":12185,"line_start":215,"line_end":215,"column_start":1,"column_end":58}},{"value":"/ use std::io::Error;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":12186,"byte_end":12209,"line_start":216,"line_end":216,"column_start":1,"column_end":24}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":12210,"byte_end":12233,"line_start":217,"line_end":217,"column_start":1,"column_end":24}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":12234,"byte_end":12272,"line_start":218,"line_end":218,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":12273,"byte_end":12276,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ use signal_hook::consts::signal::*;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":12277,"byte_end":12316,"line_start":220,"line_end":220,"column_start":1,"column_end":40}},{"value":"/ use signal_hook::consts::TERM_SIGNALS;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":12317,"byte_end":12359,"line_start":221,"line_end":221,"column_start":1,"column_end":43}},{"value":"/ use signal_hook::flag;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":12360,"byte_end":12386,"line_start":222,"line_end":222,"column_start":1,"column_end":27}},{"value":"/ // A friend of the Signals iterator, but can be customized by what we want yielded about each","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":12387,"byte_end":12484,"line_start":223,"line_end":223,"column_start":1,"column_end":98}},{"value":"/ // signal.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":12485,"byte_end":12499,"line_start":224,"line_end":224,"column_start":1,"column_end":15}},{"value":"/ use signal_hook::iterator::SignalsInfo;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":12500,"byte_end":12543,"line_start":225,"line_end":225,"column_start":1,"column_end":44}},{"value":"/ use signal_hook::iterator::exfiltrator::WithOrigin;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":12544,"byte_end":12599,"line_start":226,"line_end":226,"column_start":1,"column_end":56}},{"value":"/ use signal_hook::low_level;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":12600,"byte_end":12631,"line_start":227,"line_end":227,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":12632,"byte_end":12635,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ # struct App;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":12636,"byte_end":12653,"line_start":229,"line_end":229,"column_start":1,"column_end":18}},{"value":"/ # impl App {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":12654,"byte_end":12670,"line_start":230,"line_end":230,"column_start":1,"column_end":17}},{"value":"/ # fn run_background() -> Self { Self }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":12671,"byte_end":12713,"line_start":231,"line_end":231,"column_start":1,"column_end":43}},{"value":"/ # fn wait_for_stop(self) {}","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":12714,"byte_end":12745,"line_start":232,"line_end":232,"column_start":1,"column_end":32}},{"value":"/ # fn restore_term(&self) {}","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":12746,"byte_end":12777,"line_start":233,"line_end":233,"column_start":1,"column_end":32}},{"value":"/ # fn claim_term(&self) {}","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":12778,"byte_end":12807,"line_start":234,"line_end":234,"column_start":1,"column_end":30}},{"value":"/ # fn resize_term(&self) {}","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":12808,"byte_end":12838,"line_start":235,"line_end":235,"column_start":1,"column_end":31}},{"value":"/ # fn reload_config(&self) {}","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":12839,"byte_end":12871,"line_start":236,"line_end":236,"column_start":1,"column_end":33}},{"value":"/ # fn print_stats(&self) {}","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":12872,"byte_end":12902,"line_start":237,"line_end":237,"column_start":1,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":12903,"byte_end":12910,"line_start":238,"line_end":238,"column_start":1,"column_end":8}},{"value":"/ # pub","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":12911,"byte_end":12920,"line_start":239,"line_end":239,"column_start":1,"column_end":10}},{"value":"/ fn main() -> Result<(), Error> {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":12921,"byte_end":12957,"line_start":240,"line_end":240,"column_start":1,"column_end":37}},{"value":"/     // Make sure double CTRL+C and similar kills","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":12958,"byte_end":13010,"line_start":241,"line_end":241,"column_start":1,"column_end":53}},{"value":"/     let term_now = Arc::new(AtomicBool::new(false));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":13011,"byte_end":13067,"line_start":242,"line_end":242,"column_start":1,"column_end":57}},{"value":"/     for sig in TERM_SIGNALS {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":13068,"byte_end":13101,"line_start":243,"line_end":243,"column_start":1,"column_end":34}},{"value":"/         // When terminated by a second term signal, exit with exit code 1.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":13102,"byte_end":13180,"line_start":244,"line_end":244,"column_start":1,"column_end":79}},{"value":"/         // This will do nothing the first time (because term_now is false).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":13181,"byte_end":13260,"line_start":245,"line_end":245,"column_start":1,"column_end":80}},{"value":"/         flag::register_conditional_shutdown(*sig, 1, Arc::clone(&term_now))?;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":13261,"byte_end":13342,"line_start":246,"line_end":246,"column_start":1,"column_end":82}},{"value":"/         // But this will \"arm\" the above for the second time, by setting it to true.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":13343,"byte_end":13431,"line_start":247,"line_end":247,"column_start":1,"column_end":89}},{"value":"/         // The order of registering these is important, if you put this one first, it will","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":13432,"byte_end":13526,"line_start":248,"line_end":248,"column_start":1,"column_end":95}},{"value":"/         // first arm and then terminate ‒ all in the first round.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":13527,"byte_end":13598,"line_start":249,"line_end":249,"column_start":1,"column_end":70}},{"value":"/         flag::register(*sig, Arc::clone(&term_now))?;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":13599,"byte_end":13656,"line_start":250,"line_end":250,"column_start":1,"column_end":58}},{"value":"/     }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":13657,"byte_end":13666,"line_start":251,"line_end":251,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":13667,"byte_end":13670,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/     // Subscribe to all these signals with information about where they come from. We use the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":13671,"byte_end":13768,"line_start":253,"line_end":253,"column_start":1,"column_end":98}},{"value":"/     // extra info only for logging in this example (it is not available on all the OSes or at","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":13769,"byte_end":13866,"line_start":254,"line_end":254,"column_start":1,"column_end":98}},{"value":"/     // all the occasions anyway, it may return `Unknown`).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":13867,"byte_end":13929,"line_start":255,"line_end":255,"column_start":1,"column_end":63}},{"value":"/     let mut sigs = vec![","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":13930,"byte_end":13958,"line_start":256,"line_end":256,"column_start":1,"column_end":29}},{"value":"/         // Some terminal handling","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":13959,"byte_end":13996,"line_start":257,"line_end":257,"column_start":1,"column_end":38}},{"value":"/         SIGTSTP, SIGCONT, SIGWINCH,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":13997,"byte_end":14036,"line_start":258,"line_end":258,"column_start":1,"column_end":40}},{"value":"/         // Reload of configuration for daemons ‒ um, is this example for a TUI app or a daemon","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":14037,"byte_end":14137,"line_start":259,"line_end":259,"column_start":1,"column_end":99}},{"value":"/         // O:-)? You choose...","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":14138,"byte_end":14172,"line_start":260,"line_end":260,"column_start":1,"column_end":35}},{"value":"/         SIGHUP,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":14173,"byte_end":14192,"line_start":261,"line_end":261,"column_start":1,"column_end":20}},{"value":"/         // Application-specific action, to print some statistics.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":14193,"byte_end":14262,"line_start":262,"line_end":262,"column_start":1,"column_end":70}},{"value":"/         SIGUSR1,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":14263,"byte_end":14283,"line_start":263,"line_end":263,"column_start":1,"column_end":21}},{"value":"/     ];","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":14284,"byte_end":14294,"line_start":264,"line_end":264,"column_start":1,"column_end":11}},{"value":"/     sigs.extend(TERM_SIGNALS);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":14295,"byte_end":14329,"line_start":265,"line_end":265,"column_start":1,"column_end":35}},{"value":"/     let mut signals = SignalsInfo::<WithOrigin>::new(&sigs)?;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":14330,"byte_end":14395,"line_start":266,"line_end":266,"column_start":1,"column_end":66}},{"value":"/ #   low_level::raise(SIGTERM)?; // Trick to terminate the example","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":14396,"byte_end":14465,"line_start":267,"line_end":267,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":14466,"byte_end":14469,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/     // This is the actual application that'll start in its own thread. We'll control it from","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":14470,"byte_end":14566,"line_start":269,"line_end":269,"column_start":1,"column_end":97}},{"value":"/     // this thread based on the signals, but it keeps running.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":14567,"byte_end":14633,"line_start":270,"line_end":270,"column_start":1,"column_end":67}},{"value":"/     // This is called after all the signals got registered, to avoid the short race condition","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":14634,"byte_end":14731,"line_start":271,"line_end":271,"column_start":1,"column_end":98}},{"value":"/     // in the first registration of each signal in multi-threaded programs.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":14732,"byte_end":14811,"line_start":272,"line_end":272,"column_start":1,"column_end":80}},{"value":"/     let app = App::run_background();","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":14812,"byte_end":14852,"line_start":273,"line_end":273,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":14853,"byte_end":14856,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/     // Consume all the incoming signals. This happens in \"normal\" Rust thread, not in the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":14857,"byte_end":14950,"line_start":275,"line_end":275,"column_start":1,"column_end":94}},{"value":"/     // signal handlers. This means that we are allowed to do whatever we like in here, without","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":14951,"byte_end":15049,"line_start":276,"line_end":276,"column_start":1,"column_end":99}},{"value":"/     // restrictions, but it also means the kernel believes the signal already got delivered, we","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":15050,"byte_end":15149,"line_start":277,"line_end":277,"column_start":1,"column_end":100}},{"value":"/     // handle them in delayed manner. This is in contrast with eg the above","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":15150,"byte_end":15229,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"/     // `register_conditional_shutdown` where the shutdown happens *inside* the handler.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":15230,"byte_end":15321,"line_start":279,"line_end":279,"column_start":1,"column_end":92}},{"value":"/     let mut has_terminal = true;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":15322,"byte_end":15358,"line_start":280,"line_end":280,"column_start":1,"column_end":37}},{"value":"/     for info in &mut signals {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":15359,"byte_end":15393,"line_start":281,"line_end":281,"column_start":1,"column_end":35}},{"value":"/         // Will print info about signal + where it comes from.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":15394,"byte_end":15460,"line_start":282,"line_end":282,"column_start":1,"column_end":67}},{"value":"/         eprintln!(\"Received a signal {:?}\", info);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":15461,"byte_end":15515,"line_start":283,"line_end":283,"column_start":1,"column_end":55}},{"value":"/         match info.signal {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":15516,"byte_end":15547,"line_start":284,"line_end":284,"column_start":1,"column_end":32}},{"value":"/             SIGTSTP => {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":15548,"byte_end":15576,"line_start":285,"line_end":285,"column_start":1,"column_end":29}},{"value":"/                 // Restore the terminal to non-TUI mode","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":15577,"byte_end":15636,"line_start":286,"line_end":286,"column_start":1,"column_end":60}},{"value":"/                 if has_terminal {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":15637,"byte_end":15674,"line_start":287,"line_end":287,"column_start":1,"column_end":38}},{"value":"/                     app.restore_term();","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":15675,"byte_end":15718,"line_start":288,"line_end":288,"column_start":1,"column_end":44}},{"value":"/                     has_terminal = false;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":15719,"byte_end":15764,"line_start":289,"line_end":289,"column_start":1,"column_end":46}},{"value":"/                     // And actually stop ourselves.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":15765,"byte_end":15820,"line_start":290,"line_end":290,"column_start":1,"column_end":56}},{"value":"/                     low_level::emulate_default_handler(SIGTSTP)?;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":15821,"byte_end":15890,"line_start":291,"line_end":291,"column_start":1,"column_end":70}},{"value":"/                 }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":15891,"byte_end":15912,"line_start":292,"line_end":292,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":15913,"byte_end":15930,"line_start":293,"line_end":293,"column_start":1,"column_end":18}},{"value":"/             SIGCONT => {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":15931,"byte_end":15959,"line_start":294,"line_end":294,"column_start":1,"column_end":29}},{"value":"/                 if !has_terminal {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":15960,"byte_end":15998,"line_start":295,"line_end":295,"column_start":1,"column_end":39}},{"value":"/                     app.claim_term();","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":15999,"byte_end":16040,"line_start":296,"line_end":296,"column_start":1,"column_end":42}},{"value":"/                     has_terminal = true;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":16041,"byte_end":16085,"line_start":297,"line_end":297,"column_start":1,"column_end":45}},{"value":"/                 }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":16086,"byte_end":16107,"line_start":298,"line_end":298,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":16108,"byte_end":16125,"line_start":299,"line_end":299,"column_start":1,"column_end":18}},{"value":"/             SIGWINCH => app.resize_term(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":16126,"byte_end":16172,"line_start":300,"line_end":300,"column_start":1,"column_end":47}},{"value":"/             SIGHUP => app.reload_config(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":16173,"byte_end":16219,"line_start":301,"line_end":301,"column_start":1,"column_end":47}},{"value":"/             SIGUSR1 => app.print_stats(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":16220,"byte_end":16265,"line_start":302,"line_end":302,"column_start":1,"column_end":46}},{"value":"/             term_sig => { // These are all the ones left","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":16266,"byte_end":16326,"line_start":303,"line_end":303,"column_start":1,"column_end":61}},{"value":"/                 eprintln!(\"Terminating\");","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":16327,"byte_end":16372,"line_start":304,"line_end":304,"column_start":1,"column_end":46}},{"value":"/                 assert!(TERM_SIGNALS.contains(&term_sig));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":16373,"byte_end":16435,"line_start":305,"line_end":305,"column_start":1,"column_end":63}},{"value":"/                 break;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":16436,"byte_end":16462,"line_start":306,"line_end":306,"column_start":1,"column_end":27}},{"value":"/             }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":16463,"byte_end":16480,"line_start":307,"line_end":307,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":16481,"byte_end":16494,"line_start":308,"line_end":308,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":16495,"byte_end":16504,"line_start":309,"line_end":309,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":16505,"byte_end":16508,"line_start":310,"line_end":310,"column_start":1,"column_end":4}},{"value":"/     // If during this another termination signal comes, the trick at the top would kick in and","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":16509,"byte_end":16607,"line_start":311,"line_end":311,"column_start":1,"column_end":99}},{"value":"/     // terminate early. But if it doesn't, the application shuts down gracefully.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":16608,"byte_end":16693,"line_start":312,"line_end":312,"column_start":1,"column_end":86}},{"value":"/     app.wait_for_stop();","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":16694,"byte_end":16722,"line_start":313,"line_end":313,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":16723,"byte_end":16726,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":16727,"byte_end":16741,"line_start":315,"line_end":315,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":16742,"byte_end":16747,"line_start":316,"line_end":316,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":16748,"byte_end":16755,"line_start":317,"line_end":317,"column_start":1,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":16756,"byte_end":16773,"line_start":318,"line_end":318,"column_start":1,"column_end":18}},{"value":"/ # #[cfg(feature = \"extended-siginfo\")] test::main().unwrap();","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":16774,"byte_end":16839,"line_start":319,"line_end":319,"column_start":1,"column_end":66}},{"value":"/ # }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":16840,"byte_end":16847,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":16848,"byte_end":16855,"line_start":321,"line_end":321,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":16856,"byte_end":16859,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ # Asynchronous runtime support","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":16860,"byte_end":16894,"line_start":323,"line_end":323,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":16895,"byte_end":16898,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ If you are looking for integration with an asynchronous runtime take a look at one of the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":16899,"byte_end":16992,"line_start":325,"line_end":325,"column_start":1,"column_end":94}},{"value":"/ following adapter crates:","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":16993,"byte_end":17022,"line_start":326,"line_end":326,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":17023,"byte_end":17026,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ * [`signal-hook-async-std`](https://docs.rs/signal-hook-async-std) for async-std support","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":17027,"byte_end":17119,"line_start":328,"line_end":328,"column_start":1,"column_end":93}},{"value":"/ * [`signal-hook-mio`](https://docs.rs/signal-hook-mio) for MIO support","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":17120,"byte_end":17194,"line_start":329,"line_end":329,"column_start":1,"column_end":75}},{"value":"/ * [`signal-hook-tokio`](https://docs.rs/signal-hook-tokio) for Tokio support","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":17195,"byte_end":17275,"line_start":330,"line_end":330,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":17276,"byte_end":17279,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ Feel free to open a pull requests if you want to add support for runtimes not mentioned above.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":17280,"byte_end":17378,"line_start":332,"line_end":332,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":17379,"byte_end":17382,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"/ # Porting from previous versions","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":17383,"byte_end":17419,"line_start":334,"line_end":334,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":17420,"byte_end":17423,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ There were some noisy changes when going from 0.2 version to the 0.3 version. In particular:","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":17424,"byte_end":17520,"line_start":336,"line_end":336,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":17521,"byte_end":17524,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ * A lot of things moved around to make the structure of the crate a bit more understandable.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":17525,"byte_end":17621,"line_start":338,"line_end":338,"column_start":1,"column_end":97}},{"value":"/   Most of the time it should be possible to just search the documentation for the name that","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":17622,"byte_end":17717,"line_start":339,"line_end":339,"column_start":1,"column_end":96}},{"value":"/   can't be resolved to discover the new location.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":17718,"byte_end":17771,"line_start":340,"line_end":340,"column_start":1,"column_end":54}},{"value":"/   - The signal constants (`SIGTERM`, for example) are in [`consts`] submodule (individual","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":17772,"byte_end":17865,"line_start":341,"line_end":341,"column_start":1,"column_end":94}},{"value":"/     imports) and in the [`consts::signal`] (for wildcard import of all of them).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":17866,"byte_end":17950,"line_start":342,"line_end":342,"column_start":1,"column_end":85}},{"value":"/   - Some APIs that are considered more of a low-level building blocks than for casual day to","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":17951,"byte_end":18047,"line_start":343,"line_end":343,"column_start":1,"column_end":97}},{"value":"/     day use are now in the [`low_level`] submodule.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":18048,"byte_end":18103,"line_start":344,"line_end":344,"column_start":1,"column_end":56}},{"value":"/ * The previous version contained the `cleanup` module that allowed for removal of the actions","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":18104,"byte_end":18201,"line_start":345,"line_end":345,"column_start":1,"column_end":98}},{"value":"/   in rather destructive way (nuking actions of arbitrary other parts of the program). This is","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":18202,"byte_end":18299,"line_start":346,"line_end":346,"column_start":1,"column_end":98}},{"value":"/   completely gone in this version. The use case of shutting down the application on second","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":18300,"byte_end":18394,"line_start":347,"line_end":347,"column_start":1,"column_end":95}},{"value":"/   CTRL+C is now supported by a pattern described in the [`flag`] submodule. For other similar","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":18395,"byte_end":18492,"line_start":348,"line_end":348,"column_start":1,"column_end":98}},{"value":"/   needs, refer above for emulating default handlers.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":18493,"byte_end":18549,"line_start":349,"line_end":349,"column_start":1,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"flag","qualname":"::flag","value":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":40}],"decl_id":null,"docs":" Module for actions setting flags.","sig":null,"attributes":[{"value":"/ Module for actions setting flags.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":20431,"byte_end":20468,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":20469,"byte_end":20472,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This contains helper functions to set flags whenever a signal happens. The flags are atomic","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":20473,"byte_end":20568,"line_start":3,"line_end":3,"column_start":1,"column_end":96}},{"value":"/ bools or numbers and the library manipulates them with the `SeqCst` ordering, in case someone","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":20569,"byte_end":20666,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/ cares about relative order to some *other* atomic variables. If you don't care about the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":20667,"byte_end":20759,"line_start":5,"line_end":5,"column_start":1,"column_end":93}},{"value":"/ relative order, you are free to use `Ordering::Relaxed` when reading and resetting the flags.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":20760,"byte_end":20857,"line_start":6,"line_end":6,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":20858,"byte_end":20861,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # When to use","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":20862,"byte_end":20879,"line_start":8,"line_end":8,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":20880,"byte_end":20883,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The flags in this module allow for polling if a signal arrived since the previous poll. The do","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":20884,"byte_end":20982,"line_start":10,"line_end":10,"column_start":1,"column_end":99}},{"value":"/ not allow blocking until something arrives.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":20983,"byte_end":21030,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":21031,"byte_end":21034,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Therefore, the natural way to use them is in applications that have some kind of iterative work","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":21035,"byte_end":21134,"line_start":13,"line_end":13,"column_start":1,"column_end":100}},{"value":"/ with both some upper and lower time limit on one iteration. If one iteration could block for","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":21135,"byte_end":21231,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ arbitrary time, the handling of the signal would be postponed for a long time. If the iteration","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":21232,"byte_end":21331,"line_start":15,"line_end":15,"column_start":1,"column_end":100}},{"value":"/ didn't block at all, the checking for the signal would turn into a busy-loop.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":21332,"byte_end":21413,"line_start":16,"line_end":16,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":21414,"byte_end":21417,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If what you need is blocking until a signal comes, you might find better tools in the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":21418,"byte_end":21507,"line_start":18,"line_end":18,"column_start":1,"column_end":90}},{"value":"/ [`pipe`][crate::low_level::pipe] and [`iterator`][crate::iterator] modules.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":21508,"byte_end":21587,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":21588,"byte_end":21591,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":21592,"byte_end":21606,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":21607,"byte_end":21610,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Doing something until terminated. This also knows by which signal it was terminated. In case","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":21611,"byte_end":21707,"line_start":23,"line_end":23,"column_start":1,"column_end":97}},{"value":"/ multiple termination signals arrive before it is handled, it recognizes the last one.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":21708,"byte_end":21797,"line_start":24,"line_end":24,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":21798,"byte_end":21801,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":21802,"byte_end":21813,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/ use std::io::Error;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":21814,"byte_end":21837,"line_start":27,"line_end":27,"column_start":1,"column_end":24}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":21838,"byte_end":21861,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"/ use std::sync::atomic::{AtomicUsize, Ordering};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":21862,"byte_end":21913,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":21914,"byte_end":21917,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ use signal_hook::consts::signal::*;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":21918,"byte_end":21957,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/ use signal_hook::flag as signal_flag;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":21958,"byte_end":21999,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":22000,"byte_end":22003,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Error> {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":22004,"byte_end":22040,"line_start":34,"line_end":34,"column_start":1,"column_end":37}},{"value":"/     let term = Arc::new(AtomicUsize::new(0));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":22041,"byte_end":22090,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/     const SIGTERM_U: usize = SIGTERM as usize;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":22091,"byte_end":22141,"line_start":36,"line_end":36,"column_start":1,"column_end":51}},{"value":"/     const SIGINT_U: usize = SIGINT as usize;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":22142,"byte_end":22190,"line_start":37,"line_end":37,"column_start":1,"column_end":49}},{"value":"/ #   #[cfg(not(windows))]","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":22191,"byte_end":22219,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/     const SIGQUIT_U: usize = SIGQUIT as usize;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":22220,"byte_end":22270,"line_start":39,"line_end":39,"column_start":1,"column_end":51}},{"value":"/     signal_flag::register_usize(SIGTERM, Arc::clone(&term), SIGTERM_U)?;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":22271,"byte_end":22347,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/     signal_flag::register_usize(SIGINT, Arc::clone(&term), SIGINT_U)?;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":22348,"byte_end":22422,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/ #   #[cfg(not(windows))]","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":22423,"byte_end":22451,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/     signal_flag::register_usize(SIGQUIT, Arc::clone(&term), SIGQUIT_U)?;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":22452,"byte_end":22528,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":22529,"byte_end":22532,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #   // Hack to terminate the example when run as a doc-test.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":22533,"byte_end":22597,"line_start":45,"line_end":45,"column_start":1,"column_end":65}},{"value":"/ #   term.store(SIGTERM_U, Ordering::Relaxed);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":22598,"byte_end":22647,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"/     loop {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":22648,"byte_end":22662,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/         match term.load(Ordering::Relaxed) {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":22663,"byte_end":22711,"line_start":48,"line_end":48,"column_start":1,"column_end":49}},{"value":"/             0 => {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":22712,"byte_end":22734,"line_start":49,"line_end":49,"column_start":1,"column_end":23}},{"value":"/                 // Do some useful stuff here","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":22735,"byte_end":22783,"line_start":50,"line_end":50,"column_start":1,"column_end":49}},{"value":"/             }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":22784,"byte_end":22801,"line_start":51,"line_end":51,"column_start":1,"column_end":18}},{"value":"/             SIGTERM_U => {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":22802,"byte_end":22832,"line_start":52,"line_end":52,"column_start":1,"column_end":31}},{"value":"/                 eprintln!(\"Terminating on the TERM signal\");","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":22833,"byte_end":22897,"line_start":53,"line_end":53,"column_start":1,"column_end":65}},{"value":"/                 break;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":22898,"byte_end":22924,"line_start":54,"line_end":54,"column_start":1,"column_end":27}},{"value":"/             }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":22925,"byte_end":22942,"line_start":55,"line_end":55,"column_start":1,"column_end":18}},{"value":"/             SIGINT_U => {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":22943,"byte_end":22972,"line_start":56,"line_end":56,"column_start":1,"column_end":30}},{"value":"/                 eprintln!(\"Terminating on the INT signal\");","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":22973,"byte_end":23036,"line_start":57,"line_end":57,"column_start":1,"column_end":64}},{"value":"/                 break;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":23037,"byte_end":23063,"line_start":58,"line_end":58,"column_start":1,"column_end":27}},{"value":"/             }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":23064,"byte_end":23081,"line_start":59,"line_end":59,"column_start":1,"column_end":18}},{"value":"/ #           #[cfg(not(windows))]","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":23082,"byte_end":23118,"line_start":60,"line_end":60,"column_start":1,"column_end":37}},{"value":"/             SIGQUIT_U => {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":23119,"byte_end":23149,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/                 eprintln!(\"Terminating on the QUIT signal\");","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":23150,"byte_end":23214,"line_start":62,"line_end":62,"column_start":1,"column_end":65}},{"value":"/                 break;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":23215,"byte_end":23241,"line_start":63,"line_end":63,"column_start":1,"column_end":27}},{"value":"/             }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":23242,"byte_end":23259,"line_start":64,"line_end":64,"column_start":1,"column_end":18}},{"value":"/             _ => unreachable!(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":23260,"byte_end":23296,"line_start":65,"line_end":65,"column_start":1,"column_end":37}},{"value":"/         }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":23297,"byte_end":23310,"line_start":66,"line_end":66,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":23311,"byte_end":23320,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":23321,"byte_end":23324,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":23325,"byte_end":23339,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":23340,"byte_end":23345,"line_start":70,"line_end":70,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":23346,"byte_end":23353,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":23354,"byte_end":23357,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ Sending a signal to self and seeing it arrived (not of a practical usage on itself):","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":23358,"byte_end":23446,"line_start":73,"line_end":73,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":23447,"byte_end":23450,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":23451,"byte_end":23462,"line_start":75,"line_end":75,"column_start":1,"column_end":12}},{"value":"/ use std::io::Error;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":23463,"byte_end":23486,"line_start":76,"line_end":76,"column_start":1,"column_end":24}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":23487,"byte_end":23510,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/ use std::sync::atomic::{AtomicBool, Ordering};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":23511,"byte_end":23561,"line_start":78,"line_end":78,"column_start":1,"column_end":51}},{"value":"/ use std::thread;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":23562,"byte_end":23582,"line_start":79,"line_end":79,"column_start":1,"column_end":21}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":23583,"byte_end":23611,"line_start":80,"line_end":80,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":23612,"byte_end":23615,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ use signal_hook::consts::signal::*;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":23616,"byte_end":23655,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/ use signal_hook::low_level::raise;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":23656,"byte_end":23694,"line_start":83,"line_end":83,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":23695,"byte_end":23698,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Error> {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":23699,"byte_end":23735,"line_start":85,"line_end":85,"column_start":1,"column_end":37}},{"value":"/     let got = Arc::new(AtomicBool::new(false));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":23736,"byte_end":23787,"line_start":86,"line_end":86,"column_start":1,"column_end":52}},{"value":"/ #   #[cfg(not(windows))]","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":23788,"byte_end":23816,"line_start":87,"line_end":87,"column_start":1,"column_end":29}},{"value":"/     signal_hook::flag::register(SIGUSR1, Arc::clone(&got))?;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":23817,"byte_end":23881,"line_start":88,"line_end":88,"column_start":1,"column_end":65}},{"value":"/ #   #[cfg(windows)]","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":23882,"byte_end":23905,"line_start":89,"line_end":89,"column_start":1,"column_end":24}},{"value":"/ #   signal_hook::flag::register(SIGTERM, Arc::clone(&got))?;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":23906,"byte_end":23970,"line_start":90,"line_end":90,"column_start":1,"column_end":65}},{"value":"/ #   #[cfg(not(windows))]","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":23971,"byte_end":23999,"line_start":91,"line_end":91,"column_start":1,"column_end":29}},{"value":"/     raise(SIGUSR1).unwrap();","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":24000,"byte_end":24032,"line_start":92,"line_end":92,"column_start":1,"column_end":33}},{"value":"/ #   #[cfg(windows)]","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":24033,"byte_end":24056,"line_start":93,"line_end":93,"column_start":1,"column_end":24}},{"value":"/ #   raise(SIGTERM).unwrap();","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":24057,"byte_end":24089,"line_start":94,"line_end":94,"column_start":1,"column_end":33}},{"value":"/     // A sleep here, because it could run the signal handler in another thread and we may not","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":24090,"byte_end":24187,"line_start":95,"line_end":95,"column_start":1,"column_end":98}},{"value":"/     // see the flag right away. This is still a hack and not guaranteed to work, it is just an","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":24188,"byte_end":24286,"line_start":96,"line_end":96,"column_start":1,"column_end":99}},{"value":"/     // example!","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":24287,"byte_end":24306,"line_start":97,"line_end":97,"column_start":1,"column_end":20}},{"value":"/     thread::sleep(Duration::from_secs(1));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":24307,"byte_end":24353,"line_start":98,"line_end":98,"column_start":1,"column_end":47}},{"value":"/     assert!(got.load(Ordering::Relaxed));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":24354,"byte_end":24399,"line_start":99,"line_end":99,"column_start":1,"column_end":46}},{"value":"/     Ok(())","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":24400,"byte_end":24414,"line_start":100,"line_end":100,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":24415,"byte_end":24420,"line_start":101,"line_end":101,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":24421,"byte_end":24428,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":24429,"byte_end":24432,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ Reloading a configuration on `SIGHUP` (which is a common behaviour of many UNIX daemons,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":24433,"byte_end":24525,"line_start":104,"line_end":104,"column_start":1,"column_end":93}},{"value":"/ together with reopening the log file).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":24526,"byte_end":24568,"line_start":105,"line_end":105,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":24569,"byte_end":24572,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":24573,"byte_end":24584,"line_start":107,"line_end":107,"column_start":1,"column_end":12}},{"value":"/ use std::io::Error;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":24585,"byte_end":24608,"line_start":108,"line_end":108,"column_start":1,"column_end":24}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":24609,"byte_end":24632,"line_start":109,"line_end":109,"column_start":1,"column_end":24}},{"value":"/ use std::sync::atomic::{AtomicBool, Ordering};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":24633,"byte_end":24683,"line_start":110,"line_end":110,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":24684,"byte_end":24687,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ use signal_hook::consts::signal::*;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":24688,"byte_end":24727,"line_start":112,"line_end":112,"column_start":1,"column_end":40}},{"value":"/ use signal_hook::flag as signal_flag;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":24728,"byte_end":24769,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":24770,"byte_end":24773,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Error> {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":24774,"byte_end":24810,"line_start":115,"line_end":115,"column_start":1,"column_end":37}},{"value":"/     // We start with true, to load the configuration in the very first iteration too.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":24811,"byte_end":24900,"line_start":116,"line_end":116,"column_start":1,"column_end":90}},{"value":"/     let reload = Arc::new(AtomicBool::new(true));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":24901,"byte_end":24954,"line_start":117,"line_end":117,"column_start":1,"column_end":54}},{"value":"/     let term = Arc::new(AtomicBool::new(false));","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":24955,"byte_end":25007,"line_start":118,"line_end":118,"column_start":1,"column_end":53}},{"value":"/ #   #[cfg(not(windows))]","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":25008,"byte_end":25036,"line_start":119,"line_end":119,"column_start":1,"column_end":29}},{"value":"/     signal_flag::register(SIGHUP, Arc::clone(&reload))?;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":25037,"byte_end":25097,"line_start":120,"line_end":120,"column_start":1,"column_end":61}},{"value":"/     signal_flag::register(SIGINT, Arc::clone(&term))?;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":25098,"byte_end":25156,"line_start":121,"line_end":121,"column_start":1,"column_end":59}},{"value":"/     signal_flag::register(SIGTERM, Arc::clone(&term))?;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":25157,"byte_end":25216,"line_start":122,"line_end":122,"column_start":1,"column_end":60}},{"value":"/ #   #[cfg(not(windows))]","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":25217,"byte_end":25245,"line_start":123,"line_end":123,"column_start":1,"column_end":29}},{"value":"/     signal_flag::register(SIGQUIT, Arc::clone(&term))?;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":25246,"byte_end":25305,"line_start":124,"line_end":124,"column_start":1,"column_end":60}},{"value":"/     while !term.load(Ordering::Relaxed) {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":25306,"byte_end":25351,"line_start":125,"line_end":125,"column_start":1,"column_end":46}},{"value":"/         // Using swap here, not load, to reset it back to false once it is reloaded.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":25352,"byte_end":25440,"line_start":126,"line_end":126,"column_start":1,"column_end":89}},{"value":"/         if reload.swap(false, Ordering::Relaxed) {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":25441,"byte_end":25495,"line_start":127,"line_end":127,"column_start":1,"column_end":55}},{"value":"/             // Reload the config here","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":25496,"byte_end":25537,"line_start":128,"line_end":128,"column_start":1,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":25538,"byte_end":25543,"line_start":129,"line_end":129,"column_start":1,"column_end":6}},{"value":"/ #           // Hiden hack to make the example terminate when run as doc-test. Not part of the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":25544,"byte_end":25641,"line_start":130,"line_end":130,"column_start":1,"column_end":98}},{"value":"/ #           // real code.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":25642,"byte_end":25671,"line_start":131,"line_end":131,"column_start":1,"column_end":30}},{"value":"/ #           term.store(true, Ordering::Relaxed);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":25672,"byte_end":25724,"line_start":132,"line_end":132,"column_start":1,"column_end":53}},{"value":"/         }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":25725,"byte_end":25738,"line_start":133,"line_end":133,"column_start":1,"column_end":14}},{"value":"/         // Serve one request","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":25739,"byte_end":25771,"line_start":134,"line_end":134,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":25772,"byte_end":25781,"line_start":135,"line_end":135,"column_start":1,"column_end":10}},{"value":"/     Ok(())","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":25782,"byte_end":25796,"line_start":136,"line_end":136,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":25797,"byte_end":25802,"line_start":137,"line_end":137,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":25803,"byte_end":25810,"line_start":138,"line_end":138,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":34},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":26129,"byte_end":26137,"line_start":153,"line_end":153,"column_start":8,"column_end":16},"name":"register","qualname":"::flag::register","value":"pub fn register(c_int, Arc<AtomicBool>) -> Result<SigId, Error>","parent":null,"children":[],"decl_id":null,"docs":" Registers an action to set the flag to `true` whenever the given signal arrives.","sig":null,"attributes":[{"value":"/ Registers an action to set the flag to `true` whenever the given signal arrives.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":25973,"byte_end":26057,"line_start":148,"line_end":148,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":26058,"byte_end":26061,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":26062,"byte_end":26074,"line_start":150,"line_end":150,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":26075,"byte_end":26078,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ If the signal is one of the forbidden.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":26079,"byte_end":26121,"line_start":152,"line_end":152,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":36},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":26659,"byte_end":26673,"line_start":162,"line_end":162,"column_start":8,"column_end":22},"name":"register_usize","qualname":"::flag::register_usize","value":"pub fn register_usize(c_int, Arc<AtomicUsize>, usize) -> Result<SigId, Error>","parent":null,"children":[],"decl_id":null,"docs":" Registers an action to set the flag to the given value whenever the signal arrives.\n","sig":null,"attributes":[{"value":"/ Registers an action to set the flag to the given value whenever the signal arrives.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":26564,"byte_end":26651,"line_start":161,"line_end":161,"column_start":1,"column_end":88}}]},{"kind":"Function","id":{"krate":0,"index":38},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":27990,"byte_end":28019,"line_start":186,"line_end":186,"column_start":8,"column_end":37},"name":"register_conditional_shutdown","qualname":"::flag::register_conditional_shutdown","value":"pub fn register_conditional_shutdown(c_int, c_int, Arc<AtomicBool>)\n-> Result<SigId, Error>","parent":null,"children":[],"decl_id":null,"docs":" Terminate the application on a signal if the given condition is true.","sig":null,"attributes":[{"value":"/ Terminate the application on a signal if the given condition is true.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":26844,"byte_end":26917,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":26918,"byte_end":26921,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ This can be used for different use cases. One of them (with the condition being always true) is","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":26922,"byte_end":27021,"line_start":168,"line_end":168,"column_start":1,"column_end":100}},{"value":"/ just unconditionally terminate on the given signal.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":27022,"byte_end":27077,"line_start":169,"line_end":169,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":27078,"byte_end":27081,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ Another is being able to turn on and off the behaviour by the shared flag.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":27082,"byte_end":27160,"line_start":171,"line_end":171,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":27161,"byte_end":27164,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ The last one is handling double CTRL+C ‒ if the user presses CTRL+C, we would like to start a","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":27165,"byte_end":27264,"line_start":173,"line_end":173,"column_start":1,"column_end":98}},{"value":"/ graceful shutdown. But if anything ever gets stuck in the shutdown, second CTRL+C (or other","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":27265,"byte_end":27360,"line_start":174,"line_end":174,"column_start":1,"column_end":96}},{"value":"/ such termination signal) should terminate the application without further delay.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":27361,"byte_end":27445,"line_start":175,"line_end":175,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":27446,"byte_end":27449,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ To do that, one can combine this with [`register`]. On the first run, the flag is `false` and","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":27450,"byte_end":27547,"line_start":177,"line_end":177,"column_start":1,"column_end":98}},{"value":"/ this doesn't terminate. But then the flag is set to true during the first run and „arms“ the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":27548,"byte_end":27648,"line_start":178,"line_end":178,"column_start":1,"column_end":97}},{"value":"/ shutdown on the second run. Note that it matters in which order the actions are registered (the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":27649,"byte_end":27748,"line_start":179,"line_end":179,"column_start":1,"column_end":100}},{"value":"/ shutdown must go first). And yes, this also allows asking the user „Do you want to terminate“","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":27749,"byte_end":27850,"line_start":180,"line_end":180,"column_start":1,"column_end":98}},{"value":"/ and disarming the abrupt shutdown if the user answers „No“.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":27851,"byte_end":27918,"line_start":181,"line_end":181,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":27919,"byte_end":27922,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":27923,"byte_end":27935,"line_start":183,"line_end":183,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":27936,"byte_end":27939,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ If the signal is one of the forbidden.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":27940,"byte_end":27982,"line_start":185,"line_end":185,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":40},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":29075,"byte_end":29103,"line_start":217,"line_end":217,"column_start":8,"column_end":36},"name":"register_conditional_default","qualname":"::flag::register_conditional_default","value":"pub fn register_conditional_default(c_int, Arc<AtomicBool>)\n-> Result<SigId, Error>","parent":null,"children":[],"decl_id":null,"docs":" Conditionally runs an emulation of the default action on the given signal.","sig":null,"attributes":[{"value":"/ Conditionally runs an emulation of the default action on the given signal.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":28300,"byte_end":28378,"line_start":199,"line_end":199,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":28379,"byte_end":28382,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ If the provided condition is true at the time of invoking the signal handler, the equivalent of","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":28383,"byte_end":28482,"line_start":201,"line_end":201,"column_start":1,"column_end":100}},{"value":"/ the default action of the given signal is run. It is a bit similar to","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":28483,"byte_end":28556,"line_start":202,"line_end":202,"column_start":1,"column_end":74}},{"value":"/ [`register_conditional_shutdown`], except that it doesn't terminate for non-termination","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":28557,"byte_end":28648,"line_start":203,"line_end":203,"column_start":1,"column_end":92}},{"value":"/ signals, it runs their default handler.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":28649,"byte_end":28692,"line_start":204,"line_end":204,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":28693,"byte_end":28696,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":28697,"byte_end":28709,"line_start":206,"line_end":206,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":28710,"byte_end":28713,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ If the signal is one of the forbidden","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":28714,"byte_end":28755,"line_start":208,"line_end":208,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":28756,"byte_end":28759,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":28760,"byte_end":28772,"line_start":210,"line_end":210,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":28773,"byte_end":28776,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ Similarly to the [`emulate_default_handler`][low_level::emulate_default_handler] function, this","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":28777,"byte_end":28876,"line_start":212,"line_end":212,"column_start":1,"column_end":100}},{"value":"/ one looks the signal up in a table. If it is unknown, an error is returned.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":28877,"byte_end":28956,"line_start":213,"line_end":213,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":28957,"byte_end":28960,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ Additionally to that, any errors that can be caused by a registration of a handler can happen","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":28961,"byte_end":29058,"line_start":215,"line_end":215,"column_start":1,"column_end":98}},{"value":"/ too.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/flag.rs","byte_start":29059,"byte_end":29067,"line_start":216,"line_end":216,"column_start":1,"column_end":9}}]},{"kind":"Mod","id":{"krate":0,"index":43},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iterator","qualname":"::iterator","value":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":201},{"krate":0,"index":277},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":287},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":294},{"krate":0,"index":297},{"krate":0,"index":300},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":307},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":314},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":321},{"krate":0,"index":324},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":334},{"krate":0,"index":338},{"krate":0,"index":353},{"krate":0,"index":356},{"krate":0,"index":362},{"krate":0,"index":367},{"krate":0,"index":372}],"decl_id":null,"docs":" An iterator over incoming signals.","sig":null,"attributes":[{"value":"cfg(all(not(windows), feature = \"iterator\"))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":18565,"byte_end":18612,"line_start":352,"line_end":352,"column_start":1,"column_end":48}},{"value":"/ An iterator over incoming signals.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":31313,"byte_end":31351,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":31352,"byte_end":31355,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This provides a higher abstraction over the signals, providing","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":31356,"byte_end":31422,"line_start":3,"line_end":3,"column_start":1,"column_end":67}},{"value":"/ the [`SignalsInfo`] structure which is able to iterate over the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":31423,"byte_end":31490,"line_start":4,"line_end":4,"column_start":1,"column_end":68}},{"value":"/ incoming signals. The structure is parametrized by an","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":31491,"byte_end":31548,"line_start":5,"line_end":5,"column_start":1,"column_end":58}},{"value":"/ [`Exfiltrator`][self::exfiltrator::Exfiltrator], which specifies what information is returned","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":31549,"byte_end":31646,"line_start":6,"line_end":6,"column_start":1,"column_end":98}},{"value":"/ for each delivered signal. Note that some exfiltrators are behind a feature flag.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":31647,"byte_end":31732,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":31733,"byte_end":31736,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The [`Signals`] is a type alias for the common case when it is enough to get the signal number.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":31737,"byte_end":31836,"line_start":9,"line_end":9,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":31837,"byte_end":31840,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This module (and everything in it) is turned by the `iterator` feature. It is **on** by","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":31841,"byte_end":31932,"line_start":11,"line_end":11,"column_start":1,"column_end":92}},{"value":"/ default, the possibility to turn off is mostly possible for very special purposes (compiling on","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":31933,"byte_end":32032,"line_start":12,"line_end":12,"column_start":1,"column_end":100}},{"value":"/ `<rustc-1.36`, minimizing the amount of code compiled, …). In a sense, this is the highest","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":32033,"byte_end":32129,"line_start":13,"line_end":13,"column_start":1,"column_end":95}},{"value":"/ level abstraction of the crate and the API expected to be used by most of the people.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":32130,"byte_end":32219,"line_start":14,"line_end":14,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":32220,"byte_end":32223,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":32224,"byte_end":32238,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":32239,"byte_end":32242,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":32243,"byte_end":32254,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/ extern crate libc;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":32255,"byte_end":32277,"line_start":19,"line_end":19,"column_start":1,"column_end":23}},{"value":"/ extern crate signal_hook;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":32278,"byte_end":32307,"line_start":20,"line_end":20,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":32308,"byte_end":32311,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ use std::io::Error;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":32312,"byte_end":32335,"line_start":22,"line_end":22,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":32336,"byte_end":32339,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ use signal_hook::consts::signal::*;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":32340,"byte_end":32379,"line_start":24,"line_end":24,"column_start":1,"column_end":40}},{"value":"/ use signal_hook::iterator::Signals;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":32380,"byte_end":32419,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":32420,"byte_end":32423,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Error> {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":32424,"byte_end":32460,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/     let mut signals = Signals::new(&[","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":32461,"byte_end":32502,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/         SIGHUP,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":32503,"byte_end":32522,"line_start":29,"line_end":29,"column_start":1,"column_end":20}},{"value":"/         SIGTERM,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":32523,"byte_end":32543,"line_start":30,"line_end":30,"column_start":1,"column_end":21}},{"value":"/         SIGINT,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":32544,"byte_end":32563,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/         SIGQUIT,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":32564,"byte_end":32584,"line_start":32,"line_end":32,"column_start":1,"column_end":21}},{"value":"/ #       SIGUSR1,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":32585,"byte_end":32605,"line_start":33,"line_end":33,"column_start":1,"column_end":21}},{"value":"/     ])?;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":32606,"byte_end":32618,"line_start":34,"line_end":34,"column_start":1,"column_end":13}},{"value":"/ #   // A trick to terminate the example when run as doc-test. Not part of the real code.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":32619,"byte_end":32711,"line_start":35,"line_end":35,"column_start":1,"column_end":93}},{"value":"/ #   signal_hook::low_level::raise(SIGUSR1).unwrap();","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":32712,"byte_end":32768,"line_start":36,"line_end":36,"column_start":1,"column_end":57}},{"value":"/     'outer: loop {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":32769,"byte_end":32791,"line_start":37,"line_end":37,"column_start":1,"column_end":23}},{"value":"/         // Pick up signals that arrived since last time","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":32792,"byte_end":32851,"line_start":38,"line_end":38,"column_start":1,"column_end":60}},{"value":"/         for signal in signals.pending() {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":32852,"byte_end":32897,"line_start":39,"line_end":39,"column_start":1,"column_end":46}},{"value":"/             match signal as libc::c_int {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":32898,"byte_end":32943,"line_start":40,"line_end":40,"column_start":1,"column_end":46}},{"value":"/                 SIGHUP => {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":32944,"byte_end":32975,"line_start":41,"line_end":41,"column_start":1,"column_end":32}},{"value":"/                     // Reload configuration","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":32976,"byte_end":33023,"line_start":42,"line_end":42,"column_start":1,"column_end":48}},{"value":"/                     // Reopen the log file","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":33024,"byte_end":33070,"line_start":43,"line_end":43,"column_start":1,"column_end":47}},{"value":"/                 }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":33071,"byte_end":33092,"line_start":44,"line_end":44,"column_start":1,"column_end":22}},{"value":"/                 SIGTERM | SIGINT | SIGQUIT => {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":33093,"byte_end":33144,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/                     break 'outer;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":33145,"byte_end":33182,"line_start":46,"line_end":46,"column_start":1,"column_end":38}},{"value":"/                 },","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":33183,"byte_end":33205,"line_start":47,"line_end":47,"column_start":1,"column_end":23}},{"value":"/ #               SIGUSR1 => return Ok(()),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":33206,"byte_end":33251,"line_start":48,"line_end":48,"column_start":1,"column_end":46}},{"value":"/                 _ => unreachable!(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":33252,"byte_end":33292,"line_start":49,"line_end":49,"column_start":1,"column_end":41}},{"value":"/             }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":33293,"byte_end":33310,"line_start":50,"line_end":50,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":33311,"byte_end":33324,"line_start":51,"line_end":51,"column_start":1,"column_end":14}},{"value":"/         // Do some bit of work ‒ something with upper limit on waiting, so we don't block","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":33325,"byte_end":33420,"line_start":52,"line_end":52,"column_start":1,"column_end":94}},{"value":"/         // forever with a SIGTERM already waiting.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":33421,"byte_end":33475,"line_start":53,"line_end":53,"column_start":1,"column_end":55}},{"value":"/     }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":33476,"byte_end":33485,"line_start":54,"line_end":54,"column_start":1,"column_end":10}},{"value":"/     println!(\"Terminating. Bye bye\");","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":33486,"byte_end":33527,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/     Ok(())","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":33528,"byte_end":33542,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":33543,"byte_end":33548,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":33549,"byte_end":33556,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":44},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"backend","qualname":"::iterator::backend","value":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":92},{"krate":0,"index":95},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":111},{"krate":0,"index":622},{"krate":0,"index":625},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":125},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":627},{"krate":0,"index":631},{"krate":0,"index":633},{"krate":0,"index":138},{"krate":0,"index":635},{"krate":0,"index":641},{"krate":0,"index":144},{"krate":0,"index":645},{"krate":0,"index":649},{"krate":0,"index":160},{"krate":0,"index":163},{"krate":0,"index":167},{"krate":0,"index":179},{"krate":0,"index":184},{"krate":0,"index":194},{"krate":0,"index":197}],"decl_id":null,"docs":" A backend module for implementing the iterator like\n [`iterator`][crate::iterator] module and the asynchronous\n adapter crates.","sig":null,"attributes":[{"value":"/ A backend module for implementing the iterator like","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":43082,"byte_end":43137,"line_start":1,"line_end":1,"column_start":1,"column_end":56}},{"value":"/ [`iterator`][crate::iterator] module and the asynchronous","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":43138,"byte_end":43199,"line_start":2,"line_end":2,"column_start":1,"column_end":62}},{"value":"/ adapter crates.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":43200,"byte_end":43219,"line_start":3,"line_end":3,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":43220,"byte_end":43223,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module contains generic types which abstract over the concrete","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":43224,"byte_end":43295,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"/ IO type for the self-pipe. The motivation for having this abstraction","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":43296,"byte_end":43369,"line_start":6,"line_end":6,"column_start":1,"column_end":74}},{"value":"/ are the adapter crates for different asynchronous runtimes. The runtimes","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":43370,"byte_end":43446,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ provide their own wrappers for [`std::os::unix::net::UnixStream`]","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":43447,"byte_end":43516,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/ which should be used as the internal self pipe. But large parts of the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":43517,"byte_end":43591,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/ remaining functionality doesn't depend directly onto the IO type and can","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":43592,"byte_end":43668,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ be reused.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":43669,"byte_end":43683,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":43684,"byte_end":43687,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ See also the [`SignalDelivery::with_pipe`] method for more information","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":43688,"byte_end":43762,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/ about requirements the IO types have to fulfill.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":43763,"byte_end":43815,"line_start":14,"line_end":14,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":43816,"byte_end":43819,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ As a regular user you shouldn't need to use the types in this module.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":43820,"byte_end":43893,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"/ Use the [`Signals`][crate::iterator::Signals] struct or one of the types","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":43894,"byte_end":43970,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ contained in the adapter libraries instead.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":43971,"byte_end":44018,"line_start":18,"line_end":18,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":627},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":48181,"byte_end":48187,"line_start":158,"line_end":158,"column_start":12,"column_end":18},"name":"Handle","qualname":"::iterator::backend::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630}],"decl_id":null,"docs":" A struct to control an instance of an associated type\n (like for example [`Signals`][super::Signals]).","sig":null,"attributes":[{"value":"/ A struct to control an instance of an associated type","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":47792,"byte_end":47849,"line_start":150,"line_end":150,"column_start":1,"column_end":58}},{"value":"/ (like for example [`Signals`][super::Signals]).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":47850,"byte_end":47901,"line_start":151,"line_end":151,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":47902,"byte_end":47905,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ It allows to register more signal handlers and to shutdown the signal","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":47906,"byte_end":47979,"line_start":153,"line_end":153,"column_start":1,"column_end":74}},{"value":"/ delivery. You can [`clone`][Handle::clone] this type which isn't a","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":47980,"byte_end":48050,"line_start":154,"line_end":154,"column_start":1,"column_end":71}},{"value":"/ very expensive operation. The cloned instances can be shared between","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":48051,"byte_end":48123,"line_start":155,"line_end":155,"column_start":1,"column_end":73}},{"value":"/ multiple threads.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":48124,"byte_end":48145,"line_start":156,"line_end":156,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":49383,"byte_end":49393,"line_start":192,"line_end":192,"column_start":12,"column_end":22},"name":"add_signal","qualname":"<Handle>::add_signal","value":"pub fn add_signal(&Self, c_int) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Registers another signal to the set watched by the associated instance.","sig":null,"attributes":[{"value":"/ Registers another signal to the set watched by the associated instance.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":48581,"byte_end":48656,"line_start":176,"line_end":176,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":48661,"byte_end":48664,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":48669,"byte_end":48680,"line_start":178,"line_end":178,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":48685,"byte_end":48688,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ * This is safe to call concurrently from whatever thread.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":48693,"byte_end":48754,"line_start":180,"line_end":180,"column_start":5,"column_end":66}},{"value":"/ * This is *not* safe to call from within a signal handler.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":48759,"byte_end":48821,"line_start":181,"line_end":181,"column_start":5,"column_end":67}},{"value":"/ * If the signal number was already registered previously, this is a no-op.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":48826,"byte_end":48904,"line_start":182,"line_end":182,"column_start":5,"column_end":83}},{"value":"/ * If this errors, the original set of signals is left intact.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":48909,"byte_end":48974,"line_start":183,"line_end":183,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":48979,"byte_end":48982,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":48987,"byte_end":48999,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":49004,"byte_end":49007,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ * If the given signal is [forbidden][crate::FORBIDDEN].","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":49012,"byte_end":49071,"line_start":187,"line_end":187,"column_start":5,"column_end":64}},{"value":"/ * If the signal number is negative or larger than internal limit. The limit should be","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":49076,"byte_end":49165,"line_start":188,"line_end":188,"column_start":5,"column_end":94}},{"value":"/   larger than any supported signal the OS supports.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":49170,"byte_end":49225,"line_start":189,"line_end":189,"column_start":5,"column_end":60}},{"value":"/ * If the relevant [`Exfiltrator`] does not support this particular signal. The default","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":49230,"byte_end":49320,"line_start":190,"line_end":190,"column_start":5,"column_end":95}},{"value":"/   [`SignalOnly`] one supports all signals.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":49325,"byte_end":49371,"line_start":191,"line_end":191,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":50449,"byte_end":50454,"line_start":219,"line_end":219,"column_start":12,"column_end":17},"name":"close","qualname":"<Handle>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the associated instance.","sig":null,"attributes":[{"value":"/ Closes the associated instance.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":49803,"byte_end":49838,"line_start":206,"line_end":206,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":49843,"byte_end":49846,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ This is meant to signalize termination of the signal delivery process.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":49851,"byte_end":49925,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/ After calling close:","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":49930,"byte_end":49954,"line_start":209,"line_end":209,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":49959,"byte_end":49962,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ * [`is_closed`][Handle::is_closed] will return true.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":49967,"byte_end":50023,"line_start":211,"line_end":211,"column_start":5,"column_end":61}},{"value":"/ * All currently blocking operations of associated instances","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":50028,"byte_end":50091,"line_start":212,"line_end":212,"column_start":5,"column_end":68}},{"value":"/   are interrupted and terminate.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":50096,"byte_end":50132,"line_start":213,"line_end":213,"column_start":5,"column_end":41}},{"value":"/ * Any further operations will not block.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":50137,"byte_end":50181,"line_start":214,"line_end":214,"column_start":5,"column_end":49}},{"value":"/ * Further signals may or may not be returned from the iterators. However, if any are","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":50186,"byte_end":50274,"line_start":215,"line_end":215,"column_start":5,"column_end":93}},{"value":"/   returned, these are real signals that happened.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":50279,"byte_end":50332,"line_start":216,"line_end":216,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":50337,"byte_end":50340,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ The goal is to be able to shut down any background thread that handles only the signals.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":50345,"byte_end":50437,"line_start":218,"line_end":218,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":50651,"byte_end":50660,"line_start":227,"line_end":227,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Handle>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is it closed?","sig":null,"attributes":[{"value":"/ Is it closed?","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":50576,"byte_end":50593,"line_start":224,"line_end":224,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":50598,"byte_end":50601,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ See [`close`][Handle::close].","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":50606,"byte_end":50639,"line_start":226,"line_end":226,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":635},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":50980,"byte_end":50994,"line_start":237,"line_end":237,"column_start":12,"column_end":26},"name":"SignalDelivery","qualname":"::iterator::backend::SignalDelivery","value":"SignalDelivery {  }","parent":null,"children":[{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640}],"decl_id":null,"docs":" A struct for delivering received signals to the main program flow.\n The self-pipe IO type is generic. See the\n [`with_pipe`][SignalDelivery::with_pipe] method for requirements\n for the IO type.\n","sig":null,"attributes":[{"value":"/ A struct for delivering received signals to the main program flow.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":50745,"byte_end":50815,"line_start":232,"line_end":232,"column_start":1,"column_end":71}},{"value":"/ The self-pipe IO type is generic. See the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":50816,"byte_end":50861,"line_start":233,"line_end":233,"column_start":1,"column_end":46}},{"value":"/ [`with_pipe`][SignalDelivery::with_pipe] method for requirements","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":50862,"byte_end":50930,"line_start":234,"line_end":234,"column_start":1,"column_end":69}},{"value":"/ for the IO type.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":50931,"byte_end":50951,"line_start":235,"line_end":235,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":51952,"byte_end":51961,"line_start":263,"line_end":263,"column_start":12,"column_end":21},"name":"with_pipe","qualname":"<SignalDelivery<R, E>>::with_pipe","value":"pub fn with_pipe<I, S, W>(R, W, E, I) -> Result<Self, Error> where\nI: IntoIterator<Item = S>, S: Borrow<c_int>, W: 'static + AsRawFd + Debug +\nSend + Sync","parent":null,"children":[],"decl_id":null,"docs":" Creates the `SignalDelivery` structure.","sig":null,"attributes":[{"value":"/ Creates the `SignalDelivery` structure.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":51186,"byte_end":51229,"line_start":247,"line_end":247,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":51234,"byte_end":51237,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ The read and write arguments must be the ends of a suitable pipe type. These are used","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":51242,"byte_end":51331,"line_start":249,"line_end":249,"column_start":5,"column_end":94}},{"value":"/ for communication between the signal handler and main program flow.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":51336,"byte_end":51407,"line_start":250,"line_end":250,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":51412,"byte_end":51415,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Registers all the signals listed. The same restrictions (panics, errors) apply as with","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":51420,"byte_end":51510,"line_start":252,"line_end":252,"column_start":5,"column_end":95}},{"value":"/ [`add_signal`][Handle::add_signal].","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":51515,"byte_end":51554,"line_start":253,"line_end":253,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":51559,"byte_end":51562,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Requirements for the pipe type","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":51567,"byte_end":51603,"line_start":255,"line_end":255,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":51608,"byte_end":51611,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ * Must support [`send`](https://man7.org/linux/man-pages/man2/send.2.html) for","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":51616,"byte_end":51698,"line_start":257,"line_end":257,"column_start":5,"column_end":87}},{"value":"/   asynchronously writing bytes to the write end","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":51703,"byte_end":51754,"line_start":258,"line_end":258,"column_start":5,"column_end":56}},{"value":"/ * Must support [`recv`](https://man7.org/linux/man-pages/man2/recv.2.html) for","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":51759,"byte_end":51841,"line_start":259,"line_end":259,"column_start":5,"column_end":87}},{"value":"/   reading bytes from the read end","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":51846,"byte_end":51883,"line_start":260,"line_end":260,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":51888,"byte_end":51891,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ So UnixStream is a good choice for this.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":51896,"byte_end":51940,"line_start":262,"line_end":262,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":52975,"byte_end":52983,"line_start":290,"line_end":290,"column_start":12,"column_end":20},"name":"get_read","qualname":"<SignalDelivery<R, E>>::get_read","value":"pub fn get_read(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the read end of the self pipe","sig":null,"attributes":[{"value":"/ Get a reference to the read end of the self pipe","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":52561,"byte_end":52613,"line_start":283,"line_end":283,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":52618,"byte_end":52621,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ You may use this method to register the underlying file descriptor","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":52626,"byte_end":52696,"line_start":285,"line_end":285,"column_start":5,"column_end":75}},{"value":"/ with an eventing system (e. g. epoll) to get notified if there are","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":52701,"byte_end":52771,"line_start":286,"line_end":286,"column_start":5,"column_end":75}},{"value":"/ bytes in the pipe. If the event system reports the file descriptor","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":52776,"byte_end":52846,"line_start":287,"line_end":287,"column_start":5,"column_end":75}},{"value":"/ ready for reading you can then call [`pending`][SignalDelivery::pending]","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":52851,"byte_end":52927,"line_start":288,"line_end":288,"column_start":5,"column_end":81}},{"value":"/ to get the arrived signals.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":52932,"byte_end":52963,"line_start":289,"line_end":289,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":53212,"byte_end":53224,"line_start":298,"line_end":298,"column_start":12,"column_end":24},"name":"get_read_mut","qualname":"<SignalDelivery<R, E>>::get_read_mut","value":"pub fn get_read_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the read end of the self pipe","sig":null,"attributes":[{"value":"/ Get a mutable reference to the read end of the self pipe","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":53029,"byte_end":53089,"line_start":294,"line_end":294,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":53094,"byte_end":53097,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ See the [`get_read`][SignalDelivery::get_read] method for some additional","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":53102,"byte_end":53179,"line_start":296,"line_end":296,"column_start":5,"column_end":82}},{"value":"/ information.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":53184,"byte_end":53200,"line_start":297,"line_end":297,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":54571,"byte_end":54578,"line_start":331,"line_end":331,"column_start":12,"column_end":19},"name":"pending","qualname":"<SignalDelivery<R, E>>::pending","value":"pub fn pending(&mut Self) -> Pending<E>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator of already received signals.","sig":null,"attributes":[{"value":"/ Returns an iterator of already received signals.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":54029,"byte_end":54081,"line_start":322,"line_end":322,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":54086,"byte_end":54089,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ This returns an iterator over all the signal numbers of the signals received since last","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":54094,"byte_end":54185,"line_start":324,"line_end":324,"column_start":5,"column_end":96}},{"value":"/ time they were read (out of the set registered by this `SignalDelivery` instance). Note","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":54190,"byte_end":54281,"line_start":325,"line_end":325,"column_start":5,"column_end":96}},{"value":"/ that they are returned in arbitrary order and a signal number is returned only once even","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":54286,"byte_end":54378,"line_start":326,"line_end":326,"column_start":5,"column_end":97}},{"value":"/ if it was received multiple times.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":54383,"byte_end":54421,"line_start":327,"line_end":327,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":54426,"byte_end":54429,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ This method returns immediately (does not block) and may produce an empty iterator if","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":54434,"byte_end":54523,"line_start":329,"line_end":329,"column_start":5,"column_end":94}},{"value":"/ there are no signals ready.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":54528,"byte_end":54559,"line_start":330,"line_end":330,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":55271,"byte_end":55283,"line_start":345,"line_end":345,"column_start":12,"column_end":24},"name":"poll_pending","qualname":"<SignalDelivery<R, E>>::poll_pending","value":"pub fn poll_pending<F>(&mut Self, &mut F) -> Result<Option<Pending<E>>, Error>\nwhere F: FnMut(&mut R) -> Result<bool, Error>","parent":null,"children":[],"decl_id":null,"docs":" Checks the reading end of the self pipe for available signals.","sig":null,"attributes":[{"value":"/ Checks the reading end of the self pipe for available signals.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":54687,"byte_end":54753,"line_start":336,"line_end":336,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":54758,"byte_end":54761,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ If there are no signals available or this instance was already closed it returns","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":54766,"byte_end":54850,"line_start":338,"line_end":338,"column_start":5,"column_end":89}},{"value":"/ [`Option::None`]. If there are some signals it returns a [`Pending`]","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":54855,"byte_end":54927,"line_start":339,"line_end":339,"column_start":5,"column_end":77}},{"value":"/ instance wrapped inside a [`Option::Some`]. However, due to implementation details,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":54932,"byte_end":55019,"line_start":340,"line_end":340,"column_start":5,"column_end":92}},{"value":"/ this still can produce an empty iterator.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":55024,"byte_end":55069,"line_start":341,"line_end":341,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":55074,"byte_end":55077,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ This method doesn't check the reading end by itself but uses the passed in callback.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":55082,"byte_end":55170,"line_start":343,"line_end":343,"column_start":5,"column_end":93}},{"value":"/ This method blocks if and only if the callback blocks trying to read some bytes.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":55175,"byte_end":55259,"line_start":344,"line_end":344,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":55865,"byte_end":55871,"line_start":364,"line_end":364,"column_start":12,"column_end":18},"name":"handle","qualname":"<SignalDelivery<R, E>>::handle","value":"pub fn handle(&Self) -> Handle","parent":null,"children":[],"decl_id":null,"docs":" Get a [`Handle`] for this `SignalDelivery` instance.","sig":null,"attributes":[{"value":"/ Get a [`Handle`] for this `SignalDelivery` instance.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":55687,"byte_end":55743,"line_start":360,"line_end":360,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":55748,"byte_end":55751,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ This can be used to add further signals or close the whole","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":55756,"byte_end":55818,"line_start":362,"line_end":362,"column_start":5,"column_end":67}},{"value":"/ signal delivery mechanism.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":55823,"byte_end":55853,"line_start":363,"line_end":363,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":645},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":56075,"byte_end":56082,"line_start":373,"line_end":373,"column_start":12,"column_end":19},"name":"Pending","qualname":"::iterator::backend::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":648}],"decl_id":null,"docs":" The iterator of one batch of signals.","sig":null,"attributes":[{"value":"/ The iterator of one batch of signals.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":55928,"byte_end":55969,"line_start":369,"line_end":369,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":55970,"byte_end":55973,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/ This is returned by the [`pending`][SignalDelivery::pending] method.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":55974,"byte_end":56046,"line_start":371,"line_end":371,"column_start":1,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":169},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":56976,"byte_end":56982,"line_start":409,"line_end":409,"column_start":5,"column_end":11},"name":"Signal","qualname":"::iterator::backend::PollResult::Signal","value":"PollResult::Signal(O)","parent":{"krate":0,"index":167},"children":[],"decl_id":null,"docs":" A signal arrived\n","sig":null,"attributes":[{"value":"/ A signal arrived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":56951,"byte_end":56971,"line_start":408,"line_end":408,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":172},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":57064,"byte_end":57071,"line_start":411,"line_end":411,"column_start":5,"column_end":12},"name":"Pending","qualname":"::iterator::backend::PollResult::Pending","value":"PollResult::Pending","parent":{"krate":0,"index":167},"children":[],"decl_id":null,"docs":" There are no signals yet but there may arrive some in the future\n","sig":null,"attributes":[{"value":"/ There are no signals yet but there may arrive some in the future","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":56991,"byte_end":57059,"line_start":410,"line_end":410,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":174},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":57159,"byte_end":57165,"line_start":413,"line_end":413,"column_start":5,"column_end":11},"name":"Closed","qualname":"::iterator::backend::PollResult::Closed","value":"PollResult::Closed","parent":{"krate":0,"index":167},"children":[],"decl_id":null,"docs":" The iterator was closed. There won't be any signals reported from now on.\n","sig":null,"attributes":[{"value":"/ The iterator was closed. There won't be any signals reported from now on.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":57077,"byte_end":57154,"line_start":412,"line_end":412,"column_start":5,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":176},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":57233,"byte_end":57236,"line_start":415,"line_end":415,"column_start":5,"column_end":8},"name":"Err","qualname":"::iterator::backend::PollResult::Err","value":"PollResult::Err(Error)","parent":{"krate":0,"index":167},"children":[],"decl_id":null,"docs":" An error happened during polling for arrived signals.\n","sig":null,"attributes":[{"value":"/ An error happened during polling for arrived signals.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":57171,"byte_end":57228,"line_start":414,"line_end":414,"column_start":5,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":167},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":56931,"byte_end":56941,"line_start":407,"line_end":407,"column_start":10,"column_end":20},"name":"PollResult","qualname":"::iterator::backend::PollResult","value":"pub enum PollResult<O> { Signal(O), Pending, Closed, Err(Error), }","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":176}],"decl_id":null,"docs":" Possible results of the [`poll_signal`][SignalIterator::poll_signal] function.\n","sig":null,"attributes":[{"value":"/ Possible results of the [`poll_signal`][SignalIterator::poll_signal] function.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":56839,"byte_end":56921,"line_start":406,"line_end":406,"column_start":1,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":179},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":57305,"byte_end":57319,"line_start":419,"line_end":419,"column_start":12,"column_end":26},"name":"SignalIterator","qualname":"::iterator::backend::SignalIterator","value":"SignalIterator {  }","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183}],"decl_id":null,"docs":" An infinite iterator of received signals.\n","sig":null,"attributes":[{"value":"/ An infinite iterator of received signals.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":57248,"byte_end":57293,"line_start":418,"line_end":418,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":57562,"byte_end":57565,"line_start":427,"line_end":427,"column_start":12,"column_end":15},"name":"new","qualname":"<SignalIterator<SD, E>>::new","value":"pub fn new<R>(SD) -> Self where SD: BorrowMut<SignalDelivery<R, E>>,\nR: 'static + AsRawFd + Send + Sync","parent":null,"children":[],"decl_id":null,"docs":" Create a new infinite iterator for signals registered with the passed\n in [`SignalDelivery`] instance.\n","sig":null,"attributes":[{"value":"/ Create a new infinite iterator for signals registered with the passed","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":57437,"byte_end":57510,"line_start":425,"line_end":425,"column_start":5,"column_end":78}},{"value":"/ in [`SignalDelivery`] instance.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":57515,"byte_end":57550,"line_start":426,"line_end":426,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":58601,"byte_end":58612,"line_start":447,"line_end":447,"column_start":12,"column_end":23},"name":"poll_signal","qualname":"<SignalIterator<SD, E>>::poll_signal","value":"pub fn poll_signal<R, F>(&mut Self, &mut F) -> PollResult<E::Output> where\nSD: BorrowMut<SignalDelivery<R, E>>, R: 'static + AsRawFd + Send + Sync,\nF: FnMut(&mut R) -> Result<bool, Error>","parent":null,"children":[],"decl_id":null,"docs":" Return a signal if there is one or tell the caller that there is none at the moment.","sig":null,"attributes":[{"value":"/ Return a signal if there is one or tell the caller that there is none at the moment.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":57792,"byte_end":57880,"line_start":436,"line_end":436,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":57885,"byte_end":57888,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ You have to pass in a callback which checks the underlying reading end of the pipe if","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":57893,"byte_end":57982,"line_start":438,"line_end":438,"column_start":5,"column_end":94}},{"value":"/ there may be any pending signals. This callback may or may not block. If the callback","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":57987,"byte_end":58076,"line_start":439,"line_end":439,"column_start":5,"column_end":94}},{"value":"/ returns [`true`] this method will try to fetch the next signal and return it as a","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":58081,"byte_end":58166,"line_start":440,"line_end":440,"column_start":5,"column_end":90}},{"value":"/ [`PollResult::Signal`]. If the callback returns [`false`] the method will return","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":58171,"byte_end":58255,"line_start":441,"line_end":441,"column_start":5,"column_end":89}},{"value":"/ [`PollResult::Pending`] and assume it will be called again at a later point in time.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":58260,"byte_end":58348,"line_start":442,"line_end":442,"column_start":5,"column_end":93}},{"value":"/ The callback may be called any number of times by this function.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":58353,"byte_end":58421,"line_start":443,"line_end":443,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":58426,"byte_end":58429,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ If the iterator was closed by the [`close`][Handle::close] method of the associtated","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":58434,"byte_end":58522,"line_start":445,"line_end":445,"column_start":5,"column_end":93}},{"value":"/ [`Handle`] this method will return [`PollResult::Closed`].","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":58527,"byte_end":58589,"line_start":446,"line_end":446,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":59781,"byte_end":59787,"line_start":475,"line_end":475,"column_start":12,"column_end":18},"name":"handle","qualname":"<SignalIterator<SD, E>>::handle","value":"pub fn handle<R>(&Self) -> Handle where SD: Borrow<SignalDelivery<R, E>>,\nR: 'static + AsRawFd + Send + Sync","parent":null,"children":[],"decl_id":null,"docs":" Get a shareable [`Handle`] for this instance.","sig":null,"attributes":[{"value":"/ Get a shareable [`Handle`] for this instance.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":59573,"byte_end":59622,"line_start":471,"line_end":471,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":59627,"byte_end":59630,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ This can be used to add further signals or terminate the whole","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":59635,"byte_end":59701,"line_start":473,"line_end":473,"column_start":5,"column_end":71}},{"value":"/ signal iteration using the [`close`][Handle::close] method.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":59706,"byte_end":59769,"line_start":474,"line_end":474,"column_start":5,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":194},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":60065,"byte_end":60085,"line_start":486,"line_end":486,"column_start":10,"column_end":30},"name":"OwningSignalIterator","qualname":"::iterator::backend::OwningSignalIterator","value":"SignalIterator<SignalDelivery<R, E>, E>","parent":null,"children":[],"decl_id":null,"docs":" A signal iterator which consumes a [`SignalDelivery`] instance and takes\n ownership of it.\n","sig":null,"attributes":[{"value":"/ A signal iterator which consumes a [`SignalDelivery`] instance and takes","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":59958,"byte_end":60034,"line_start":484,"line_end":484,"column_start":1,"column_end":77}},{"value":"/ ownership of it.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":60035,"byte_end":60055,"line_start":485,"line_end":485,"column_start":1,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":197},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":60237,"byte_end":60254,"line_start":490,"line_end":490,"column_start":10,"column_end":27},"name":"RefSignalIterator","qualname":"::iterator::backend::RefSignalIterator","value":"SignalIterator<&'a mut SignalDelivery<R, E>, E>","parent":null,"children":[],"decl_id":null,"docs":" A signal iterator which takes a mutable reference to a [`SignalDelivery`]\n instance.\n","sig":null,"attributes":[{"value":"/ A signal iterator which takes a mutable reference to a [`SignalDelivery`]","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":60136,"byte_end":60213,"line_start":488,"line_end":488,"column_start":1,"column_end":78}},{"value":"/ instance.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":60214,"byte_end":60227,"line_start":489,"line_end":489,"column_start":1,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":201},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"exfiltrator","qualname":"::iterator::exfiltrator","value":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":247},{"krate":0,"index":250},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":668},{"krate":0,"index":670},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":675},{"krate":0,"index":271}],"decl_id":null,"docs":" An abstraction over exfiltrating information out of signal handlers.","sig":null,"attributes":[{"value":"/ An abstraction over exfiltrating information out of signal handlers.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":60317,"byte_end":60389,"line_start":1,"line_end":1,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":60390,"byte_end":60393,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The [`Exfiltrator`] trait provides a way to abstract the information extracted from a signal","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":60394,"byte_end":60490,"line_start":3,"line_end":3,"column_start":1,"column_end":97}},{"value":"/ handler and the way it is extracted out of it.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":60491,"byte_end":60541,"line_start":4,"line_end":4,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":60542,"byte_end":60545,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The implementations can be used to parametrize the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":60546,"byte_end":60600,"line_start":6,"line_end":6,"column_start":1,"column_end":55}},{"value":"/ [`SignalsInfo`][crate::iterator::SignalsInfo] to specify what results are returned.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":60601,"byte_end":60688,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":60689,"byte_end":60692,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Sealed","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":60693,"byte_end":60705,"line_start":9,"line_end":9,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":60706,"byte_end":60709,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Currently, the trait is sealed and all methods hidden. This is likely temporary, until some","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":60710,"byte_end":60805,"line_start":11,"line_end":11,"column_start":1,"column_end":96}},{"value":"/ experience with them is gained.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":60806,"byte_end":60841,"line_start":12,"line_end":12,"column_start":1,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":202},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/raw.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"raw","qualname":"::iterator::exfiltrator::raw","value":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/raw.rs","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":207},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":220},{"krate":0,"index":652},{"krate":0,"index":655},{"krate":0,"index":657},{"krate":0,"index":223},{"krate":0,"index":659},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":664},{"krate":0,"index":666},{"krate":0,"index":225}],"decl_id":null,"docs":" An exfiltrator providing the raw [`siginfo_t`].\n","sig":null,"attributes":[{"value":"/ An exfiltrator providing the raw [`siginfo_t`].","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/raw.rs","byte_start":66921,"byte_end":66972,"line_start":1,"line_end":1,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":652},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/raw.rs","byte_start":67747,"byte_end":67751,"line_start":21,"line_end":21,"column_start":12,"column_end":16},"name":"Slot","qualname":"::iterator::exfiltrator::raw::Slot","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":659},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/raw.rs","byte_start":69083,"byte_end":69097,"line_start":61,"line_end":61,"column_start":12,"column_end":26},"name":"WithRawSiginfo","qualname":"::iterator::exfiltrator::raw::WithRawSiginfo","value":"","parent":null,"children":[],"decl_id":null,"docs":" The [`Exfiltrator`][crate::iterator::exfiltrator::Exfiltrator] that produces the raw\n [`libc::siginfo_t`]. Note that it might look differently on different OSes and its API is a\n little bit more limited than its C counterpart.","sig":null,"attributes":[{"value":"/ The [`Exfiltrator`][crate::iterator::exfiltrator::Exfiltrator] that produces the raw","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/raw.rs","byte_start":67977,"byte_end":68065,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/ [`libc::siginfo_t`]. Note that it might look differently on different OSes and its API is a","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/raw.rs","byte_start":68066,"byte_end":68161,"line_start":33,"line_end":33,"column_start":1,"column_end":96}},{"value":"/ little bit more limited than its C counterpart.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/raw.rs","byte_start":68162,"byte_end":68213,"line_start":34,"line_end":34,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/raw.rs","byte_start":68214,"byte_end":68217,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ You might prefer the [`WithOrigin`][super::WithOrigin] if you simply need information about the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/raw.rs","byte_start":68218,"byte_end":68317,"line_start":36,"line_end":36,"column_start":1,"column_end":100}},{"value":"/ origin of the signal.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/raw.rs","byte_start":68318,"byte_end":68343,"line_start":37,"line_end":37,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/raw.rs","byte_start":68344,"byte_end":68347,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/raw.rs","byte_start":68348,"byte_end":68362,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/raw.rs","byte_start":68363,"byte_end":68366,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/raw.rs","byte_start":68367,"byte_end":68378,"line_start":41,"line_end":41,"column_start":1,"column_end":12}},{"value":"/ # use signal_hook::consts::SIGUSR1;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/raw.rs","byte_start":68379,"byte_end":68418,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/ # use signal_hook::iterator::SignalsInfo;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/raw.rs","byte_start":68419,"byte_end":68464,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"/ # use signal_hook::iterator::exfiltrator::WithRawSiginfo;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/raw.rs","byte_start":68465,"byte_end":68526,"line_start":44,"line_end":44,"column_start":1,"column_end":62}},{"value":"/ #","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/raw.rs","byte_start":68527,"byte_end":68532,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ # fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/raw.rs","byte_start":68533,"byte_end":68580,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/ // Subscribe to SIGUSR1, with information about the process.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/raw.rs","byte_start":68581,"byte_end":68645,"line_start":47,"line_end":47,"column_start":1,"column_end":65}},{"value":"/ let mut signals = SignalsInfo::<WithRawSiginfo>::new(&[SIGUSR1])?;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/raw.rs","byte_start":68646,"byte_end":68716,"line_start":48,"line_end":48,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/raw.rs","byte_start":68717,"byte_end":68720,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // Send ourselves a signal.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/raw.rs","byte_start":68721,"byte_end":68752,"line_start":50,"line_end":50,"column_start":1,"column_end":32}},{"value":"/ signal_hook::low_level::raise(SIGUSR1)?;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/raw.rs","byte_start":68753,"byte_end":68797,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/raw.rs","byte_start":68798,"byte_end":68801,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // Grab the signal and look into the details.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/raw.rs","byte_start":68802,"byte_end":68851,"line_start":53,"line_end":53,"column_start":1,"column_end":50}},{"value":"/ let received = signals.wait().next().unwrap();","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/raw.rs","byte_start":68852,"byte_end":68902,"line_start":54,"line_end":54,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/raw.rs","byte_start":68903,"byte_end":68906,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Not much else is useful in a cross-platform way :-(","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/raw.rs","byte_start":68907,"byte_end":68965,"line_start":56,"line_end":56,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(SIGUSR1, received.si_signo);","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/raw.rs","byte_start":68966,"byte_end":69009,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/raw.rs","byte_start":69010,"byte_end":69024,"line_start":58,"line_end":58,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/raw.rs","byte_start":69025,"byte_end":69032,"line_start":59,"line_end":59,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":261},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":61904,"byte_end":61915,"line_start":43,"line_end":43,"column_start":22,"column_end":33},"name":"Exfiltrator","qualname":"::iterator::exfiltrator::sealed::Exfiltrator","value":"Exfiltrator: Debug + Send + Sync + 'static","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267}],"decl_id":null,"docs":" The actual implementation of the [`Exfiltrator`][super::Exfiltrator].","sig":null,"attributes":[{"value":"/ The actual implementation of the [`Exfiltrator`][super::Exfiltrator].","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":61222,"byte_end":61295,"line_start":32,"line_end":32,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":61300,"byte_end":61303,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ For now, this is hidden from the public API, but the intention is to move it to a public","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":61308,"byte_end":61400,"line_start":34,"line_end":34,"column_start":5,"column_end":97}},{"value":"/ place so users can implement it eventually, once we verify that it works well.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":61405,"byte_end":61487,"line_start":35,"line_end":35,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":61492,"byte_end":61495,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":61500,"byte_end":61512,"line_start":37,"line_end":37,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":61517,"byte_end":61520,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ The trait is unsafe as the [`Exfiltrator::store`] is called inside the signal handler and","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":61525,"byte_end":61618,"line_start":39,"line_end":39,"column_start":5,"column_end":98}},{"value":"/ must be async-signal-safe. Implementing this correctly may be difficult, therefore care","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":61623,"byte_end":61714,"line_start":40,"line_end":40,"column_start":5,"column_end":96}},{"value":"/ needs to be taken. One method known to work is encoding the data into an atomic variable.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":61719,"byte_end":61812,"line_start":41,"line_end":41,"column_start":5,"column_end":98}},{"value":"/ Other, less limiting approaches, will be eventually explored.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":61817,"byte_end":61882,"line_start":42,"line_end":42,"column_start":5,"column_end":70}}]},{"kind":"Type","id":{"krate":0,"index":262},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":62388,"byte_end":62395,"line_start":52,"line_end":52,"column_start":14,"column_end":21},"name":"Storage","qualname":"::iterator::exfiltrator::sealed::Exfiltrator::Storage","value":"type Storage: Debug + Default + Send + Sync + 'static;","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" One slot for storing the data.","sig":null,"attributes":[{"value":"/ One slot for storing the data.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":61957,"byte_end":61991,"line_start":44,"line_end":44,"column_start":9,"column_end":43}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":62000,"byte_end":62003,"line_start":45,"line_end":45,"column_start":9,"column_end":12}},{"value":"/ Each signal will get its one slot of this type, independent of other signals. It can","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":62012,"byte_end":62100,"line_start":46,"line_end":46,"column_start":9,"column_end":97}},{"value":"/ store the information in there inside the signal handler and will be loaded from it in","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":62109,"byte_end":62199,"line_start":47,"line_end":47,"column_start":9,"column_end":99}},{"value":"/ load.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":62208,"byte_end":62217,"line_start":48,"line_end":48,"column_start":9,"column_end":18}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":62226,"byte_end":62229,"line_start":49,"line_end":49,"column_start":9,"column_end":12}},{"value":"/ Each slot is initialized to the [`Default`] value. It is expected this value represents","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":62238,"byte_end":62329,"line_start":50,"line_end":50,"column_start":9,"column_end":100}},{"value":"/ „no signal delivered“ state.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":62338,"byte_end":62374,"line_start":51,"line_end":51,"column_start":9,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":263},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":62495,"byte_end":62501,"line_start":55,"line_end":55,"column_start":14,"column_end":20},"name":"Output","qualname":"::iterator::exfiltrator::sealed::Exfiltrator::Output","value":"type Output;","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" The type returned to the user.\n","sig":null,"attributes":[{"value":"/ The type returned to the user.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":62447,"byte_end":62481,"line_start":54,"line_end":54,"column_start":9,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":62853,"byte_end":62868,"line_start":62,"line_end":62,"column_start":12,"column_end":27},"name":"supports_signal","qualname":"::iterator::exfiltrator::sealed::Exfiltrator::supports_signal","value":"pub fn supports_signal(&Self, c_int) -> bool","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" If the given signal is supported by this specific exfiltrator.","sig":null,"attributes":[{"value":"/ If the given signal is supported by this specific exfiltrator.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":62512,"byte_end":62578,"line_start":57,"line_end":57,"column_start":9,"column_end":75}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":62587,"byte_end":62590,"line_start":58,"line_end":58,"column_start":9,"column_end":12}},{"value":"/ Not all information is available to all signals, therefore not all exfiltrators must","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":62599,"byte_end":62687,"line_start":59,"line_end":59,"column_start":9,"column_end":97}},{"value":"/ support all signals. If `false` is returned, the user is prevented for registering such","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":62696,"byte_end":62787,"line_start":60,"line_end":60,"column_start":9,"column_end":100}},{"value":"/ signal number with the given exfiltrator.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":62796,"byte_end":62841,"line_start":61,"line_end":61,"column_start":9,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":63525,"byte_end":63530,"line_start":76,"line_end":76,"column_start":12,"column_end":17},"name":"store","qualname":"::iterator::exfiltrator::sealed::Exfiltrator::store","value":"pub fn store(&Self, &Self::Storage, c_int, &siginfo_t)","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Puts the signal information inside the slot.","sig":null,"attributes":[{"value":"/ Puts the signal information inside the slot.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":62906,"byte_end":62954,"line_start":64,"line_end":64,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":62963,"byte_end":62966,"line_start":65,"line_end":65,"column_start":9,"column_end":12}},{"value":"/ It needs to somehow store the relevant information and the fact that a signal happened.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":62975,"byte_end":63066,"line_start":66,"line_end":66,"column_start":9,"column_end":100}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":63075,"byte_end":63078,"line_start":67,"line_end":67,"column_start":9,"column_end":12}},{"value":"/ # Warning","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":63087,"byte_end":63100,"line_start":68,"line_end":68,"column_start":9,"column_end":22}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":63109,"byte_end":63112,"line_start":69,"line_end":69,"column_start":9,"column_end":12}},{"value":"/ This will be called inside the signal handler. It needs to be async-signal-safe. In","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":63121,"byte_end":63208,"line_start":70,"line_end":70,"column_start":9,"column_end":96}},{"value":"/ particular, very small amount of operations are allowed in there. This namely does","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":63217,"byte_end":63303,"line_start":71,"line_end":71,"column_start":9,"column_end":95}},{"value":"/ *not* include any locking nor allocation.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":63312,"byte_end":63357,"line_start":72,"line_end":72,"column_start":9,"column_end":54}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":63366,"byte_end":63369,"line_start":73,"line_end":73,"column_start":9,"column_end":12}},{"value":"/ It is also possible that multiple store methods are called concurrently; it is up to","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":63378,"byte_end":63466,"line_start":74,"line_end":74,"column_start":9,"column_end":97}},{"value":"/ the implementor to deal with that.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":63475,"byte_end":63513,"line_start":75,"line_end":75,"column_start":9,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":64611,"byte_end":64615,"line_start":94,"line_end":94,"column_start":12,"column_end":16},"name":"load","qualname":"::iterator::exfiltrator::sealed::Exfiltrator::load","value":"pub fn load(&Self, &Self::Storage, c_int) -> Option<Self::Output>","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Loads the signal information from the given slot.","sig":null,"attributes":[{"value":"/ Loads the signal information from the given slot.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":63603,"byte_end":63656,"line_start":78,"line_end":78,"column_start":9,"column_end":62}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":63665,"byte_end":63668,"line_start":79,"line_end":79,"column_start":9,"column_end":12}},{"value":"/ The method shall check if the signal happened (it may be possible to be called without","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":63677,"byte_end":63767,"line_start":80,"line_end":80,"column_start":9,"column_end":99}},{"value":"/ the signal previously being delivered; it is up to the implementer to recognize it). It","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":63776,"byte_end":63867,"line_start":81,"line_end":81,"column_start":9,"column_end":100}},{"value":"/ is assumed the [`Default`] value is recognized as no signal delivered.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":63876,"byte_end":63950,"line_start":82,"line_end":82,"column_start":9,"column_end":83}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":63959,"byte_end":63962,"line_start":83,"line_end":83,"column_start":9,"column_end":12}},{"value":"/ If it was delivered, the method shall extract the relevant information *and reset the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":63971,"byte_end":64060,"line_start":84,"line_end":84,"column_start":9,"column_end":98}},{"value":"/ slot* to the no signal delivered state.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":64069,"byte_end":64112,"line_start":85,"line_end":85,"column_start":9,"column_end":52}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":64121,"byte_end":64124,"line_start":86,"line_end":86,"column_start":9,"column_end":12}},{"value":"/ It shall return `Some(value)` if the signal was successfully received and `None` in","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":64133,"byte_end":64220,"line_start":87,"line_end":87,"column_start":9,"column_end":96}},{"value":"/ case no signal was delivered.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":64229,"byte_end":64262,"line_start":88,"line_end":88,"column_start":9,"column_end":42}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":64271,"byte_end":64274,"line_start":89,"line_end":89,"column_start":9,"column_end":12}},{"value":"/ No blocking shall happen inside this method. It may be called concurrently with","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":64283,"byte_end":64366,"line_start":90,"line_end":90,"column_start":9,"column_end":92}},{"value":"/ [`store`][Exfiltrator::store] (due to how signals work, concurrently even inside the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":64375,"byte_end":64463,"line_start":91,"line_end":91,"column_start":9,"column_end":97}},{"value":"/ same thread ‒ a `store` may „interrupt“ a call to `load`). It is up to the implementer","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":64472,"byte_end":64568,"line_start":92,"line_end":92,"column_start":9,"column_end":99}},{"value":"/ to deal with that.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":64577,"byte_end":64599,"line_start":93,"line_end":93,"column_start":9,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":65437,"byte_end":65441,"line_start":106,"line_end":106,"column_start":12,"column_end":16},"name":"init","qualname":"::iterator::exfiltrator::sealed::Exfiltrator::init","value":"pub fn init(&Self, &Self::Storage, c_int)","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Initialize the given slot for the given signal before the first use.","sig":null,"attributes":[{"value":"/ Initialize the given slot for the given signal before the first use.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":64694,"byte_end":64766,"line_start":96,"line_end":96,"column_start":9,"column_end":81}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":64775,"byte_end":64778,"line_start":97,"line_end":97,"column_start":9,"column_end":12}},{"value":"/ This is called before the first use of the given slot (and it is annotated with the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":64787,"byte_end":64874,"line_start":98,"line_end":98,"column_start":9,"column_end":96}},{"value":"/ corresponding signal). The default does nothing, this is just an opportunity to","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":64883,"byte_end":64966,"line_start":99,"line_end":99,"column_start":9,"column_end":92}},{"value":"/ allocate data lazily (this is called outside of the signal handler, so it doesn't have","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":64975,"byte_end":65065,"line_start":100,"line_end":100,"column_start":9,"column_end":99}},{"value":"/ to be async-signal-safe). It will be called at most once for each slot.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":65074,"byte_end":65149,"line_start":101,"line_end":101,"column_start":9,"column_end":84}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":65158,"byte_end":65161,"line_start":102,"line_end":102,"column_start":9,"column_end":12}},{"value":"/ Note that you can rely on this being called for correctness, but not for safety (this","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":65170,"byte_end":65259,"line_start":103,"line_end":103,"column_start":9,"column_end":98}},{"value":"/ crate calls it before the first use, but a user abusing the trait might not and in such","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":65268,"byte_end":65359,"line_start":104,"line_end":104,"column_start":9,"column_end":100}},{"value":"/ case it is OK to eg. lose signals, but not segfault).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":65368,"byte_end":65425,"line_start":105,"line_end":105,"column_start":9,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":268},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":65958,"byte_end":65969,"line_start":120,"line_end":120,"column_start":11,"column_end":22},"name":"Exfiltrator","qualname":"::iterator::exfiltrator::Exfiltrator","value":"Exfiltrator: sealed::Exfiltrator","parent":null,"children":[],"decl_id":null,"docs":" A trait describing what and how is extracted from signal handlers.","sig":null,"attributes":[{"value":"/ A trait describing what and how is extracted from signal handlers.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":65679,"byte_end":65749,"line_start":115,"line_end":115,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":65750,"byte_end":65753,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ By choosing a specific implementor as the type parameter for","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":65754,"byte_end":65818,"line_start":117,"line_end":117,"column_start":1,"column_end":65}},{"value":"/ [`SignalsInfo`][crate::iterator::SignalsInfo], one can pick how much and what information is","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":65819,"byte_end":65915,"line_start":118,"line_end":118,"column_start":1,"column_end":97}},{"value":"/ returned from the iterator.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":65916,"byte_end":65947,"line_start":119,"line_end":119,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":668},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":66326,"byte_end":66336,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"SignalOnly","qualname":"::iterator::exfiltrator::SignalOnly","value":"","parent":null,"children":[],"decl_id":null,"docs":" An [`Exfiltrator`] providing just the signal numbers.","sig":null,"attributes":[{"value":"/ An [`Exfiltrator`] providing just the signal numbers.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":66046,"byte_end":66103,"line_start":124,"line_end":124,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":66104,"byte_end":66107,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ This is the basic exfiltrator for most needs. For that reason, there's the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":66108,"byte_end":66186,"line_start":126,"line_end":126,"column_start":1,"column_end":79}},{"value":"/ [`crate::iterator::Signals`] type alias, to simplify the type names for usual needs.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":66187,"byte_end":66275,"line_start":127,"line_end":127,"column_start":1,"column_end":89}}]},{"kind":"Struct","id":{"krate":0,"index":334},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":35875,"byte_end":35886,"line_start":129,"line_end":129,"column_start":12,"column_end":23},"name":"SignalsInfo","qualname":"::iterator::SignalsInfo","value":"","parent":null,"children":[],"decl_id":null,"docs":" The main structure of the module, representing interest in some signals.","sig":null,"attributes":[{"value":"/ The main structure of the module, representing interest in some signals.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":33940,"byte_end":34016,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":34017,"byte_end":34020,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ Unlike the helpers in other modules, this registers the signals when created and unregisters","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":34021,"byte_end":34117,"line_start":76,"line_end":76,"column_start":1,"column_end":97}},{"value":"/ them on drop. It provides the pending signals during its lifetime, either in batches or as an","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":34118,"byte_end":34215,"line_start":77,"line_end":77,"column_start":1,"column_end":98}},{"value":"/ infinite iterator.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":34216,"byte_end":34238,"line_start":78,"line_end":78,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":34239,"byte_end":34242,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ Most users will want to use it through the [`Signals`] type alias for simplicity.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":34243,"byte_end":34328,"line_start":80,"line_end":80,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":34329,"byte_end":34332,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ # Multiple threads","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":34333,"byte_end":34355,"line_start":82,"line_end":82,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":34356,"byte_end":34359,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Instances of this struct can be [sent][std::marker::Send] to other threads. In a multithreaded","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":34360,"byte_end":34458,"line_start":84,"line_end":84,"column_start":1,"column_end":99}},{"value":"/ application this can be used to dedicate a separate thread for signal handling. In this case","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":34459,"byte_end":34555,"line_start":85,"line_end":85,"column_start":1,"column_end":97}},{"value":"/ you should get a [`Handle`] using the [`handle`][Signals::handle] method before sending the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":34556,"byte_end":34651,"line_start":86,"line_end":86,"column_start":1,"column_end":96}},{"value":"/ `Signals` instance to a background thread. With the handle you will be able to shut down the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":34652,"byte_end":34748,"line_start":87,"line_end":87,"column_start":1,"column_end":97}},{"value":"/ background thread later, or to operatively add more signals.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":34749,"byte_end":34813,"line_start":88,"line_end":88,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":34814,"byte_end":34817,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ The controller handle can be shared between as many threads as you like using its","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":34818,"byte_end":34903,"line_start":90,"line_end":90,"column_start":1,"column_end":86}},{"value":"/ [`clone`][Handle::clone] method.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":34904,"byte_end":34940,"line_start":91,"line_end":91,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":34941,"byte_end":34944,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ # Exfiltrators","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":34945,"byte_end":34963,"line_start":93,"line_end":93,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":34964,"byte_end":34967,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The [`SignalOnly]` provides only the signal number. There are further exfiltrators available in","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":34968,"byte_end":35067,"line_start":95,"line_end":95,"column_start":1,"column_end":100}},{"value":"/ the [`exfiltrator`] module. Note that some of them are behind feature flags that need to be","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":35068,"byte_end":35163,"line_start":96,"line_end":96,"column_start":1,"column_end":96}},{"value":"/ enabled.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":35164,"byte_end":35176,"line_start":97,"line_end":97,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":35177,"byte_end":35180,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":35181,"byte_end":35195,"line_start":99,"line_end":99,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":35196,"byte_end":35199,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":35200,"byte_end":35211,"line_start":101,"line_end":101,"column_start":1,"column_end":12}},{"value":"/ # extern crate signal_hook;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":35212,"byte_end":35243,"line_start":102,"line_end":102,"column_start":1,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":35244,"byte_end":35249,"line_start":103,"line_end":103,"column_start":1,"column_end":6}},{"value":"/ # use std::io::Error;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":35250,"byte_end":35275,"line_start":104,"line_end":104,"column_start":1,"column_end":26}},{"value":"/ # use std::thread;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":35276,"byte_end":35298,"line_start":105,"line_end":105,"column_start":1,"column_end":23}},{"value":"/ use signal_hook::consts::signal::*;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":35299,"byte_end":35338,"line_start":106,"line_end":106,"column_start":1,"column_end":40}},{"value":"/ use signal_hook::iterator::Signals;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":35339,"byte_end":35378,"line_start":107,"line_end":107,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":35379,"byte_end":35382,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":35383,"byte_end":35388,"line_start":109,"line_end":109,"column_start":1,"column_end":6}},{"value":"/ # fn main() -> Result<(), Error> {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":35389,"byte_end":35427,"line_start":110,"line_end":110,"column_start":1,"column_end":39}},{"value":"/ let mut signals = Signals::new(&[SIGUSR1, SIGUSR2])?;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":35428,"byte_end":35485,"line_start":111,"line_end":111,"column_start":1,"column_end":58}},{"value":"/ let handle = signals.handle();","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":35486,"byte_end":35520,"line_start":112,"line_end":112,"column_start":1,"column_end":35}},{"value":"/ let thread = thread::spawn(move || {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":35521,"byte_end":35561,"line_start":113,"line_end":113,"column_start":1,"column_end":41}},{"value":"/     for signal in &mut signals {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":35562,"byte_end":35598,"line_start":114,"line_end":114,"column_start":1,"column_end":37}},{"value":"/         match signal {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":35599,"byte_end":35625,"line_start":115,"line_end":115,"column_start":1,"column_end":27}},{"value":"/             SIGUSR1 => {},","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":35626,"byte_end":35656,"line_start":116,"line_end":116,"column_start":1,"column_end":31}},{"value":"/             SIGUSR2 => {},","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":35657,"byte_end":35687,"line_start":117,"line_end":117,"column_start":1,"column_end":31}},{"value":"/             _ => unreachable!(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":35688,"byte_end":35724,"line_start":118,"line_end":118,"column_start":1,"column_end":37}},{"value":"/         }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":35725,"byte_end":35738,"line_start":119,"line_end":119,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":35739,"byte_end":35748,"line_start":120,"line_end":120,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":35749,"byte_end":35756,"line_start":121,"line_end":121,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":35757,"byte_end":35760,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ // Some time later...","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":35761,"byte_end":35786,"line_start":123,"line_end":123,"column_start":1,"column_end":26}},{"value":"/ handle.close();","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":35787,"byte_end":35806,"line_start":124,"line_end":124,"column_start":1,"column_end":20}},{"value":"/ thread.join().unwrap();","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":35807,"byte_end":35834,"line_start":125,"line_end":125,"column_start":1,"column_end":28}},{"value":"/ # Ok(())","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":35835,"byte_end":35847,"line_start":126,"line_end":126,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":35848,"byte_end":35855,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":35856,"byte_end":35863,"line_start":128,"line_end":128,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":36189,"byte_end":36192,"line_start":136,"line_end":136,"column_start":12,"column_end":15},"name":"new","qualname":"<SignalsInfo<E>>::new","value":"pub fn new<I, S>(I) -> Result<Self, Error> where I: IntoIterator<Item = S>,\nS: Borrow<c_int>, E: Default","parent":null,"children":[],"decl_id":null,"docs":" Creates the `Signals` structure.","sig":null,"attributes":[{"value":"/ Creates the `Signals` structure.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":35991,"byte_end":36027,"line_start":132,"line_end":132,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":36032,"byte_end":36035,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This registers all the signals listed. The same restrictions (panics, errors) apply as","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":36040,"byte_end":36130,"line_start":134,"line_end":134,"column_start":5,"column_end":95}},{"value":"/ for the [`Handle::add_signal`] method.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":36135,"byte_end":36177,"line_start":135,"line_end":135,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":36466,"byte_end":36482,"line_start":146,"line_end":146,"column_start":12,"column_end":28},"name":"with_exfiltrator","qualname":"<SignalsInfo<E>>::with_exfiltrator","value":"pub fn with_exfiltrator<I, S>(I, E) -> Result<Self, Error> where\nI: IntoIterator<Item = S>, S: Borrow<c_int>","parent":null,"children":[],"decl_id":null,"docs":" An advanced constructor with explicit [`Exfiltrator`].\n","sig":null,"attributes":[{"value":"/ An advanced constructor with explicit [`Exfiltrator`].","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":36396,"byte_end":36454,"line_start":145,"line_end":145,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":37023,"byte_end":37033,"line_start":164,"line_end":164,"column_start":12,"column_end":22},"name":"add_signal","qualname":"<SignalsInfo<E>>::add_signal","value":"pub fn add_signal(&Self, c_int) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Registers another signal to the set watched by this [`Signals`] instance.","sig":null,"attributes":[{"value":"/ Registers another signal to the set watched by this [`Signals`] instance.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":36823,"byte_end":36900,"line_start":160,"line_end":160,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":36905,"byte_end":36908,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ The same restrictions (panics, errors) apply as for the [`Handle::add_signal`]","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":36913,"byte_end":36995,"line_start":162,"line_end":162,"column_start":5,"column_end":87}},{"value":"/ method.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":37000,"byte_end":37011,"line_start":163,"line_end":163,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":37669,"byte_end":37676,"line_start":177,"line_end":177,"column_start":12,"column_end":19},"name":"pending","qualname":"<SignalsInfo<E>>::pending","value":"pub fn pending(&mut Self) -> Pending<E>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator of already received signals.","sig":null,"attributes":[{"value":"/ Returns an iterator of already received signals.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":37131,"byte_end":37183,"line_start":168,"line_end":168,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":37188,"byte_end":37191,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ This returns an iterator over all the signal numbers of the signals received since last","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":37196,"byte_end":37287,"line_start":170,"line_end":170,"column_start":5,"column_end":96}},{"value":"/ time they were read (out of the set registered by this `Signals` instance). Note that they","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":37292,"byte_end":37386,"line_start":171,"line_end":171,"column_start":5,"column_end":99}},{"value":"/ are returned in arbitrary order and a signal instance may returned only once even if it was","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":37391,"byte_end":37486,"line_start":172,"line_end":172,"column_start":5,"column_end":100}},{"value":"/ received multiple times.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":37491,"byte_end":37519,"line_start":173,"line_end":173,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":37524,"byte_end":37527,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ This method returns immediately (does not block) and may produce an empty iterator if there","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":37532,"byte_end":37627,"line_start":175,"line_end":175,"column_start":5,"column_end":100}},{"value":"/ are no signals ready.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":37632,"byte_end":37657,"line_start":176,"line_end":176,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":38988,"byte_end":38992,"line_start":209,"line_end":209,"column_start":12,"column_end":16},"name":"wait","qualname":"<SignalsInfo<E>>::wait","value":"pub fn wait(&mut Self) -> Pending<E>","parent":null,"children":[],"decl_id":null,"docs":" Waits for some signals to be available and returns an iterator.","sig":null,"attributes":[{"value":"/ Waits for some signals to be available and returns an iterator.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":38426,"byte_end":38493,"line_start":199,"line_end":199,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":38498,"byte_end":38501,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`pending`][SignalsInfo::pending]. If there are no signals available, it","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":38506,"byte_end":38601,"line_start":201,"line_end":201,"column_start":5,"column_end":100}},{"value":"/ tries to wait for some to arrive. However, due to implementation details, this still can","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":38606,"byte_end":38698,"line_start":202,"line_end":202,"column_start":5,"column_end":97}},{"value":"/ produce an empty iterator.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":38703,"byte_end":38733,"line_start":203,"line_end":203,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":38738,"byte_end":38741,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ This can block for arbitrary long time. If the [`Handle::close`] method is used in","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":38746,"byte_end":38832,"line_start":205,"line_end":205,"column_start":5,"column_end":91}},{"value":"/ another thread this method will return immediately.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":38837,"byte_end":38892,"line_start":206,"line_end":206,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":38897,"byte_end":38900,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ Note that the blocking is done in this method, not in the iterator.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":38905,"byte_end":38976,"line_start":208,"line_end":208,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":39701,"byte_end":39710,"line_start":225,"line_end":225,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<SignalsInfo<E>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is it closed?","sig":null,"attributes":[{"value":"/ Is it closed?","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":39626,"byte_end":39643,"line_start":222,"line_end":222,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":39648,"byte_end":39651,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ See [`close`][Handle::close].","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":39656,"byte_end":39689,"line_start":224,"line_end":224,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":41166,"byte_end":41173,"line_start":268,"line_end":268,"column_start":12,"column_end":19},"name":"forever","qualname":"<SignalsInfo<E>>::forever","value":"pub fn forever(&mut Self) -> Forever<, E>","parent":null,"children":[],"decl_id":null,"docs":" Get an infinite iterator over arriving signals.","sig":null,"attributes":[{"value":"/ Get an infinite iterator over arriving signals.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":39773,"byte_end":39824,"line_start":229,"line_end":229,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":39829,"byte_end":39832,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The iterator's `next()` blocks as necessary to wait for signals to arrive. This is adequate","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":39837,"byte_end":39932,"line_start":231,"line_end":231,"column_start":5,"column_end":100}},{"value":"/ if you want to designate a thread solely to handling signals. If multiple signals come at","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":39937,"byte_end":40030,"line_start":232,"line_end":232,"column_start":5,"column_end":98}},{"value":"/ the same time (between two values produced by the iterator), they will be returned in","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":40035,"byte_end":40124,"line_start":233,"line_end":233,"column_start":5,"column_end":94}},{"value":"/ arbitrary order. Multiple instances of the same signal may be collated.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":40129,"byte_end":40204,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":40209,"byte_end":40212,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ This is also the iterator returned by `IntoIterator` implementation on `&mut Signals`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":40217,"byte_end":40307,"line_start":236,"line_end":236,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":40312,"byte_end":40315,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ This iterator terminates only if explicitly [closed][Handle::close].","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":40320,"byte_end":40392,"line_start":238,"line_end":238,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":40397,"byte_end":40400,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":40405,"byte_end":40419,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":40424,"byte_end":40427,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":40432,"byte_end":40443,"line_start":242,"line_end":242,"column_start":5,"column_end":16}},{"value":"/ # extern crate libc;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":40448,"byte_end":40472,"line_start":243,"line_end":243,"column_start":5,"column_end":29}},{"value":"/ # extern crate signal_hook;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":40477,"byte_end":40508,"line_start":244,"line_end":244,"column_start":5,"column_end":36}},{"value":"/ #","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":40513,"byte_end":40518,"line_start":245,"line_end":245,"column_start":5,"column_end":10}},{"value":"/ # use std::io::Error;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":40523,"byte_end":40548,"line_start":246,"line_end":246,"column_start":5,"column_end":30}},{"value":"/ # use std::thread;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":40553,"byte_end":40575,"line_start":247,"line_end":247,"column_start":5,"column_end":27}},{"value":"/ #","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":40580,"byte_end":40585,"line_start":248,"line_end":248,"column_start":5,"column_end":10}},{"value":"/ use signal_hook::consts::signal::*;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":40590,"byte_end":40629,"line_start":249,"line_end":249,"column_start":5,"column_end":44}},{"value":"/ use signal_hook::iterator::Signals;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":40634,"byte_end":40673,"line_start":250,"line_end":250,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":40678,"byte_end":40681,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # fn main() -> Result<(), Error> {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":40686,"byte_end":40724,"line_start":252,"line_end":252,"column_start":5,"column_end":43}},{"value":"/ let mut signals = Signals::new(&[SIGUSR1, SIGUSR2])?;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":40729,"byte_end":40786,"line_start":253,"line_end":253,"column_start":5,"column_end":62}},{"value":"/ let handle = signals.handle();","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":40791,"byte_end":40825,"line_start":254,"line_end":254,"column_start":5,"column_end":39}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":40830,"byte_end":40857,"line_start":255,"line_end":255,"column_start":5,"column_end":32}},{"value":"/     for signal in signals.forever() {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":40862,"byte_end":40903,"line_start":256,"line_end":256,"column_start":5,"column_end":46}},{"value":"/         match signal {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":40908,"byte_end":40934,"line_start":257,"line_end":257,"column_start":5,"column_end":31}},{"value":"/             SIGUSR1 => {},","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":40939,"byte_end":40969,"line_start":258,"line_end":258,"column_start":5,"column_end":35}},{"value":"/             SIGUSR2 => {},","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":40974,"byte_end":41004,"line_start":259,"line_end":259,"column_start":5,"column_end":35}},{"value":"/             _ => unreachable!(),","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":41009,"byte_end":41045,"line_start":260,"line_end":260,"column_start":5,"column_end":41}},{"value":"/         }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":41050,"byte_end":41063,"line_start":261,"line_end":261,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":41068,"byte_end":41077,"line_start":262,"line_end":262,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":41082,"byte_end":41089,"line_start":263,"line_end":263,"column_start":5,"column_end":12}},{"value":"/ handle.close();","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":41094,"byte_end":41113,"line_start":264,"line_end":264,"column_start":5,"column_end":24}},{"value":"/ # Ok(())","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":41118,"byte_end":41130,"line_start":265,"line_end":265,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":41135,"byte_end":41142,"line_start":266,"line_end":266,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":41147,"byte_end":41154,"line_start":267,"line_end":267,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":41429,"byte_end":41435,"line_start":275,"line_end":275,"column_start":12,"column_end":18},"name":"handle","qualname":"<SignalsInfo<E>>::handle","value":"pub fn handle(&Self) -> Handle","parent":null,"children":[],"decl_id":null,"docs":" Get a shareable handle to a [`Handle`] for this instance.","sig":null,"attributes":[{"value":"/ Get a shareable handle to a [`Handle`] for this instance.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":41265,"byte_end":41326,"line_start":272,"line_end":272,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":41331,"byte_end":41334,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ This can be used to add further signals or close the [`Signals`] instance.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":41339,"byte_end":41417,"line_start":274,"line_end":274,"column_start":5,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":362},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":41963,"byte_end":41970,"line_start":299,"line_end":299,"column_start":12,"column_end":19},"name":"Forever","qualname":"::iterator::Forever","value":"","parent":null,"children":[],"decl_id":null,"docs":" An infinit iterator of arriving signals.\n","sig":null,"attributes":[{"value":"/ An infinit iterator of arriving signals.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":41907,"byte_end":41951,"line_start":298,"line_end":298,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":372},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":43046,"byte_end":43053,"line_start":323,"line_end":323,"column_start":10,"column_end":17},"name":"Signals","qualname":"::iterator::Signals","value":"SignalsInfo<SignalOnly>","parent":null,"children":[],"decl_id":null,"docs":" A type alias for an iterator returning just the signal numbers.","sig":null,"attributes":[{"value":"/ A type alias for an iterator returning just the signal numbers.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":42810,"byte_end":42877,"line_start":319,"line_end":319,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":42878,"byte_end":42881,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ This is the simplified version for most of the use cases. For advanced usages, the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":42882,"byte_end":42968,"line_start":321,"line_end":321,"column_start":1,"column_end":87}},{"value":"/ [`SignalsInfo`] with explicit [`Exfiltrator`] type can be used.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":42969,"byte_end":43036,"line_start":322,"line_end":322,"column_start":1,"column_end":68}}]},{"kind":"Mod","id":{"krate":0,"index":373},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"low_level","qualname":"::low_level","value":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/mod.rs","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":418},{"krate":0,"index":461},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":508},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":515},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520}],"decl_id":null,"docs":" Some low level utilities","sig":null,"attributes":[{"value":"/ Some low level utilities","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/mod.rs","byte_start":70366,"byte_end":70394,"line_start":1,"line_end":1,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/mod.rs","byte_start":70395,"byte_end":70398,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ More often to build other abstractions than used directly.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/mod.rs","byte_start":70399,"byte_end":70461,"line_start":3,"line_end":3,"column_start":1,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":380},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"channel","qualname":"::low_level::channel","value":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":388},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":405},{"krate":0,"index":411},{"krate":0,"index":414},{"krate":0,"index":416}],"decl_id":null,"docs":" A restricted channel to pass data from signal handler.","sig":null,"attributes":[{"value":"cfg(feature = \"channel\")","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/mod.rs","byte_start":70502,"byte_end":70529,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"/ A restricted channel to pass data from signal handler.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":72041,"byte_end":72099,"line_start":1,"line_end":1,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":72100,"byte_end":72103,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ When trying to communicate data from signal handler to the outside world, one can use an atomic","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":72104,"byte_end":72203,"line_start":3,"line_end":3,"column_start":1,"column_end":100}},{"value":"/ variable (as it doesn't lock, so it can be made async-signal-safe). But this won't work for","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":72204,"byte_end":72299,"line_start":4,"line_end":4,"column_start":1,"column_end":96}},{"value":"/ larger data.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":72300,"byte_end":72316,"line_start":5,"line_end":5,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":72317,"byte_end":72320,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This module provides a channel that can be used for that purpose. It is used by certain","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":72321,"byte_end":72412,"line_start":7,"line_end":7,"column_start":1,"column_end":92}},{"value":"/ [exfiltrators][crate::iterator::exfiltrator], but can be used as building block for custom","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":72413,"byte_end":72507,"line_start":8,"line_end":8,"column_start":1,"column_end":95}},{"value":"/ actions. In general, this is not a ready-made end-user API.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":72508,"byte_end":72571,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":72572,"byte_end":72575,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # How does it work","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":72576,"byte_end":72598,"line_start":11,"line_end":11,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":72599,"byte_end":72602,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Each channel has a fixed number of slots and two queues (one for empty slots, one for full","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":72603,"byte_end":72697,"line_start":13,"line_end":13,"column_start":1,"column_end":95}},{"value":"/ slots). A signal handler takes a slot out of the empty one, fills it and passes it into the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":72698,"byte_end":72793,"line_start":14,"line_end":14,"column_start":1,"column_end":96}},{"value":"/ full one. Outside of signal handler, it can take the value out of the full queue and return the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":72794,"byte_end":72893,"line_start":15,"line_end":15,"column_start":1,"column_end":100}},{"value":"/ slot to the empty queue.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":72894,"byte_end":72922,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":72923,"byte_end":72926,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The queues are implemented as bit-encoded indexes of the slots in the storage. The bits are","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":72927,"byte_end":73022,"line_start":18,"line_end":18,"column_start":1,"column_end":96}},{"value":"/ stored in an atomic variable.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":73023,"byte_end":73056,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":73057,"byte_end":73060,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that the algorithm allows for a slot to be in neither queue (when it is being emptied or","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":73061,"byte_end":73158,"line_start":21,"line_end":21,"column_start":1,"column_end":98}},{"value":"/ filled).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":73159,"byte_end":73171,"line_start":22,"line_end":22,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":73172,"byte_end":73175,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Fallible allocation of a slot","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":73176,"byte_end":73211,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":73212,"byte_end":73215,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ It is apparent that allocation of a new slot can fail (there's nothing in the empty slot). In","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":73216,"byte_end":73313,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ such case, there's no way to send the new value out of the handler (there's no way to safely","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":73314,"byte_end":73410,"line_start":27,"line_end":27,"column_start":1,"column_end":97}},{"value":"/ wait for a slot to appear, because the handler can be blocking the thread that is responsible","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":73411,"byte_end":73508,"line_start":28,"line_end":28,"column_start":1,"column_end":98}},{"value":"/ for emptying them). But that's considered acceptable ‒ even the kernel collates the same kinds","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":73509,"byte_end":73609,"line_start":29,"line_end":29,"column_start":1,"column_end":99}},{"value":"/ of signals together if they are not consumed by application fast enough and there are no free","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":73610,"byte_end":73707,"line_start":30,"line_end":30,"column_start":1,"column_end":98}},{"value":"/ slots exactly because some are being filled, emptied or are full ‒ in particular, the whole","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":73708,"byte_end":73805,"line_start":31,"line_end":31,"column_start":1,"column_end":96}},{"value":"/ system will yield a signal.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":73806,"byte_end":73837,"line_start":32,"line_end":32,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":73838,"byte_end":73841,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ This assumes that separate signals don't share the same buffer and that there's only one reader","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":73842,"byte_end":73941,"line_start":34,"line_end":34,"column_start":1,"column_end":100}},{"value":"/ (using multiple readers is still safe, but it is possible that all slots would be inside the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":73942,"byte_end":74038,"line_start":35,"line_end":35,"column_start":1,"column_end":97}},{"value":"/ readers, but already empty, so the above argument would not hold).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":74039,"byte_end":74109,"line_start":36,"line_end":36,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":399},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":76939,"byte_end":76946,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"Channel","qualname":"::low_level::channel::Channel","value":"Channel {  }","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":403},{"krate":0,"index":404}],"decl_id":null,"docs":" A restricted async-signal-safe channel","sig":null,"attributes":[{"value":"/ A restricted async-signal-safe channel","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":75488,"byte_end":75530,"line_start":87,"line_end":87,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":75531,"byte_end":75534,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ This is a bit like the usual channel used for inter-thread communication, but with several","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":75535,"byte_end":75629,"line_start":89,"line_end":89,"column_start":1,"column_end":95}},{"value":"/ restrictions:","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":75630,"byte_end":75647,"line_start":90,"line_end":90,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":75648,"byte_end":75651,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ * There's a limited number of slots (currently 5).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":75652,"byte_end":75706,"line_start":92,"line_end":92,"column_start":1,"column_end":55}},{"value":"/ * There's no way to wait for a place in it or for a value. If value is not available, `None` is","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":75707,"byte_end":75806,"line_start":93,"line_end":93,"column_start":1,"column_end":100}},{"value":"/   returned. If there's no space for a value, the value is silently dropped.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":75807,"byte_end":75886,"line_start":94,"line_end":94,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":75887,"byte_end":75890,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ In exchange for that, all the operations on that channel are async-signal-safe. That means it","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":75891,"byte_end":75988,"line_start":96,"line_end":96,"column_start":1,"column_end":98}},{"value":"/ is possible to use it to communicate between a signal handler and the rest of the world with it","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":75989,"byte_end":76088,"line_start":97,"line_end":97,"column_start":1,"column_end":100}},{"value":"/ (specifically, it's designed to send information from the handler to the rest of the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":76089,"byte_end":76177,"line_start":98,"line_end":98,"column_start":1,"column_end":89}},{"value":"/ application). The throwing out of values when full is in line with collating of the same type","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":76178,"byte_end":76275,"line_start":99,"line_end":99,"column_start":1,"column_end":98}},{"value":"/ in kernel (you should not use the same channel for multiple different signals).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":76276,"byte_end":76359,"line_start":100,"line_end":100,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":76360,"byte_end":76363,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ Technically, this is a MPMC queue which preserves order, but it is expected to be used in MPSC","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":76364,"byte_end":76462,"line_start":102,"line_end":102,"column_start":1,"column_end":99}},{"value":"/ mode mostly (in theory, multiple threads can be executing a signal handler for the same signal","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":76463,"byte_end":76561,"line_start":103,"line_end":103,"column_start":1,"column_end":99}},{"value":"/ at the same time). The channel is not responsible for wakeups.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":76562,"byte_end":76628,"line_start":104,"line_end":104,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":76629,"byte_end":76632,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ While the channel is async-signal-safe, you still need to make sure *creating* of the values is","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":76633,"byte_end":76732,"line_start":106,"line_end":106,"column_start":1,"column_end":100}},{"value":"/ too (it should not contain anything that allocates, for example ‒ so no `String`s inside, etc).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":76733,"byte_end":76834,"line_start":107,"line_end":107,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":76835,"byte_end":76838,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ The code was *not* tuned for performance (signals are not expected to happen often).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":76839,"byte_end":76927,"line_start":109,"line_end":109,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":77125,"byte_end":77128,"line_start":118,"line_end":118,"column_start":12,"column_end":15},"name":"new","qualname":"<Channel<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new channel with nothing in it.\n","sig":null,"attributes":[{"value":"/ Creates a new channel with nothing in it.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":77068,"byte_end":77113,"line_start":117,"line_end":117,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":77551,"byte_end":77555,"line_start":136,"line_end":136,"column_start":12,"column_end":16},"name":"send","qualname":"<Channel<T>>::send","value":"pub fn send(&Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Inserts a value into the channel.","sig":null,"attributes":[{"value":"/ Inserts a value into the channel.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":77422,"byte_end":77459,"line_start":133,"line_end":133,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":77464,"byte_end":77467,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ If the value doesn't fit, it is silently dropped. Never blocks.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":77472,"byte_end":77539,"line_start":135,"line_end":135,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":77894,"byte_end":77898,"line_start":146,"line_end":146,"column_start":12,"column_end":16},"name":"recv","qualname":"<Channel<T>>::recv","value":"pub fn recv(&Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes a value from the channel.","sig":null,"attributes":[{"value":"/ Takes a value from the channel.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":77774,"byte_end":77809,"line_start":143,"line_end":143,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":77814,"byte_end":77817,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Or returns `None` if the channel is empty. Never blocks.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":77822,"byte_end":77882,"line_start":145,"line_end":145,"column_start":5,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":418},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pipe","qualname":"::low_level::pipe","value":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":423},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":430},{"krate":0,"index":433},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":440},{"krate":0,"index":443},{"krate":0,"index":677},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":446},{"krate":0,"index":449},{"krate":0,"index":452},{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":459}],"decl_id":null,"docs":" Module with the self-pipe pattern.","sig":null,"attributes":[{"value":"cfg(not(windows))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/mod.rs","byte_start":70598,"byte_end":70618,"line_start":12,"line_end":12,"column_start":1,"column_end":21}},{"value":"/ Module with the self-pipe pattern.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":79991,"byte_end":80029,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":80030,"byte_end":80033,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ One of the common patterns around signals is to have a pipe with both ends in the same program.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":80034,"byte_end":80133,"line_start":3,"line_end":3,"column_start":1,"column_end":100}},{"value":"/ Whenever there's a signal, the signal handler writes one byte of garbage data to the write end,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":80134,"byte_end":80233,"line_start":4,"line_end":4,"column_start":1,"column_end":100}},{"value":"/ unless the pipe's already full. The application then can handle the read end.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":80234,"byte_end":80315,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":80316,"byte_end":80319,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This has two advantages. First, the real signal action moves outside of the signal handler","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":80320,"byte_end":80414,"line_start":7,"line_end":7,"column_start":1,"column_end":95}},{"value":"/ where there are a lot less restrictions. Second, it fits nicely in all kinds of asynchronous","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":80415,"byte_end":80511,"line_start":8,"line_end":8,"column_start":1,"column_end":97}},{"value":"/ loops and has less chance of race conditions.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":80512,"byte_end":80561,"line_start":9,"line_end":9,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":80562,"byte_end":80565,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This module offers premade functions for the write end (and doesn't insist that it must be a","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":80566,"byte_end":80662,"line_start":11,"line_end":11,"column_start":1,"column_end":97}},{"value":"/ pipe ‒ anything that can be written to is fine ‒ sockets too, therefore `UnixStream::pair` is a","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":80663,"byte_end":80766,"line_start":12,"line_end":12,"column_start":1,"column_end":100}},{"value":"/ good candidate).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":80767,"byte_end":80787,"line_start":13,"line_end":13,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":80788,"byte_end":80791,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ If you want to integrate with some asynchronous library, plugging streams from `mio-uds` or","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":80792,"byte_end":80887,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ `tokio-uds` libraries should work.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":80888,"byte_end":80926,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":80927,"byte_end":80930,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If it looks too low-level for your needs, the [`iterator`][crate::iterator] module contains some","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":80931,"byte_end":81031,"line_start":18,"line_end":18,"column_start":1,"column_end":101}},{"value":"/ higher-lever interface that also uses a self-pipe pattern under the hood.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":81032,"byte_end":81109,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":81110,"byte_end":81113,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Correct order of handling","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":81114,"byte_end":81145,"line_start":21,"line_end":21,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":81146,"byte_end":81149,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ A care needs to be taken to avoid race conditions, especially when handling the same signal in","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":81150,"byte_end":81248,"line_start":23,"line_end":23,"column_start":1,"column_end":99}},{"value":"/ a loop. Specifically, another signal might come when the action for the previous signal is","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":81249,"byte_end":81343,"line_start":24,"line_end":24,"column_start":1,"column_end":95}},{"value":"/ being taken. The correct order is first to clear the content of the pipe (read some/all data","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":81344,"byte_end":81440,"line_start":25,"line_end":25,"column_start":1,"column_end":97}},{"value":"/ from it) and then take the action. This way a spurious wakeup can happen (the pipe could wake","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":81441,"byte_end":81538,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ up even when no signal came after the signal was taken, because ‒ it arrived between cleaning","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":81539,"byte_end":81638,"line_start":27,"line_end":27,"column_start":1,"column_end":98}},{"value":"/ the pipe and taking the action). Note that some OS primitives (eg. `select`) suffer from","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":81639,"byte_end":81731,"line_start":28,"line_end":28,"column_start":1,"column_end":93}},{"value":"/ spurious wakeups themselves (they can claim a FD is readable when it is not true) and blocking","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":81732,"byte_end":81830,"line_start":29,"line_end":29,"column_start":1,"column_end":99}},{"value":"/ `read` might return prematurely (with eg. `EINTR`).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":81831,"byte_end":81886,"line_start":30,"line_end":30,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":81887,"byte_end":81890,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The reverse order of first taking the action and then clearing the pipe might lose signals,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":81891,"byte_end":81986,"line_start":32,"line_end":32,"column_start":1,"column_end":96}},{"value":"/ which is usually worse.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":81987,"byte_end":82014,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":82015,"byte_end":82018,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This is not a problem with blocking on reading from the pipe (because both the blocking and","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":82019,"byte_end":82114,"line_start":35,"line_end":35,"column_start":1,"column_end":96}},{"value":"/ cleaning is the same action), but in case of asynchronous handling it matters.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":82115,"byte_end":82197,"line_start":36,"line_end":36,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":82198,"byte_end":82201,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ If you want to combine setting some flags with a self-pipe pattern, the flag needs to be set","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":82202,"byte_end":82298,"line_start":38,"line_end":38,"column_start":1,"column_end":97}},{"value":"/ first, then the pipe written. On the read end, first the pipe needs to be cleaned, then the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":82299,"byte_end":82394,"line_start":39,"line_end":39,"column_start":1,"column_end":96}},{"value":"/ flag and then the action taken. This is what the [`SignalsInfo`][crate::iterator::SignalsInfo]","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":82395,"byte_end":82493,"line_start":40,"line_end":40,"column_start":1,"column_end":99}},{"value":"/ structure does internally.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":82494,"byte_end":82524,"line_start":41,"line_end":41,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":82525,"byte_end":82528,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Write collating","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":82529,"byte_end":82550,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":82551,"byte_end":82554,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ While unlikely if handled correctly, it is possible the write end is full when a signal comes.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":82555,"byte_end":82653,"line_start":45,"line_end":45,"column_start":1,"column_end":99}},{"value":"/ In such case the signal handler simply does nothing. If the write end is full, the read end is","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":82654,"byte_end":82752,"line_start":46,"line_end":46,"column_start":1,"column_end":99}},{"value":"/ readable and therefore will wake up. On the other hand, blocking in the signal handler would","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":82753,"byte_end":82849,"line_start":47,"line_end":47,"column_start":1,"column_end":97}},{"value":"/ definitely be a bad idea.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":82850,"byte_end":82879,"line_start":48,"line_end":48,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":82880,"byte_end":82883,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ However, this also means the number of bytes read from the end might be lower than the number","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":82884,"byte_end":82981,"line_start":50,"line_end":50,"column_start":1,"column_end":98}},{"value":"/ of signals that arrived. This should not generally be a problem, since the OS already collates","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":82982,"byte_end":83080,"line_start":51,"line_end":51,"column_start":1,"column_end":99}},{"value":"/ signals of the same kind together.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":83081,"byte_end":83119,"line_start":52,"line_end":52,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":83120,"byte_end":83123,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":83124,"byte_end":83138,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":83139,"byte_end":83142,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ This example waits for at last one `SIGUSR1` signal to come before continuing (and","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":83143,"byte_end":83229,"line_start":56,"line_end":56,"column_start":1,"column_end":87}},{"value":"/ terminating). It sends the signal to itself, so it correctly terminates.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":83230,"byte_end":83306,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":83307,"byte_end":83310,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":83311,"byte_end":83322,"line_start":59,"line_end":59,"column_start":1,"column_end":12}},{"value":"/ use std::io::{Error, Read};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":83323,"byte_end":83354,"line_start":60,"line_end":60,"column_start":1,"column_end":32}},{"value":"/ use std::os::unix::net::UnixStream;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":83355,"byte_end":83394,"line_start":61,"line_end":61,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":83395,"byte_end":83398,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ use signal_hook::consts::SIGUSR1;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":83399,"byte_end":83436,"line_start":63,"line_end":63,"column_start":1,"column_end":38}},{"value":"/ use signal_hook::low_level::{pipe, raise};","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":83437,"byte_end":83483,"line_start":64,"line_end":64,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":83484,"byte_end":83487,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Error> {","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":83488,"byte_end":83524,"line_start":66,"line_end":66,"column_start":1,"column_end":37}},{"value":"/     let (mut read, write) = UnixStream::pair()?;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":83525,"byte_end":83577,"line_start":67,"line_end":67,"column_start":1,"column_end":53}},{"value":"/     pipe::register(SIGUSR1, write)?;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":83578,"byte_end":83618,"line_start":68,"line_end":68,"column_start":1,"column_end":41}},{"value":"/     // This will write into the pipe write end through the signal handler","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":83619,"byte_end":83696,"line_start":69,"line_end":69,"column_start":1,"column_end":78}},{"value":"/     raise(SIGUSR1).unwrap();","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":83697,"byte_end":83729,"line_start":70,"line_end":70,"column_start":1,"column_end":33}},{"value":"/     let mut buff = [0];","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":83730,"byte_end":83757,"line_start":71,"line_end":71,"column_start":1,"column_end":28}},{"value":"/     read.read_exact(&mut buff)?;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":83758,"byte_end":83794,"line_start":72,"line_end":72,"column_start":1,"column_end":37}},{"value":"/     println!(\"Happily terminating\");","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":83795,"byte_end":83835,"line_start":73,"line_end":73,"column_start":1,"column_end":41}},{"value":"/     Ok(())","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":83836,"byte_end":83850,"line_start":74,"line_end":74,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":83851,"byte_end":83856,"line_start":75,"line_end":75,"column_start":1,"column_end":6}}]},{"kind":"Function","id":{"krate":0,"index":457},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":87343,"byte_end":87355,"line_start":172,"line_end":172,"column_start":8,"column_end":20},"name":"register_raw","qualname":"::low_level::pipe::register_raw","value":"pub fn register_raw(c_int, RawFd) -> Result<SigId, Error>","parent":null,"children":[],"decl_id":null,"docs":" Registers a write to a self-pipe whenever there's the signal.","sig":null,"attributes":[{"value":"/ Registers a write to a self-pipe whenever there's the signal.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":85984,"byte_end":86049,"line_start":149,"line_end":149,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":86050,"byte_end":86053,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ In this case, the pipe is taken as the `RawFd`. It'll be closed on deregistration. Effectively,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":86054,"byte_end":86153,"line_start":151,"line_end":151,"column_start":1,"column_end":100}},{"value":"/ the function takes ownership of the file descriptor. This includes feeling free to set arbitrary","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":86154,"byte_end":86254,"line_start":152,"line_end":152,"column_start":1,"column_end":101}},{"value":"/ flags on it, including file status flags (that are shared across file descriptors created by","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":86255,"byte_end":86351,"line_start":153,"line_end":153,"column_start":1,"column_end":97}},{"value":"/ `dup`).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":86352,"byte_end":86363,"line_start":154,"line_end":154,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":86364,"byte_end":86367,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ Note that passing the wrong file descriptor won't cause UB, but can still lead to severe bugs ‒","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":86368,"byte_end":86469,"line_start":156,"line_end":156,"column_start":1,"column_end":100}},{"value":"/ like data corruptions in files. Prefer using [`register`] if possible.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":86470,"byte_end":86544,"line_start":157,"line_end":157,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":86545,"byte_end":86548,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ Also, it is perfectly legal for multiple writes to be collated together (if not consumed) and","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":86549,"byte_end":86646,"line_start":159,"line_end":159,"column_start":1,"column_end":98}},{"value":"/ to generate spurious wakeups (but will not generate spurious *bytes* in the pipe).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":86647,"byte_end":86733,"line_start":160,"line_end":160,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":86734,"byte_end":86737,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ # Internal details","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":86738,"byte_end":86760,"line_start":162,"line_end":162,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":86761,"byte_end":86764,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ Internally, it *currently* does following. Note that this is *not* part of the stability","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":86765,"byte_end":86857,"line_start":164,"line_end":164,"column_start":1,"column_end":93}},{"value":"/ guarantees and may change if necessary.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":86858,"byte_end":86901,"line_start":165,"line_end":165,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":86902,"byte_end":86905,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ * If the file descriptor can be used with [`send`][libc::send], it'll be used together with","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":86906,"byte_end":87001,"line_start":167,"line_end":167,"column_start":1,"column_end":96}},{"value":"/   [`MSG_DONTWAIT`][libc::MSG_DONTWAIT]. This is tested by sending `0` bytes of data (depending","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":87002,"byte_end":87100,"line_start":168,"line_end":168,"column_start":1,"column_end":99}},{"value":"/   on the socket type, this might wake the read end with an empty message).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":87101,"byte_end":87179,"line_start":169,"line_end":169,"column_start":1,"column_end":79}},{"value":"/ * If it is not possible, the [`O_NONBLOCK`][libc::O_NONBLOCK] will be set on the file","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":87180,"byte_end":87269,"line_start":170,"line_end":170,"column_start":1,"column_end":90}},{"value":"/   descriptor and [`write`][libc::write] will be used instead.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":87270,"byte_end":87335,"line_start":171,"line_end":171,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":459},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":88322,"byte_end":88330,"line_start":200,"line_end":200,"column_start":8,"column_end":16},"name":"register","qualname":"::low_level::pipe::register","value":"pub fn register<P>(c_int, P) -> Result<SigId, Error> where P: IntoRawFd +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Registers a write to a self-pipe whenever there's the signal.","sig":null,"attributes":[{"value":"/ Registers a write to a self-pipe whenever there's the signal.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":87955,"byte_end":88020,"line_start":192,"line_end":192,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":88021,"byte_end":88024,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ The ownership of pipe is taken and will be closed whenever the created action is unregistered.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":88025,"byte_end":88123,"line_start":194,"line_end":194,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":88124,"byte_end":88127,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ Note that if you want to register the same pipe for multiple signals, there's `try_clone`","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":88128,"byte_end":88221,"line_start":196,"line_end":196,"column_start":1,"column_end":94}},{"value":"/ method on many unix socket primitives.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":88222,"byte_end":88264,"line_start":197,"line_end":197,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":88265,"byte_end":88268,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ See [`register_raw`] for further details.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":88269,"byte_end":88314,"line_start":199,"line_end":199,"column_start":1,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":495},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":92223,"byte_end":92234,"line_start":97,"line_end":97,"column_start":8,"column_end":19},"name":"signal_name","qualname":"::low_level::signal_details::signal_name","value":"pub fn signal_name(c_int) -> Option<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Provides a human-readable name of a signal.","sig":null,"attributes":[{"value":"/ Provides a human-readable name of a signal.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":91874,"byte_end":91921,"line_start":85,"line_end":85,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":91922,"byte_end":91925,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Note that the name does not have to be known (in case it is some less common, or non-standard","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":91926,"byte_end":92023,"line_start":87,"line_end":87,"column_start":1,"column_end":98}},{"value":"/ signal).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":92024,"byte_end":92036,"line_start":88,"line_end":88,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":92037,"byte_end":92040,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":92041,"byte_end":92055,"line_start":90,"line_end":90,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":92056,"byte_end":92059,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":92060,"byte_end":92067,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ # use signal_hook::low_level::signal_name;","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":92068,"byte_end":92114,"line_start":93,"line_end":93,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(\"SIGKILL\", signal_name(9).unwrap());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":92115,"byte_end":92166,"line_start":94,"line_end":94,"column_start":1,"column_end":52}},{"value":"/ assert!(signal_name(142).is_none());","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":92167,"byte_end":92207,"line_start":95,"line_end":95,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":92208,"byte_end":92215,"line_start":96,"line_end":96,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":499},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":94926,"byte_end":94949,"line_start":158,"line_end":158,"column_start":8,"column_end":31},"name":"emulate_default_handler","qualname":"::low_level::signal_details::emulate_default_handler","value":"pub fn emulate_default_handler(c_int) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Emulates the behaviour of a default handler for the provided signal.","sig":null,"attributes":[{"value":"/ Emulates the behaviour of a default handler for the provided signal.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":93036,"byte_end":93108,"line_start":127,"line_end":127,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":93109,"byte_end":93112,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ This function does its best to provide the same action as the default handler would do, without","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":93113,"byte_end":93212,"line_start":129,"line_end":129,"column_start":1,"column_end":100}},{"value":"/ disrupting the rest of the handling of such signal in the application. It is also","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":93213,"byte_end":93298,"line_start":130,"line_end":130,"column_start":1,"column_end":86}},{"value":"/ async-signal-safe.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":93299,"byte_end":93321,"line_start":131,"line_end":131,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":93322,"byte_end":93325,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ This function necessarily looks up the appropriate action in a table. That means it is possible","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":93326,"byte_end":93425,"line_start":133,"line_end":133,"column_start":1,"column_end":100}},{"value":"/ your system has a signal that is not known to this function. In such case an error is returned","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":93426,"byte_end":93524,"line_start":134,"line_end":134,"column_start":1,"column_end":99}},{"value":"/ (equivalent of `EINVAL`).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":93525,"byte_end":93554,"line_start":135,"line_end":135,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":93555,"byte_end":93558,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ See also the [`register_conditional_default`][crate::flag::register_conditional_default].","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":93559,"byte_end":93652,"line_start":137,"line_end":137,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":93653,"byte_end":93656,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ # Warning","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":93657,"byte_end":93670,"line_start":139,"line_end":139,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":93671,"byte_end":93674,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ There's a short race condition in case of signals that terminate (either with or without a core","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":93675,"byte_end":93774,"line_start":141,"line_end":141,"column_start":1,"column_end":100}},{"value":"/ dump). The emulation first resets the signal handler back to default (as the application is","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":93775,"byte_end":93870,"line_start":142,"line_end":142,"column_start":1,"column_end":96}},{"value":"/ going to end, it's not a problem) and invokes it. But if some other thread installs a signal","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":93871,"byte_end":93967,"line_start":143,"line_end":143,"column_start":1,"column_end":97}},{"value":"/ handler in the meantime (without assistance from `signal-hook`), it can happen this will be","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":93968,"byte_end":94063,"line_start":144,"line_end":144,"column_start":1,"column_end":96}},{"value":"/ invoked by the re-raised signal.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":94064,"byte_end":94100,"line_start":145,"line_end":145,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":94101,"byte_end":94104,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ This function will still terminate the application (there's a fallback on `abort`), the risk is","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":94105,"byte_end":94204,"line_start":147,"line_end":147,"column_start":1,"column_end":100}},{"value":"/ invoking the newly installed signal handler. Note that manipulating the low-level signals is","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":94205,"byte_end":94301,"line_start":148,"line_end":148,"column_start":1,"column_end":97}},{"value":"/ always racy in a multi-threaded program, therefore the described situation is already","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":94302,"byte_end":94391,"line_start":149,"line_end":149,"column_start":1,"column_end":90}},{"value":"/ discouraged.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":94392,"byte_end":94408,"line_start":150,"line_end":150,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":94409,"byte_end":94412,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ If you are uneasy about such race condition, the recommendation is to run relevant termination","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":94413,"byte_end":94511,"line_start":152,"line_end":152,"column_start":1,"column_end":99}},{"value":"/ routine manually ([`exit`][super::exit] or [`abort`][super::abort]); they always do what they","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":94512,"byte_end":94609,"line_start":153,"line_end":153,"column_start":1,"column_end":98}},{"value":"/ say, but slightly differ in externally observable behaviour from termination by a signal (the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":94610,"byte_end":94707,"line_start":154,"line_end":154,"column_start":1,"column_end":98}},{"value":"/ exit code will specify that the application exited, not that it terminated with a signal in the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":94708,"byte_end":94807,"line_start":155,"line_end":155,"column_start":1,"column_end":100}},{"value":"/ first case, and `abort` terminates on `SIGABRT`, so the detected termination signal may be","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":94808,"byte_end":94902,"line_start":156,"line_end":156,"column_start":1,"column_end":95}},{"value":"/ different).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/signal_details.rs","byte_start":94903,"byte_end":94918,"line_start":157,"line_end":157,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":518},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/mod.rs","byte_start":71042,"byte_end":71047,"line_start":27,"line_end":27,"column_start":8,"column_end":13},"name":"raise","qualname":"::low_level::raise","value":"pub fn raise(c_int) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" The usual raise, just the safe wrapper around it.","sig":null,"attributes":[{"value":"/ The usual raise, just the safe wrapper around it.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/mod.rs","byte_start":70946,"byte_end":70999,"line_start":24,"line_end":24,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/mod.rs","byte_start":71000,"byte_end":71003,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This is async-signal-safe.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/mod.rs","byte_start":71004,"byte_end":71034,"line_start":26,"line_end":26,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":519},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/mod.rs","byte_start":71475,"byte_end":71480,"line_start":41,"line_end":41,"column_start":8,"column_end":13},"name":"abort","qualname":"::low_level::abort","value":"pub fn abort() -> !","parent":null,"children":[],"decl_id":null,"docs":" A bare libc abort.","sig":null,"attributes":[{"value":"/ A bare libc abort.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/mod.rs","byte_start":71224,"byte_end":71246,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/mod.rs","byte_start":71247,"byte_end":71250,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Unlike the [std::process::abort], this one is guaranteed to contain no additions or wrappers","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/mod.rs","byte_start":71251,"byte_end":71347,"line_start":38,"line_end":38,"column_start":1,"column_end":97}},{"value":"/ and therefore is async-signal-safe. You can use this to terminate the application from within a","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/mod.rs","byte_start":71348,"byte_end":71447,"line_start":39,"line_end":39,"column_start":1,"column_end":100}},{"value":"/ signal handler.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/mod.rs","byte_start":71448,"byte_end":71467,"line_start":40,"line_end":40,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":520},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/mod.rs","byte_start":71881,"byte_end":71885,"line_start":54,"line_end":54,"column_start":8,"column_end":12},"name":"exit","qualname":"::low_level::exit","value":"pub fn exit(c_int) -> !","parent":null,"children":[],"decl_id":null,"docs":" A bare libc exit.","sig":null,"attributes":[{"value":"/ A bare libc exit.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/mod.rs","byte_start":71535,"byte_end":71556,"line_start":47,"line_end":47,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/mod.rs","byte_start":71557,"byte_end":71560,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Unlike the [std::process::exit], this one is guaranteed to contain no additions or wrappers and","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/mod.rs","byte_start":71561,"byte_end":71660,"line_start":49,"line_end":49,"column_start":1,"column_end":100}},{"value":"/ therefore is async-signal-safe. You can use this to terminate the application from within a","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/mod.rs","byte_start":71661,"byte_end":71756,"line_start":50,"line_end":50,"column_start":1,"column_end":96}},{"value":"/ signal handler.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/mod.rs","byte_start":71757,"byte_end":71776,"line_start":51,"line_end":51,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/mod.rs","byte_start":71777,"byte_end":71780,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Also, see [`register_conditional_shutdown`][crate::flag::register_conditional_shutdown].","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/mod.rs","byte_start":71781,"byte_end":71873,"line_start":53,"line_end":53,"column_start":1,"column_end":93}}]},{"kind":"Mod","id":{"krate":0,"index":521},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":18792,"byte_end":18798,"line_start":360,"line_end":360,"column_start":9,"column_end":15},"name":"consts","qualname":"::consts","value":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":525},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":618}],"decl_id":null,"docs":" The low-level constants.","sig":null,"attributes":[{"value":"/ The low-level constants.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":18722,"byte_end":18750,"line_start":357,"line_end":357,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":18751,"byte_end":18754,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ Like the signal numbers.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":18755,"byte_end":18783,"line_start":359,"line_end":359,"column_start":1,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":525},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":19101,"byte_end":19107,"line_start":369,"line_end":369,"column_start":13,"column_end":19},"name":"signal","qualname":"::consts::signal","value":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","parent":null,"children":[{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":530},{"krate":0,"index":533},{"krate":0,"index":536},{"krate":0,"index":539},{"krate":0,"index":542},{"krate":0,"index":545},{"krate":0,"index":548},{"krate":0,"index":551},{"krate":0,"index":554},{"krate":0,"index":557},{"krate":0,"index":560},{"krate":0,"index":563},{"krate":0,"index":566},{"krate":0,"index":569},{"krate":0,"index":572},{"krate":0,"index":575},{"krate":0,"index":578},{"krate":0,"index":581},{"krate":0,"index":584},{"krate":0,"index":587},{"krate":0,"index":590},{"krate":0,"index":593},{"krate":0,"index":596},{"krate":0,"index":599},{"krate":0,"index":602},{"krate":0,"index":605},{"krate":0,"index":608},{"krate":0,"index":611}],"decl_id":null,"docs":" The signal constants.","sig":null,"attributes":[{"value":"/ The signal constants.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":18828,"byte_end":18853,"line_start":364,"line_end":364,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":18858,"byte_end":18861,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ Can be mass-imported by `use signal_hook::consts::signal::*`, without polluting the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":18866,"byte_end":18953,"line_start":366,"line_end":366,"column_start":5,"column_end":92}},{"value":"/ namespace with other names. Also available in the [`consts`][crate::consts] directly (but","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":18958,"byte_end":19051,"line_start":367,"line_end":367,"column_start":5,"column_end":98}},{"value":"/ with more constants around).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":19056,"byte_end":19088,"line_start":368,"line_end":368,"column_start":5,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":618},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":20184,"byte_end":20196,"line_start":398,"line_end":398,"column_start":15,"column_end":27},"name":"TERM_SIGNALS","qualname":"::consts::TERM_SIGNALS","value":"&[c_int]","parent":null,"children":[],"decl_id":null,"docs":" Various signals commonly requesting shutdown of an application.\n","sig":null,"attributes":[{"value":"/ Various signals commonly requesting shutdown of an application.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":20077,"byte_end":20144,"line_start":396,"line_end":396,"column_start":5,"column_end":72}},{"value":"cfg(not(windows))","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":20149,"byte_end":20169,"line_start":397,"line_end":397,"column_start":5,"column_end":25}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":44614,"byte_end":44615,"line_start":42,"line_end":42,"column_start":58,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":44838,"byte_end":44851,"line_start":54,"line_end":54,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":45080,"byte_end":45093,"line_start":64,"line_end":64,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":45421,"byte_end":45435,"line_start":78,"line_end":78,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":46475,"byte_end":46489,"line_start":109,"line_end":109,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":46829,"byte_end":46843,"line_start":119,"line_end":119,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":48306,"byte_end":48312,"line_start":164,"line_end":164,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":51113,"byte_end":51127,"line_start":243,"line_end":243,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":56183,"byte_end":56190,"line_start":378,"line_end":378,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":56364,"byte_end":56371,"line_start":387,"line_end":387,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":57409,"byte_end":57423,"line_start":424,"line_end":424,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":189},{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/raw.rs","byte_start":67799,"byte_end":67803,"line_start":23,"line_end":23,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/raw.rs","byte_start":69128,"byte_end":69142,"line_start":63,"line_end":63,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":66040,"byte_end":66041,"line_start":122,"line_end":122,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":66375,"byte_end":66385,"line_start":131,"line_end":131,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":35970,"byte_end":35981,"line_start":131,"line_end":131,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":343},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":41506,"byte_end":41517,"line_start":280,"line_end":280,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":42069,"byte_end":42076,"line_start":301,"line_end":301,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":77051,"byte_end":77058,"line_start":116,"line_end":116,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":78219,"byte_end":78226,"line_start":157,"line_end":157,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":78318,"byte_end":78325,"line_start":163,"line_end":163,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":78473,"byte_end":78480,"line_start":167,"line_end":167,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":84128,"byte_end":84134,"line_start":95,"line_end":95,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":84762,"byte_end":84768,"line_start":115,"line_end":115,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":84845,"byte_end":84851,"line_start":121,"line_end":121,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":18559,"byte_end":18563,"line_start":351,"line_end":351,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":18692,"byte_end":18700,"line_start":354,"line_end":354,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":43}},{"kind":"Mod","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":33566,"byte_end":33573,"line_start":60,"line_end":60,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":44}},{"kind":"Mod","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":33583,"byte_end":33594,"line_start":61,"line_end":61,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":201}},{"kind":"Mod","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":60964,"byte_end":60967,"line_start":17,"line_end":17,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":202}},{"kind":"Mod","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/lib.rs","byte_start":18710,"byte_end":18719,"line_start":355,"line_end":355,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":373}},{"kind":"Mod","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/mod.rs","byte_start":70589,"byte_end":70596,"line_start":11,"line_end":11,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":380}},{"kind":"Mod","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/mod.rs","byte_start":70671,"byte_end":70675,"line_start":14,"line_end":14,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":418}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":44504,"byte_end":44509,"line_start":38,"line_end":38,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":9553},"to":{"krate":0,"index":109}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":44512,"byte_end":44516,"line_start":38,"line_end":38,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":3019},"to":{"krate":0,"index":109}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":44519,"byte_end":44523,"line_start":38,"line_end":38,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":3031},"to":{"krate":0,"index":109}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":44614,"byte_end":44615,"line_start":42,"line_end":42,"column_start":58,"column_end":59},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":112},"to":{"krate":0,"index":109}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":44838,"byte_end":44851,"line_start":54,"line_end":54,"column_start":6,"column_end":19},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":45080,"byte_end":45093,"line_start":64,"line_end":64,"column_start":15,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":622},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":45421,"byte_end":45435,"line_start":78,"line_end":78,"column_start":22,"column_end":36},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":46196,"byte_end":46201,"line_start":100,"line_end":100,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":9553},"to":{"krate":0,"index":129}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":46204,"byte_end":46208,"line_start":100,"line_end":100,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":3019},"to":{"krate":0,"index":129}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":46211,"byte_end":46215,"line_start":100,"line_end":100,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":3031},"to":{"krate":0,"index":129}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":46475,"byte_end":46489,"line_start":109,"line_end":109,"column_start":32,"column_end":46},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":120},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":46829,"byte_end":46843,"line_start":119,"line_end":119,"column_start":36,"column_end":50},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":120},"to":{"krate":0,"index":129}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":48306,"byte_end":48312,"line_start":164,"line_end":164,"column_start":6,"column_end":12},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":627},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":51113,"byte_end":51127,"line_start":243,"line_end":243,"column_start":25,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":56183,"byte_end":56190,"line_start":378,"line_end":378,"column_start":22,"column_end":29},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":645},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":56364,"byte_end":56371,"line_start":387,"line_end":387,"column_start":35,"column_end":42},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":645},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/backend.rs","byte_start":57409,"byte_end":57423,"line_start":424,"line_end":424,"column_start":26,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":179},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/raw.rs","byte_start":67799,"byte_end":67803,"line_start":23,"line_end":23,"column_start":15,"column_end":19},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":652},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/raw.rs","byte_start":69128,"byte_end":69142,"line_start":63,"line_end":63,"column_start":29,"column_end":43},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":659},"to":{"krate":0,"index":261}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":61917,"byte_end":61922,"line_start":43,"line_end":43,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":9553},"to":{"krate":0,"index":261}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":61925,"byte_end":61929,"line_start":43,"line_end":43,"column_start":43,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":3019},"to":{"krate":0,"index":261}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":61932,"byte_end":61936,"line_start":43,"line_end":43,"column_start":50,"column_end":54},"kind":"SuperTrait","from":{"krate":2,"index":3031},"to":{"krate":0,"index":261}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":65979,"byte_end":65990,"line_start":120,"line_end":120,"column_start":32,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":261},"to":{"krate":0,"index":268}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":66040,"byte_end":66041,"line_start":122,"line_end":122,"column_start":46,"column_end":47},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":270},"to":{"krate":0,"index":268}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/exfiltrator/mod.rs","byte_start":66375,"byte_end":66385,"line_start":131,"line_end":131,"column_start":37,"column_end":47},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":668},"to":{"krate":0,"index":261}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":35970,"byte_end":35981,"line_start":131,"line_end":131,"column_start":22,"column_end":33},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":41506,"byte_end":41517,"line_start":280,"line_end":280,"column_start":19,"column_end":30},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":334},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/iterator/mod.rs","byte_start":42069,"byte_end":42076,"line_start":301,"line_end":301,"column_start":39,"column_end":46},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":362},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":77051,"byte_end":77058,"line_start":116,"line_end":116,"column_start":9,"column_end":16},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":78219,"byte_end":78226,"line_start":157,"line_end":157,"column_start":21,"column_end":28},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":399},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":78318,"byte_end":78325,"line_start":163,"line_end":163,"column_start":31,"column_end":38},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":399},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/channel.rs","byte_start":78473,"byte_end":78480,"line_start":167,"line_end":167,"column_start":31,"column_end":38},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":399},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":84128,"byte_end":84134,"line_start":95,"line_end":95,"column_start":6,"column_end":12},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":84762,"byte_end":84768,"line_start":115,"line_end":115,"column_start":18,"column_end":24},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":446},"to":{"krate":1,"index":6643}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/signal-hook-0.3.13/src/low_level/pipe.rs","byte_start":84845,"byte_end":84851,"line_start":121,"line_end":121,"column_start":15,"column_end":21},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":446},"to":{"krate":2,"index":3258}}]}