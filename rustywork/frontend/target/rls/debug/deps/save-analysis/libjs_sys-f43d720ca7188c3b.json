{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56","program":"/home/matheo/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","js_sys","--edition=2018","/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","--json=diagnostic-rendered-ansi,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=f43d720ca7188c3b","-C","extra-filename=-f43d720ca7188c3b","--out-dir","/home/matheo/Bureau/RustyMinitel/rustywork/frontend/target/rls/debug/deps","-L","dependency=/home/matheo/Bureau/RustyMinitel/rustywork/frontend/target/rls/debug/deps","--extern","wasm_bindgen=/home/matheo/Bureau/RustyMinitel/rustywork/frontend/target/rls/debug/deps/libwasm_bindgen-c022cb18b35fdd10.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/matheo/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/matheo/Bureau/RustyMinitel/rustywork/frontend/target/rls/debug/deps/libjs_sys-f43d720ca7188c3b.rmeta"},"prelude":{"crate_id":{"name":"js_sys","disambiguator":[2441024560399347949,0]},"crate_root":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src","external_crates":[{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14026078687029744792,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5443730852259234579,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4162025702538114948,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17612152343462746361,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5560808256873132085,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[135160560163186024,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5800521777261530329,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7095478770525139037,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17225897750877482818,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15613653607383163471,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[12428323400248712701,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[11893279639181573711,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[13583305032161054644,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16609837797022023111,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[18098459435141129808,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[15244551393771456017,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[6576340271055396708,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[15284510821186066958,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12982807908830018159,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","num":20,"id":{"name":"wasm_bindgen","disambiguator":[4640924743835000171,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","num":21,"id":{"name":"wasm_bindgen_macro","disambiguator":[8792242450136423389,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","num":22,"id":{"name":"cfg_if","disambiguator":[1004283514336169005,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","num":23,"id":{"name":"serde","disambiguator":[1074897244774438251,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","num":24,"id":{"name":"serde_derive","disambiguator":[10766499239977850325,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","num":25,"id":{"name":"serde_json","disambiguator":[12636216779611733685,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","num":26,"id":{"name":"itoa","disambiguator":[5510977470187001259,0]}},{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","num":27,"id":{"name":"ryu","disambiguator":[3374997887390214652,0]}}],"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":0,"byte_end":270074,"line_start":1,"line_end":5759,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":0,"byte_end":270074,"line_start":1,"line_end":5759,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":60},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":314},{"krate":0,"index":316},{"krate":0,"index":318},{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":533},{"krate":0,"index":535},{"krate":0,"index":537},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":324},{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":405},{"krate":0,"index":410},{"krate":0,"index":413},{"krate":0,"index":416},{"krate":0,"index":419},{"krate":0,"index":422},{"krate":0,"index":425},{"krate":0,"index":428},{"krate":0,"index":431},{"krate":0,"index":434},{"krate":0,"index":437},{"krate":0,"index":440},{"krate":0,"index":443},{"krate":0,"index":446},{"krate":0,"index":449},{"krate":0,"index":452},{"krate":0,"index":455},{"krate":0,"index":458},{"krate":0,"index":461},{"krate":0,"index":464},{"krate":0,"index":467},{"krate":0,"index":470},{"krate":0,"index":473},{"krate":0,"index":476},{"krate":0,"index":479},{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":491},{"krate":0,"index":494},{"krate":0,"index":497},{"krate":0,"index":500},{"krate":0,"index":503},{"krate":0,"index":506},{"krate":0,"index":509},{"krate":0,"index":512},{"krate":0,"index":515},{"krate":0,"index":518},{"krate":0,"index":521},{"krate":0,"index":524},{"krate":0,"index":527},{"krate":0,"index":530},{"krate":0,"index":546},{"krate":0,"index":550},{"krate":0,"index":553},{"krate":0,"index":85},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":104},{"krate":0,"index":108},{"krate":0,"index":656},{"krate":0,"index":658},{"krate":0,"index":660},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":556},{"krate":0,"index":628},{"krate":0,"index":631},{"krate":0,"index":636},{"krate":0,"index":641},{"krate":0,"index":644},{"krate":0,"index":647},{"krate":0,"index":650},{"krate":0,"index":653},{"krate":0,"index":766},{"krate":0,"index":768},{"krate":0,"index":770},{"krate":0,"index":669},{"krate":0,"index":741},{"krate":0,"index":744},{"krate":0,"index":749},{"krate":0,"index":754},{"krate":0,"index":757},{"krate":0,"index":760},{"krate":0,"index":763},{"krate":0,"index":772},{"krate":0,"index":775},{"krate":0,"index":778},{"krate":0,"index":110},{"krate":0,"index":918},{"krate":0,"index":920},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":809},{"krate":0,"index":883},{"krate":0,"index":886},{"krate":0,"index":891},{"krate":0,"index":896},{"krate":0,"index":898},{"krate":0,"index":900},{"krate":0,"index":903},{"krate":0,"index":906},{"krate":0,"index":909},{"krate":0,"index":912},{"krate":0,"index":915},{"krate":0,"index":112},{"krate":0,"index":116},{"krate":0,"index":929},{"krate":0,"index":931},{"krate":0,"index":933},{"krate":0,"index":935},{"krate":0,"index":937},{"krate":0,"index":939},{"krate":0,"index":941},{"krate":0,"index":943},{"krate":0,"index":945},{"krate":0,"index":947},{"krate":0,"index":949},{"krate":0,"index":951},{"krate":0,"index":117},{"krate":0,"index":953},{"krate":0,"index":955},{"krate":0,"index":957},{"krate":0,"index":959},{"krate":0,"index":961},{"krate":0,"index":963},{"krate":0,"index":965},{"krate":0,"index":967},{"krate":0,"index":969},{"krate":0,"index":971},{"krate":0,"index":973},{"krate":0,"index":975},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":977},{"krate":0,"index":980},{"krate":0,"index":983},{"krate":0,"index":986},{"krate":0,"index":989},{"krate":0,"index":993},{"krate":0,"index":996},{"krate":0,"index":999},{"krate":0,"index":1002},{"krate":0,"index":1006},{"krate":0,"index":1009},{"krate":0,"index":1012},{"krate":0,"index":1015},{"krate":0,"index":1019},{"krate":0,"index":1022},{"krate":0,"index":1025},{"krate":0,"index":1028},{"krate":0,"index":1032},{"krate":0,"index":1035},{"krate":0,"index":1038},{"krate":0,"index":1041},{"krate":0,"index":1045},{"krate":0,"index":1048},{"krate":0,"index":1051},{"krate":0,"index":1054},{"krate":0,"index":1058},{"krate":0,"index":1061},{"krate":0,"index":1064},{"krate":0,"index":1067},{"krate":0,"index":1071},{"krate":0,"index":1074},{"krate":0,"index":1077},{"krate":0,"index":1080},{"krate":0,"index":1084},{"krate":0,"index":1087},{"krate":0,"index":1090},{"krate":0,"index":1093},{"krate":0,"index":1097},{"krate":0,"index":1100},{"krate":0,"index":1103},{"krate":0,"index":1106},{"krate":0,"index":1110},{"krate":0,"index":1113},{"krate":0,"index":1116},{"krate":0,"index":1120},{"krate":0,"index":1124},{"krate":0,"index":1129},{"krate":0,"index":1134},{"krate":0,"index":1140},{"krate":0,"index":123},{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":1235},{"krate":0,"index":1237},{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1142},{"krate":0,"index":1216},{"krate":0,"index":1219},{"krate":0,"index":1224},{"krate":0,"index":1229},{"krate":0,"index":1232},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":1246},{"krate":0,"index":1249},{"krate":0,"index":1255},{"krate":0,"index":1438},{"krate":0,"index":1440},{"krate":0,"index":1442},{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1448},{"krate":0,"index":1449},{"krate":0,"index":1257},{"krate":0,"index":1329},{"krate":0,"index":1332},{"krate":0,"index":1337},{"krate":0,"index":1342},{"krate":0,"index":1345},{"krate":0,"index":1348},{"krate":0,"index":1351},{"krate":0,"index":1354},{"krate":0,"index":1357},{"krate":0,"index":1360},{"krate":0,"index":1363},{"krate":0,"index":1366},{"krate":0,"index":1369},{"krate":0,"index":1372},{"krate":0,"index":1375},{"krate":0,"index":1378},{"krate":0,"index":1381},{"krate":0,"index":1384},{"krate":0,"index":1387},{"krate":0,"index":1390},{"krate":0,"index":1393},{"krate":0,"index":1396},{"krate":0,"index":1399},{"krate":0,"index":1402},{"krate":0,"index":1405},{"krate":0,"index":1408},{"krate":0,"index":1411},{"krate":0,"index":1414},{"krate":0,"index":1417},{"krate":0,"index":1420},{"krate":0,"index":1423},{"krate":0,"index":1426},{"krate":0,"index":1429},{"krate":0,"index":1432},{"krate":0,"index":1435},{"krate":0,"index":1554},{"krate":0,"index":1556},{"krate":0,"index":1558},{"krate":0,"index":1560},{"krate":0,"index":1561},{"krate":0,"index":1564},{"krate":0,"index":1565},{"krate":0,"index":1451},{"krate":0,"index":1523},{"krate":0,"index":1526},{"krate":0,"index":1531},{"krate":0,"index":1536},{"krate":0,"index":1539},{"krate":0,"index":1542},{"krate":0,"index":1545},{"krate":0,"index":1548},{"krate":0,"index":1551},{"krate":0,"index":1567},{"krate":0,"index":1573},{"krate":0,"index":1673},{"krate":0,"index":1675},{"krate":0,"index":1677},{"krate":0,"index":1679},{"krate":0,"index":1680},{"krate":0,"index":1683},{"krate":0,"index":1684},{"krate":0,"index":1575},{"krate":0,"index":1647},{"krate":0,"index":1650},{"krate":0,"index":1655},{"krate":0,"index":1660},{"krate":0,"index":1665},{"krate":0,"index":1670},{"krate":0,"index":1817},{"krate":0,"index":1819},{"krate":0,"index":1821},{"krate":0,"index":1823},{"krate":0,"index":1824},{"krate":0,"index":1827},{"krate":0,"index":1828},{"krate":0,"index":1686},{"krate":0,"index":1759},{"krate":0,"index":1762},{"krate":0,"index":1767},{"krate":0,"index":1772},{"krate":0,"index":1775},{"krate":0,"index":1778},{"krate":0,"index":1781},{"krate":0,"index":1784},{"krate":0,"index":1787},{"krate":0,"index":1790},{"krate":0,"index":1793},{"krate":0,"index":1796},{"krate":0,"index":1799},{"krate":0,"index":1802},{"krate":0,"index":1805},{"krate":0,"index":1808},{"krate":0,"index":1811},{"krate":0,"index":1814},{"krate":0,"index":155},{"krate":0,"index":157},{"krate":0,"index":1924},{"krate":0,"index":1926},{"krate":0,"index":1928},{"krate":0,"index":1930},{"krate":0,"index":1931},{"krate":0,"index":1934},{"krate":0,"index":1935},{"krate":0,"index":1830},{"krate":0,"index":1902},{"krate":0,"index":1905},{"krate":0,"index":1910},{"krate":0,"index":1915},{"krate":0,"index":1918},{"krate":0,"index":1921},{"krate":0,"index":2046},{"krate":0,"index":2048},{"krate":0,"index":2050},{"krate":0,"index":2052},{"krate":0,"index":2053},{"krate":0,"index":2056},{"krate":0,"index":2057},{"krate":0,"index":1937},{"krate":0,"index":2009},{"krate":0,"index":2012},{"krate":0,"index":2017},{"krate":0,"index":2022},{"krate":0,"index":2025},{"krate":0,"index":2028},{"krate":0,"index":2031},{"krate":0,"index":2034},{"krate":0,"index":2037},{"krate":0,"index":2040},{"krate":0,"index":2043},{"krate":0,"index":159},{"krate":0,"index":2059},{"krate":0,"index":2062},{"krate":0,"index":2065},{"krate":0,"index":2147},{"krate":0,"index":2149},{"krate":0,"index":2151},{"krate":0,"index":2068},{"krate":0,"index":2141},{"krate":0,"index":2144},{"krate":0,"index":161},{"krate":0,"index":2311},{"krate":0,"index":2313},{"krate":0,"index":2315},{"krate":0,"index":2232},{"krate":0,"index":2305},{"krate":0,"index":2308},{"krate":0,"index":163},{"krate":0,"index":167},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":177},{"krate":0,"index":181},{"krate":0,"index":185},{"krate":0,"index":188},{"krate":0,"index":191},{"krate":0,"index":2408},{"krate":0,"index":2410},{"krate":0,"index":2412},{"krate":0,"index":2414},{"krate":0,"index":2415},{"krate":0,"index":2418},{"krate":0,"index":2419},{"krate":0,"index":2317},{"krate":0,"index":2389},{"krate":0,"index":2392},{"krate":0,"index":2397},{"krate":0,"index":2402},{"krate":0,"index":2405},{"krate":0,"index":192},{"krate":0,"index":2620},{"krate":0,"index":2622},{"krate":0,"index":2624},{"krate":0,"index":2625},{"krate":0,"index":2491},{"krate":0,"index":2565},{"krate":0,"index":2568},{"krate":0,"index":2573},{"krate":0,"index":2578},{"krate":0,"index":2581},{"krate":0,"index":2584},{"krate":0,"index":2587},{"krate":0,"index":2590},{"krate":0,"index":2593},{"krate":0,"index":2596},{"krate":0,"index":2599},{"krate":0,"index":2602},{"krate":0,"index":2605},{"krate":0,"index":2608},{"krate":0,"index":2611},{"krate":0,"index":2614},{"krate":0,"index":2617},{"krate":0,"index":194},{"krate":0,"index":205},{"krate":0,"index":2628},{"krate":0,"index":2630},{"krate":0,"index":2632},{"krate":0,"index":2634},{"krate":0,"index":2636},{"krate":0,"index":2638},{"krate":0,"index":2640},{"krate":0,"index":2642},{"krate":0,"index":2644},{"krate":0,"index":2646},{"krate":0,"index":2648},{"krate":0,"index":2650},{"krate":0,"index":2652},{"krate":0,"index":2654},{"krate":0,"index":2656},{"krate":0,"index":2658},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":216},{"krate":0,"index":218},{"krate":0,"index":2660},{"krate":0,"index":2663},{"krate":0,"index":2666},{"krate":0,"index":2669},{"krate":0,"index":2672},{"krate":0,"index":2676},{"krate":0,"index":2679},{"krate":0,"index":2682},{"krate":0,"index":2685},{"krate":0,"index":2689},{"krate":0,"index":2692},{"krate":0,"index":2695},{"krate":0,"index":2698},{"krate":0,"index":2702},{"krate":0,"index":2705},{"krate":0,"index":2708},{"krate":0,"index":2711},{"krate":0,"index":2715},{"krate":0,"index":2718},{"krate":0,"index":2721},{"krate":0,"index":2724},{"krate":0,"index":2728},{"krate":0,"index":2731},{"krate":0,"index":2734},{"krate":0,"index":2737},{"krate":0,"index":2741},{"krate":0,"index":2744},{"krate":0,"index":2747},{"krate":0,"index":2750},{"krate":0,"index":2754},{"krate":0,"index":2757},{"krate":0,"index":2760},{"krate":0,"index":2763},{"krate":0,"index":2767},{"krate":0,"index":2770},{"krate":0,"index":2773},{"krate":0,"index":2776},{"krate":0,"index":2780},{"krate":0,"index":2783},{"krate":0,"index":2786},{"krate":0,"index":2789},{"krate":0,"index":2793},{"krate":0,"index":2796},{"krate":0,"index":2799},{"krate":0,"index":2803},{"krate":0,"index":2807},{"krate":0,"index":2812},{"krate":0,"index":221},{"krate":0,"index":227},{"krate":0,"index":3076},{"krate":0,"index":3078},{"krate":0,"index":3080},{"krate":0,"index":3082},{"krate":0,"index":3083},{"krate":0,"index":3086},{"krate":0,"index":3087},{"krate":0,"index":2817},{"krate":0,"index":2889},{"krate":0,"index":2892},{"krate":0,"index":2897},{"krate":0,"index":2902},{"krate":0,"index":2905},{"krate":0,"index":2908},{"krate":0,"index":2911},{"krate":0,"index":2914},{"krate":0,"index":2917},{"krate":0,"index":2920},{"krate":0,"index":2923},{"krate":0,"index":2926},{"krate":0,"index":2929},{"krate":0,"index":2932},{"krate":0,"index":2935},{"krate":0,"index":2938},{"krate":0,"index":2941},{"krate":0,"index":2944},{"krate":0,"index":2947},{"krate":0,"index":2950},{"krate":0,"index":2953},{"krate":0,"index":2956},{"krate":0,"index":2959},{"krate":0,"index":2962},{"krate":0,"index":2965},{"krate":0,"index":2968},{"krate":0,"index":2971},{"krate":0,"index":2974},{"krate":0,"index":2977},{"krate":0,"index":2980},{"krate":0,"index":2983},{"krate":0,"index":2986},{"krate":0,"index":2989},{"krate":0,"index":2992},{"krate":0,"index":2995},{"krate":0,"index":2998},{"krate":0,"index":3001},{"krate":0,"index":3004},{"krate":0,"index":3007},{"krate":0,"index":3010},{"krate":0,"index":3013},{"krate":0,"index":3016},{"krate":0,"index":3019},{"krate":0,"index":3022},{"krate":0,"index":3025},{"krate":0,"index":3028},{"krate":0,"index":3031},{"krate":0,"index":3034},{"krate":0,"index":3037},{"krate":0,"index":3040},{"krate":0,"index":3043},{"krate":0,"index":3046},{"krate":0,"index":3049},{"krate":0,"index":3052},{"krate":0,"index":3055},{"krate":0,"index":3058},{"krate":0,"index":3061},{"krate":0,"index":3064},{"krate":0,"index":3067},{"krate":0,"index":3070},{"krate":0,"index":3073},{"krate":0,"index":3257},{"krate":0,"index":3259},{"krate":0,"index":3261},{"krate":0,"index":3089},{"krate":0,"index":3161},{"krate":0,"index":3164},{"krate":0,"index":3167},{"krate":0,"index":3170},{"krate":0,"index":3173},{"krate":0,"index":3176},{"krate":0,"index":3179},{"krate":0,"index":3182},{"krate":0,"index":3185},{"krate":0,"index":3188},{"krate":0,"index":3191},{"krate":0,"index":3194},{"krate":0,"index":3197},{"krate":0,"index":3200},{"krate":0,"index":3203},{"krate":0,"index":3206},{"krate":0,"index":3209},{"krate":0,"index":3212},{"krate":0,"index":3215},{"krate":0,"index":3218},{"krate":0,"index":3221},{"krate":0,"index":3224},{"krate":0,"index":3227},{"krate":0,"index":3230},{"krate":0,"index":3233},{"krate":0,"index":3236},{"krate":0,"index":3239},{"krate":0,"index":3242},{"krate":0,"index":3245},{"krate":0,"index":3248},{"krate":0,"index":3251},{"krate":0,"index":3254},{"krate":0,"index":230},{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":3344},{"krate":0,"index":3346},{"krate":0,"index":3348},{"krate":0,"index":3263},{"krate":0,"index":3335},{"krate":0,"index":3338},{"krate":0,"index":3341},{"krate":0,"index":3448},{"krate":0,"index":3450},{"krate":0,"index":3452},{"krate":0,"index":3454},{"krate":0,"index":3455},{"krate":0,"index":3458},{"krate":0,"index":3459},{"krate":0,"index":3350},{"krate":0,"index":3422},{"krate":0,"index":3425},{"krate":0,"index":3430},{"krate":0,"index":3435},{"krate":0,"index":3440},{"krate":0,"index":3445},{"krate":0,"index":3559},{"krate":0,"index":3561},{"krate":0,"index":3563},{"krate":0,"index":3565},{"krate":0,"index":3566},{"krate":0,"index":3569},{"krate":0,"index":3570},{"krate":0,"index":3461},{"krate":0,"index":3533},{"krate":0,"index":3536},{"krate":0,"index":3541},{"krate":0,"index":3546},{"krate":0,"index":3551},{"krate":0,"index":3556},{"krate":0,"index":237},{"krate":0,"index":3779},{"krate":0,"index":3781},{"krate":0,"index":3783},{"krate":0,"index":3785},{"krate":0,"index":3786},{"krate":0,"index":3789},{"krate":0,"index":3790},{"krate":0,"index":3610},{"krate":0,"index":3682},{"krate":0,"index":3685},{"krate":0,"index":3690},{"krate":0,"index":3695},{"krate":0,"index":3698},{"krate":0,"index":3701},{"krate":0,"index":3704},{"krate":0,"index":3707},{"krate":0,"index":3710},{"krate":0,"index":3713},{"krate":0,"index":3716},{"krate":0,"index":3719},{"krate":0,"index":3722},{"krate":0,"index":3725},{"krate":0,"index":3728},{"krate":0,"index":3731},{"krate":0,"index":3734},{"krate":0,"index":3737},{"krate":0,"index":3740},{"krate":0,"index":3743},{"krate":0,"index":3746},{"krate":0,"index":3749},{"krate":0,"index":3752},{"krate":0,"index":3755},{"krate":0,"index":3758},{"krate":0,"index":3761},{"krate":0,"index":3764},{"krate":0,"index":3767},{"krate":0,"index":3770},{"krate":0,"index":3773},{"krate":0,"index":3776},{"krate":0,"index":3898},{"krate":0,"index":3900},{"krate":0,"index":3902},{"krate":0,"index":3904},{"krate":0,"index":3905},{"krate":0,"index":3908},{"krate":0,"index":3909},{"krate":0,"index":3792},{"krate":0,"index":3864},{"krate":0,"index":3867},{"krate":0,"index":3872},{"krate":0,"index":3877},{"krate":0,"index":3880},{"krate":0,"index":3883},{"krate":0,"index":3886},{"krate":0,"index":3889},{"krate":0,"index":3892},{"krate":0,"index":3895},{"krate":0,"index":239},{"krate":0,"index":3911},{"krate":0,"index":3914},{"krate":0,"index":3917},{"krate":0,"index":4018},{"krate":0,"index":4020},{"krate":0,"index":4022},{"krate":0,"index":4024},{"krate":0,"index":4025},{"krate":0,"index":4028},{"krate":0,"index":4029},{"krate":0,"index":3920},{"krate":0,"index":3992},{"krate":0,"index":3995},{"krate":0,"index":4000},{"krate":0,"index":4005},{"krate":0,"index":4010},{"krate":0,"index":4015},{"krate":0,"index":4129},{"krate":0,"index":4131},{"krate":0,"index":4133},{"krate":0,"index":4135},{"krate":0,"index":4136},{"krate":0,"index":4139},{"krate":0,"index":4140},{"krate":0,"index":4031},{"krate":0,"index":4103},{"krate":0,"index":4106},{"krate":0,"index":4111},{"krate":0,"index":4116},{"krate":0,"index":4121},{"krate":0,"index":4126},{"krate":0,"index":4240},{"krate":0,"index":4242},{"krate":0,"index":4244},{"krate":0,"index":4246},{"krate":0,"index":4247},{"krate":0,"index":4250},{"krate":0,"index":4251},{"krate":0,"index":4142},{"krate":0,"index":4214},{"krate":0,"index":4217},{"krate":0,"index":4222},{"krate":0,"index":4227},{"krate":0,"index":4232},{"krate":0,"index":4237},{"krate":0,"index":4353},{"krate":0,"index":4355},{"krate":0,"index":4357},{"krate":0,"index":4359},{"krate":0,"index":4360},{"krate":0,"index":4363},{"krate":0,"index":4364},{"krate":0,"index":4253},{"krate":0,"index":4325},{"krate":0,"index":4328},{"krate":0,"index":4333},{"krate":0,"index":4338},{"krate":0,"index":4341},{"krate":0,"index":4344},{"krate":0,"index":4347},{"krate":0,"index":4350},{"krate":0,"index":241},{"krate":0,"index":4463},{"krate":0,"index":4465},{"krate":0,"index":4467},{"krate":0,"index":4469},{"krate":0,"index":4470},{"krate":0,"index":4473},{"krate":0,"index":4474},{"krate":0,"index":4366},{"krate":0,"index":4438},{"krate":0,"index":4441},{"krate":0,"index":4446},{"krate":0,"index":4451},{"krate":0,"index":4454},{"krate":0,"index":4457},{"krate":0,"index":4460},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":247},{"krate":0,"index":5604},{"krate":0,"index":5606},{"krate":0,"index":5608},{"krate":0,"index":5609},{"krate":0,"index":5612},{"krate":0,"index":5613},{"krate":0,"index":5338},{"krate":0,"index":5411},{"krate":0,"index":5414},{"krate":0,"index":5419},{"krate":0,"index":5424},{"krate":0,"index":5427},{"krate":0,"index":5430},{"krate":0,"index":5433},{"krate":0,"index":5436},{"krate":0,"index":5439},{"krate":0,"index":5442},{"krate":0,"index":5445},{"krate":0,"index":5448},{"krate":0,"index":5451},{"krate":0,"index":5454},{"krate":0,"index":5457},{"krate":0,"index":5460},{"krate":0,"index":5463},{"krate":0,"index":5466},{"krate":0,"index":5469},{"krate":0,"index":5472},{"krate":0,"index":5475},{"krate":0,"index":5478},{"krate":0,"index":5481},{"krate":0,"index":5484},{"krate":0,"index":5487},{"krate":0,"index":5490},{"krate":0,"index":5493},{"krate":0,"index":5496},{"krate":0,"index":5499},{"krate":0,"index":5502},{"krate":0,"index":5505},{"krate":0,"index":5508},{"krate":0,"index":5511},{"krate":0,"index":5514},{"krate":0,"index":5517},{"krate":0,"index":5520},{"krate":0,"index":5523},{"krate":0,"index":5526},{"krate":0,"index":5529},{"krate":0,"index":5532},{"krate":0,"index":5535},{"krate":0,"index":5538},{"krate":0,"index":5541},{"krate":0,"index":5544},{"krate":0,"index":5547},{"krate":0,"index":5550},{"krate":0,"index":5553},{"krate":0,"index":5556},{"krate":0,"index":5559},{"krate":0,"index":5562},{"krate":0,"index":5565},{"krate":0,"index":5568},{"krate":0,"index":5571},{"krate":0,"index":5574},{"krate":0,"index":5577},{"krate":0,"index":5580},{"krate":0,"index":5583},{"krate":0,"index":5586},{"krate":0,"index":5589},{"krate":0,"index":5592},{"krate":0,"index":5595},{"krate":0,"index":5598},{"krate":0,"index":5601},{"krate":0,"index":249},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":263},{"krate":0,"index":265},{"krate":0,"index":268},{"krate":0,"index":271},{"krate":0,"index":273},{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":5739},{"krate":0,"index":5741},{"krate":0,"index":5743},{"krate":0,"index":5615},{"krate":0,"index":5688},{"krate":0,"index":5691},{"krate":0,"index":5694},{"krate":0,"index":5697},{"krate":0,"index":5700},{"krate":0,"index":5703},{"krate":0,"index":5706},{"krate":0,"index":5709},{"krate":0,"index":5712},{"krate":0,"index":5715},{"krate":0,"index":5718},{"krate":0,"index":5721},{"krate":0,"index":5724},{"krate":0,"index":5727},{"krate":0,"index":5730},{"krate":0,"index":5733},{"krate":0,"index":5736},{"krate":0,"index":287},{"krate":0,"index":6277},{"krate":0,"index":6279},{"krate":0,"index":6281},{"krate":0,"index":6165},{"krate":0,"index":6237},{"krate":0,"index":6240},{"krate":0,"index":6245},{"krate":0,"index":6250},{"krate":0,"index":6253},{"krate":0,"index":6256},{"krate":0,"index":6259},{"krate":0,"index":6262},{"krate":0,"index":6265},{"krate":0,"index":6268},{"krate":0,"index":6271},{"krate":0,"index":6274},{"krate":0,"index":297},{"krate":0,"index":303},{"krate":0,"index":6637},{"krate":0,"index":6639},{"krate":0,"index":6641},{"krate":0,"index":6507},{"krate":0,"index":6579},{"krate":0,"index":6582},{"krate":0,"index":6587},{"krate":0,"index":6592},{"krate":0,"index":6595},{"krate":0,"index":6598},{"krate":0,"index":6601},{"krate":0,"index":6604},{"krate":0,"index":6607},{"krate":0,"index":6610},{"krate":0,"index":6613},{"krate":0,"index":6616},{"krate":0,"index":6619},{"krate":0,"index":6622},{"krate":0,"index":6625},{"krate":0,"index":6628},{"krate":0,"index":6631},{"krate":0,"index":6634},{"krate":0,"index":6375},{"krate":0,"index":6382},{"krate":0,"index":6385},{"krate":0,"index":6773},{"krate":0,"index":6775},{"krate":0,"index":6777},{"krate":0,"index":6643},{"krate":0,"index":6715},{"krate":0,"index":6718},{"krate":0,"index":6723},{"krate":0,"index":6728},{"krate":0,"index":6731},{"krate":0,"index":6734},{"krate":0,"index":6737},{"krate":0,"index":6740},{"krate":0,"index":6743},{"krate":0,"index":6746},{"krate":0,"index":6749},{"krate":0,"index":6752},{"krate":0,"index":6755},{"krate":0,"index":6758},{"krate":0,"index":6761},{"krate":0,"index":6764},{"krate":0,"index":6767},{"krate":0,"index":6770},{"krate":0,"index":6387},{"krate":0,"index":6394},{"krate":0,"index":6397},{"krate":0,"index":6909},{"krate":0,"index":6911},{"krate":0,"index":6913},{"krate":0,"index":6779},{"krate":0,"index":6851},{"krate":0,"index":6854},{"krate":0,"index":6859},{"krate":0,"index":6864},{"krate":0,"index":6867},{"krate":0,"index":6870},{"krate":0,"index":6873},{"krate":0,"index":6876},{"krate":0,"index":6879},{"krate":0,"index":6882},{"krate":0,"index":6885},{"krate":0,"index":6888},{"krate":0,"index":6891},{"krate":0,"index":6894},{"krate":0,"index":6897},{"krate":0,"index":6900},{"krate":0,"index":6903},{"krate":0,"index":6906},{"krate":0,"index":6399},{"krate":0,"index":6406},{"krate":0,"index":6409},{"krate":0,"index":7045},{"krate":0,"index":7047},{"krate":0,"index":7049},{"krate":0,"index":6915},{"krate":0,"index":6987},{"krate":0,"index":6990},{"krate":0,"index":6995},{"krate":0,"index":7000},{"krate":0,"index":7003},{"krate":0,"index":7006},{"krate":0,"index":7009},{"krate":0,"index":7012},{"krate":0,"index":7015},{"krate":0,"index":7018},{"krate":0,"index":7021},{"krate":0,"index":7024},{"krate":0,"index":7027},{"krate":0,"index":7030},{"krate":0,"index":7033},{"krate":0,"index":7036},{"krate":0,"index":7039},{"krate":0,"index":7042},{"krate":0,"index":6411},{"krate":0,"index":6418},{"krate":0,"index":6421},{"krate":0,"index":7181},{"krate":0,"index":7183},{"krate":0,"index":7185},{"krate":0,"index":7051},{"krate":0,"index":7123},{"krate":0,"index":7126},{"krate":0,"index":7131},{"krate":0,"index":7136},{"krate":0,"index":7139},{"krate":0,"index":7142},{"krate":0,"index":7145},{"krate":0,"index":7148},{"krate":0,"index":7151},{"krate":0,"index":7154},{"krate":0,"index":7157},{"krate":0,"index":7160},{"krate":0,"index":7163},{"krate":0,"index":7166},{"krate":0,"index":7169},{"krate":0,"index":7172},{"krate":0,"index":7175},{"krate":0,"index":7178},{"krate":0,"index":6423},{"krate":0,"index":6430},{"krate":0,"index":6433},{"krate":0,"index":7317},{"krate":0,"index":7319},{"krate":0,"index":7321},{"krate":0,"index":7187},{"krate":0,"index":7259},{"krate":0,"index":7262},{"krate":0,"index":7267},{"krate":0,"index":7272},{"krate":0,"index":7275},{"krate":0,"index":7278},{"krate":0,"index":7281},{"krate":0,"index":7284},{"krate":0,"index":7287},{"krate":0,"index":7290},{"krate":0,"index":7293},{"krate":0,"index":7296},{"krate":0,"index":7299},{"krate":0,"index":7302},{"krate":0,"index":7305},{"krate":0,"index":7308},{"krate":0,"index":7311},{"krate":0,"index":7314},{"krate":0,"index":6435},{"krate":0,"index":6442},{"krate":0,"index":6445},{"krate":0,"index":7453},{"krate":0,"index":7455},{"krate":0,"index":7457},{"krate":0,"index":7323},{"krate":0,"index":7395},{"krate":0,"index":7398},{"krate":0,"index":7403},{"krate":0,"index":7408},{"krate":0,"index":7411},{"krate":0,"index":7414},{"krate":0,"index":7417},{"krate":0,"index":7420},{"krate":0,"index":7423},{"krate":0,"index":7426},{"krate":0,"index":7429},{"krate":0,"index":7432},{"krate":0,"index":7435},{"krate":0,"index":7438},{"krate":0,"index":7441},{"krate":0,"index":7444},{"krate":0,"index":7447},{"krate":0,"index":7450},{"krate":0,"index":6447},{"krate":0,"index":6454},{"krate":0,"index":6457},{"krate":0,"index":7589},{"krate":0,"index":7591},{"krate":0,"index":7593},{"krate":0,"index":7459},{"krate":0,"index":7531},{"krate":0,"index":7534},{"krate":0,"index":7539},{"krate":0,"index":7544},{"krate":0,"index":7547},{"krate":0,"index":7550},{"krate":0,"index":7553},{"krate":0,"index":7556},{"krate":0,"index":7559},{"krate":0,"index":7562},{"krate":0,"index":7565},{"krate":0,"index":7568},{"krate":0,"index":7571},{"krate":0,"index":7574},{"krate":0,"index":7577},{"krate":0,"index":7580},{"krate":0,"index":7583},{"krate":0,"index":7586},{"krate":0,"index":6459},{"krate":0,"index":6466},{"krate":0,"index":6469},{"krate":0,"index":7725},{"krate":0,"index":7727},{"krate":0,"index":7729},{"krate":0,"index":7595},{"krate":0,"index":7667},{"krate":0,"index":7670},{"krate":0,"index":7675},{"krate":0,"index":7680},{"krate":0,"index":7683},{"krate":0,"index":7686},{"krate":0,"index":7689},{"krate":0,"index":7692},{"krate":0,"index":7695},{"krate":0,"index":7698},{"krate":0,"index":7701},{"krate":0,"index":7704},{"krate":0,"index":7707},{"krate":0,"index":7710},{"krate":0,"index":7713},{"krate":0,"index":7716},{"krate":0,"index":7719},{"krate":0,"index":7722},{"krate":0,"index":6471},{"krate":0,"index":6478},{"krate":0,"index":6481},{"krate":0,"index":7861},{"krate":0,"index":7863},{"krate":0,"index":7865},{"krate":0,"index":7731},{"krate":0,"index":7803},{"krate":0,"index":7806},{"krate":0,"index":7811},{"krate":0,"index":7816},{"krate":0,"index":7819},{"krate":0,"index":7822},{"krate":0,"index":7825},{"krate":0,"index":7828},{"krate":0,"index":7831},{"krate":0,"index":7834},{"krate":0,"index":7837},{"krate":0,"index":7840},{"krate":0,"index":7843},{"krate":0,"index":7846},{"krate":0,"index":7849},{"krate":0,"index":7852},{"krate":0,"index":7855},{"krate":0,"index":7858},{"krate":0,"index":6483},{"krate":0,"index":6490},{"krate":0,"index":6493},{"krate":0,"index":7997},{"krate":0,"index":7999},{"krate":0,"index":8001},{"krate":0,"index":7867},{"krate":0,"index":7939},{"krate":0,"index":7942},{"krate":0,"index":7947},{"krate":0,"index":7952},{"krate":0,"index":7955},{"krate":0,"index":7958},{"krate":0,"index":7961},{"krate":0,"index":7964},{"krate":0,"index":7967},{"krate":0,"index":7970},{"krate":0,"index":7973},{"krate":0,"index":7976},{"krate":0,"index":7979},{"krate":0,"index":7982},{"krate":0,"index":7985},{"krate":0,"index":7988},{"krate":0,"index":7991},{"krate":0,"index":7994},{"krate":0,"index":6495},{"krate":0,"index":6502},{"krate":0,"index":6505}],"decl_id":null,"docs":" Bindings to JavaScript's standard, built-in objects, including their methods\n and properties.","sig":null,"attributes":[{"value":"/ Bindings to JavaScript's standard, built-in objects, including their methods","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":0,"byte_end":80,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"/ and properties.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":81,"byte_end":100,"line_start":2,"line_end":2,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":101,"byte_end":104,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ This does *not* include any Web, Node, or any other JS environment","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":105,"byte_end":175,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/ APIs. Only the things that are guaranteed to exist in the global scope by","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":176,"byte_end":253,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"/ the ECMAScript standard.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":254,"byte_end":282,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":283,"byte_end":286,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects>","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":287,"byte_end":373,"line_start":8,"line_end":8,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":374,"byte_end":377,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ## A Note About `camelCase`, `snake_case`, and Naming Conventions","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":378,"byte_end":447,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":448,"byte_end":451,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ JavaScript's global objects use `camelCase` naming conventions for functions","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":452,"byte_end":532,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ and methods, but Rust style is to use `snake_case`. These bindings expose","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":533,"byte_end":610,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ the Rust style `snake_case` name. Additionally, acronyms within a method","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":611,"byte_end":687,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ name are all lower case, where as in JavaScript they are all upper case. For","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":688,"byte_end":768,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/ example, `decodeURI` in JavaScript is exposed as `decode_uri` in these","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":769,"byte_end":843,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ bindings.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":844,"byte_end":857,"line_start":17,"line_end":17,"column_start":1,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":304},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":6657,"byte_end":6667,"line_start":222,"line_end":222,"column_start":12,"column_end":22},"name":"decode_uri","qualname":"::decode_uri","value":"pub fn decode_uri(&str) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `decodeURI()` function decodes a Uniform Resource Identifier (URI)\n previously created by `encodeURI` or by a similar routine.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":6295,"byte_end":6310,"line_start":215,"line_end":215,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":6295,"byte_end":6310,"line_start":215,"line_end":215,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":306},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":7093,"byte_end":7113,"line_start":229,"line_end":229,"column_start":12,"column_end":32},"name":"decode_uri_component","qualname":"::decode_uri_component","value":"pub fn decode_uri_component(&str) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `decodeURIComponent()` function decodes a Uniform Resource Identifier (URI) component\n previously created by `encodeURIComponent` or by a similar routine.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":6295,"byte_end":6310,"line_start":215,"line_end":215,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":6295,"byte_end":6310,"line_start":215,"line_end":215,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":308},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":7686,"byte_end":7696,"line_start":239,"line_end":239,"column_start":12,"column_end":22},"name":"encode_uri","qualname":"::encode_uri","value":"pub fn encode_uri(&str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `encodeURI()` function encodes a Uniform Resource Identifier (URI)\n by replacing each instance of certain characters by one, two, three, or\n four escape sequences representing the UTF-8 encoding of the character\n (will only be four escape sequences for characters composed of two\n \"surrogate\" characters).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":6295,"byte_end":6310,"line_start":215,"line_end":215,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":6295,"byte_end":6310,"line_start":215,"line_end":215,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":310},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":8281,"byte_end":8301,"line_start":248,"line_end":248,"column_start":12,"column_end":32},"name":"encode_uri_component","qualname":"::encode_uri_component","value":"pub fn encode_uri_component(&str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `encodeURIComponent()` function encodes a Uniform Resource Identifier (URI) component\n by replacing each instance of certain characters by one, two, three, or four escape sequences\n representing the UTF-8 encoding of the character\n (will only be four escape sequences for characters composed of two \"surrogate\" characters).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":6295,"byte_end":6310,"line_start":215,"line_end":215,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":6295,"byte_end":6310,"line_start":215,"line_end":215,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":312},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":8573,"byte_end":8577,"line_start":254,"line_end":254,"column_start":12,"column_end":16},"name":"eval","qualname":"::eval","value":"pub fn eval(&str) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `eval()` function evaluates JavaScript code represented as a string.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":6295,"byte_end":6310,"line_start":215,"line_end":215,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":6295,"byte_end":6310,"line_start":215,"line_end":215,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":314},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":8970,"byte_end":8979,"line_start":261,"line_end":261,"column_start":12,"column_end":21},"name":"is_finite","qualname":"::is_finite","value":"pub fn is_finite(&JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The global `isFinite()` function determines whether the passed value is a finite number.\n If needed, the parameter is first converted to a number.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":6295,"byte_end":6310,"line_start":215,"line_end":215,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":6295,"byte_end":6310,"line_start":215,"line_end":215,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":316},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":9359,"byte_end":9368,"line_start":268,"line_end":268,"column_start":12,"column_end":21},"name":"parse_int","qualname":"::parse_int","value":"pub fn parse_int(&str, u8) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `parseInt()` function parses a string argument and returns an integer\n of the specified radix (the base in mathematical numeral systems), or NaN on error.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":6295,"byte_end":6310,"line_start":215,"line_end":215,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":6295,"byte_end":6310,"line_start":215,"line_end":215,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":318},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":9700,"byte_end":9711,"line_start":275,"line_end":275,"column_start":12,"column_end":23},"name":"parse_float","qualname":"::parse_float","value":"pub fn parse_float(&str) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `parseFloat()` function parses an argument and returns a floating point number,\n or NaN on error.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":6295,"byte_end":6310,"line_start":215,"line_end":215,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":6295,"byte_end":6310,"line_start":215,"line_end":215,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":320},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10032,"byte_end":10038,"line_start":282,"line_end":282,"column_start":12,"column_end":18},"name":"escape","qualname":"::escape","value":"pub fn escape(&str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `escape()` function computes a new string in which certain characters have been\n replaced by a hexadecimal escape sequence.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":6295,"byte_end":6310,"line_start":215,"line_end":215,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":6295,"byte_end":6310,"line_start":215,"line_end":215,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":322},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10541,"byte_end":10549,"line_start":291,"line_end":291,"column_start":12,"column_end":20},"name":"unescape","qualname":"::unescape","value":"pub fn unescape(&str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `unescape()` function computes a new string in which hexadecimal escape\n sequences are replaced with the character that it represents. The escape sequences might\n be introduced by a function like `escape`. Usually, `decodeURI` or `decodeURIComponent`\n are preferred over `unescape`.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":6295,"byte_end":6310,"line_start":215,"line_end":215,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":6295,"byte_end":6310,"line_start":215,"line_end":215,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":533},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10774,"byte_end":10779,"line_start":299,"line_end":299,"column_start":14,"column_end":19},"name":"Array","qualname":"::Array","value":"Array {  }","parent":null,"children":[{"krate":0,"index":534}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10861,"byte_end":10864,"line_start":303,"line_end":303,"column_start":12,"column_end":15},"name":"new","qualname":"<Array>::new","value":"pub fn new() -> Array","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty array.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":11019,"byte_end":11034,"line_start":307,"line_end":307,"column_start":12,"column_end":27},"name":"new_with_length","qualname":"<Array>::new_with_length","value":"pub fn new_with_length(u32) -> Array","parent":null,"children":[],"decl_id":null,"docs":" Creates a new array with the specified length (elements are initialized to `undefined`).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":11219,"byte_end":11222,"line_start":311,"line_end":311,"column_start":12,"column_end":15},"name":"get","qualname":"<Array>::get","value":"pub fn get(&Self, u32) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the element at the index (returns `undefined` if the index is out of range).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":11424,"byte_end":11427,"line_start":315,"line_end":315,"column_start":12,"column_end":15},"name":"set","qualname":"<Array>::set","value":"pub fn set(&Self, u32, JsValue)","parent":null,"children":[],"decl_id":null,"docs":" Sets the element at the index (auto-enlarges the array if the index is out of range).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":11780,"byte_end":11786,"line_start":323,"line_end":323,"column_start":12,"column_end":18},"name":"delete","qualname":"<Array>::delete","value":"pub fn delete(&Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Deletes the element at the index (does nothing if the index is out of range).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":12000,"byte_end":12004,"line_start":328,"line_end":328,"column_start":12,"column_end":16},"name":"from","qualname":"<Array>::from","value":"pub fn from(&JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Array.from()` method creates a new, shallow-copied `Array` instance\n from an array-like or iterable object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":12383,"byte_end":12394,"line_start":335,"line_end":335,"column_start":12,"column_end":23},"name":"copy_within","qualname":"<Array>::copy_within","value":"pub fn copy_within(&Self, i32, i32, i32) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `copyWithin()` method shallow copies part of an array to another\n location in the same array and returns it, without modifying its size.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":12782,"byte_end":12788,"line_start":342,"line_end":342,"column_start":12,"column_end":18},"name":"concat","qualname":"<Array>::concat","value":"pub fn concat(&Self, &Array) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `concat()` method is used to merge two or more arrays. This method\n does not change the existing arrays, but instead returns a new array.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":13127,"byte_end":13132,"line_start":349,"line_end":349,"column_start":12,"column_end":17},"name":"every","qualname":"<Array>::every","value":"pub fn every(&Self, &mut dyn FnMut(JsValue, u32, Array) -> bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `every()` method tests whether all elements in the array pass the test\n implemented by the provided function.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":13539,"byte_end":13543,"line_start":356,"line_end":356,"column_start":12,"column_end":16},"name":"fill","qualname":"<Array>::fill","value":"pub fn fill(&Self, &JsValue, u32, u32) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `fill()` method fills all the elements of an array from a start index\n to an end index with a static value. The end index is not included.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":13911,"byte_end":13917,"line_start":363,"line_end":363,"column_start":12,"column_end":18},"name":"filter","qualname":"<Array>::filter","value":"pub fn filter(&Self, &mut dyn FnMut(JsValue, u32, Array) -> bool) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `filter()` method creates a new array with all elements that pass the\n test implemented by the provided function.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":14337,"byte_end":14341,"line_start":370,"line_end":370,"column_start":12,"column_end":16},"name":"find","qualname":"<Array>::find","value":"pub fn find(&Self, &mut dyn FnMut(JsValue, u32, Array) -> bool) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `find()` method returns the value of the first element in the array that satisfies\n  the provided testing function. Otherwise `undefined` is returned.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":14784,"byte_end":14794,"line_start":377,"line_end":377,"column_start":12,"column_end":22},"name":"find_index","qualname":"<Array>::find_index","value":"pub fn find_index(&Self, &mut dyn FnMut(JsValue, u32, Array) -> bool) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The `findIndex()` method returns the index of the first element in the array that\n satisfies the provided testing function. Otherwise -1 is returned.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":15186,"byte_end":15190,"line_start":384,"line_end":384,"column_start":12,"column_end":16},"name":"flat","qualname":"<Array>::flat","value":"pub fn flat(&Self, i32) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `flat()` method creates a new array with all sub-array elements concatenated into it\n recursively up to the specified depth.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":15550,"byte_end":15558,"line_start":391,"line_end":391,"column_start":12,"column_end":20},"name":"flat_map","qualname":"<Array>::flat_map","value":"pub fn flat_map(&Self, &mut dyn FnMut(JsValue, u32, Array) -> Vec<JsValue>)\n-> Array","parent":null,"children":[],"decl_id":null,"docs":" The `flatMap()` method first maps each element using a mapping function, then flattens\n the result into a new array.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":15949,"byte_end":15957,"line_start":400,"line_end":400,"column_start":12,"column_end":20},"name":"for_each","qualname":"<Array>::for_each","value":"pub fn for_each(&Self, &mut dyn FnMut(JsValue, u32, Array) -> ())","parent":null,"children":[],"decl_id":null,"docs":" The `forEach()` method executes a provided function once for each array element.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":16329,"byte_end":16337,"line_start":407,"line_end":407,"column_start":12,"column_end":20},"name":"includes","qualname":"<Array>::includes","value":"pub fn includes(&Self, &JsValue, i32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `includes()` method determines whether an array includes a certain\n element, returning true or false as appropriate.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":16729,"byte_end":16737,"line_start":414,"line_end":414,"column_start":12,"column_end":20},"name":"index_of","qualname":"<Array>::index_of","value":"pub fn index_of(&Self, &JsValue, i32) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The `indexOf()` method returns the first index at which a given element\n can be found in the array, or -1 if it is not present.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":17089,"byte_end":17097,"line_start":420,"line_end":420,"column_start":12,"column_end":20},"name":"is_array","qualname":"<Array>::is_array","value":"pub fn is_array(&JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `Array.isArray()` method determines whether the passed value is an Array.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":17425,"byte_end":17429,"line_start":427,"line_end":427,"column_start":12,"column_end":16},"name":"join","qualname":"<Array>::join","value":"pub fn join(&Self, &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `join()` method joins all elements of an array (or an array-like object)\n into a string and returns this string.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":17883,"byte_end":17896,"line_start":435,"line_end":435,"column_start":12,"column_end":25},"name":"last_index_of","qualname":"<Array>::last_index_of","value":"pub fn last_index_of(&Self, &JsValue, i32) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The `lastIndexOf()` method returns the last index at which a given element\n can be found in the array, or -1 if it is not present. The array is\n searched backwards, starting at fromIndex.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":18411,"byte_end":18417,"line_start":444,"line_end":444,"column_start":12,"column_end":18},"name":"length","qualname":"<Array>::length","value":"pub fn length(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The length property of an object which is an instance of type Array\n sets or returns the number of elements in that array. The value is an\n unsigned, 32-bit integer that is always numerically greater than the\n highest index in the array.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":19043,"byte_end":19046,"line_start":454,"line_end":454,"column_start":12,"column_end":15},"name":"map","qualname":"<Array>::map","value":"pub fn map(&Self, &mut dyn FnMut(JsValue, u32, Array) -> JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" `map()` calls a provided callback function once for each element in an array,\n in order, and constructs a new array from the results. callback is invoked\n only for indexes of the array which have assigned values, including undefined.\n It is not called for missing elements of the array (that is, indexes that have\n never been set, which have been deleted or which have never been assigned a value).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":19995,"byte_end":19998,"line_start":472,"line_end":472,"column_start":12,"column_end":15},"name":"of1","qualname":"<Array>::of1","value":"pub fn of1(&JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Array.of()` method creates a new Array instance with a variable\n number of arguments, regardless of number or type of the arguments.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":20213,"byte_end":20216,"line_start":476,"line_end":476,"column_start":12,"column_end":15},"name":"of2","qualname":"<Array>::of2","value":"pub fn of2(&JsValue, &JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of)","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":20444,"byte_end":20447,"line_start":480,"line_end":480,"column_start":12,"column_end":15},"name":"of3","qualname":"<Array>::of3","value":"pub fn of3(&JsValue, &JsValue, &JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of)","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":20688,"byte_end":20691,"line_start":484,"line_end":484,"column_start":12,"column_end":15},"name":"of4","qualname":"<Array>::of4","value":"pub fn of4(&JsValue, &JsValue, &JsValue, &JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of)","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":20945,"byte_end":20948,"line_start":488,"line_end":488,"column_start":12,"column_end":15},"name":"of5","qualname":"<Array>::of5","value":"pub fn of5(&JsValue, &JsValue, &JsValue, &JsValue, &JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of)","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":21337,"byte_end":21340,"line_start":495,"line_end":495,"column_start":12,"column_end":15},"name":"pop","qualname":"<Array>::pop","value":"pub fn pop(&Self) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `pop()` method removes the last element from an array and returns that\n element. This method changes the length of the array.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":21662,"byte_end":21666,"line_start":502,"line_end":502,"column_start":12,"column_end":16},"name":"push","qualname":"<Array>::push","value":"pub fn push(&Self, &JsValue) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `push()` method adds one or more elements to the end of an array and\n returns the new length of the array.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":22040,"byte_end":22046,"line_start":509,"line_end":509,"column_start":12,"column_end":18},"name":"reduce","qualname":"<Array>::reduce","value":"pub fn reduce(&Self, &mut dyn FnMut(JsValue, JsValue, u32, Array) -> JsValue,\n              &JsValue) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `reduce()` method applies a function against an accumulator and each element in\n the array (from left to right) to reduce it to a single value.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":22562,"byte_end":22574,"line_start":520,"line_end":520,"column_start":12,"column_end":24},"name":"reduce_right","qualname":"<Array>::reduce_right","value":"pub fn reduce_right(&Self,\n                    &mut dyn FnMut(JsValue, JsValue, u32, Array) -> JsValue,\n                    &JsValue) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `reduceRight()` method applies a function against an accumulator and each value\n of the array (from right-to-left) to reduce it to a single value.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":23052,"byte_end":23059,"line_start":531,"line_end":531,"column_start":12,"column_end":19},"name":"reverse","qualname":"<Array>::reverse","value":"pub fn reverse(&Self) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `reverse()` method reverses an array in place. The first array\n element becomes the last, and the last array element becomes the first.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":23410,"byte_end":23415,"line_start":538,"line_end":538,"column_start":12,"column_end":17},"name":"shift","qualname":"<Array>::shift","value":"pub fn shift(&Self) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `shift()` method removes the first element from an array and returns\n that removed element. This method changes the length of the array.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":23817,"byte_end":23822,"line_start":546,"line_end":546,"column_start":12,"column_end":17},"name":"slice","qualname":"<Array>::slice","value":"pub fn slice(&Self, u32, u32) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `slice()` method returns a shallow copy of a portion of an array into\n a new array object selected from begin to end (end not included).\n The original array will not be modified.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":24249,"byte_end":24253,"line_start":553,"line_end":553,"column_start":12,"column_end":16},"name":"some","qualname":"<Array>::some","value":"pub fn some(&Self, &mut dyn FnMut(JsValue) -> bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `some()` method tests whether at least one element in the array passes the test implemented\n by the provided function.\n Note: This method returns false for any condition put on an empty array.\n [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":24822,"byte_end":24826,"line_start":564,"line_end":564,"column_start":12,"column_end":16},"name":"sort","qualname":"<Array>::sort","value":"pub fn sort(&Self) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `sort()` method sorts the elements of an array in place and returns\n the array. The sort is not necessarily stable. The default sort\n order is according to string Unicode code points.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":25151,"byte_end":25157,"line_start":571,"line_end":571,"column_start":12,"column_end":18},"name":"splice","qualname":"<Array>::splice","value":"pub fn splice(&Self, u32, u32, &JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `splice()` method changes the contents of an array by removing existing elements and/or\n adding new elements.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":25705,"byte_end":25721,"line_start":579,"line_end":579,"column_start":12,"column_end":28},"name":"to_locale_string","qualname":"<Array>::to_locale_string","value":"pub fn to_locale_string(&Self, &JsValue, &JsValue) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toLocaleString()` method returns a string representing the elements of the array.\n The elements are converted to Strings using their toLocaleString methods and these\n Strings are separated by a locale-specific String (such as a comma “,”).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":26088,"byte_end":26097,"line_start":586,"line_end":586,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Array>::to_string","value":"pub fn to_string(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toString()` method returns a string representing the specified array\n and its elements.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":26432,"byte_end":26439,"line_start":593,"line_end":593,"column_start":12,"column_end":19},"name":"unshift","qualname":"<Array>::unshift","value":"pub fn unshift(&Self, &JsValue) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `unshift()` method adds one or more elements to the beginning of an\n array and returns the new length of the array.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":10589,"byte_end":10604,"line_start":295,"line_end":295,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":546},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":26556,"byte_end":26565,"line_start":598,"line_end":598,"column_start":12,"column_end":21},"name":"ArrayIter","qualname":"::ArrayIter","value":"ArrayIter {  }","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549}],"decl_id":null,"docs":" Iterator returned by `Array::iter`\n","sig":null,"attributes":[{"value":"/ Iterator returned by `Array::iter`","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":26482,"byte_end":26520,"line_start":596,"line_end":596,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":27344,"byte_end":27348,"line_start":630,"line_end":630,"column_start":12,"column_end":16},"name":"iter","qualname":"<Array>::iter","value":"pub fn iter(&Self) -> ArrayIter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the values of the JS array.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the values of the JS array.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":27276,"byte_end":27332,"line_start":629,"line_end":629,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":27531,"byte_end":27537,"line_start":638,"line_end":638,"column_start":12,"column_end":18},"name":"to_vec","qualname":"<Array>::to_vec","value":"pub fn to_vec(&Self) -> Vec<JsValue>","parent":null,"children":[],"decl_id":null,"docs":" Converts the JS array into a new Vec.\n","sig":null,"attributes":[{"value":"/ Converts the JS array into a new Vec.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":27478,"byte_end":27519,"line_start":637,"line_end":637,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":656},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":28574,"byte_end":28585,"line_start":691,"line_end":691,"column_start":14,"column_end":25},"name":"ArrayBuffer","qualname":"::ArrayBuffer","value":"ArrayBuffer {  }","parent":null,"children":[{"krate":0,"index":657}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":28418,"byte_end":28433,"line_start":687,"line_end":687,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":28418,"byte_end":28433,"line_start":687,"line_end":687,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":29152,"byte_end":29155,"line_start":702,"line_end":702,"column_start":12,"column_end":15},"name":"new","qualname":"<ArrayBuffer>::new","value":"pub fn new(u32) -> ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The `ArrayBuffer` object is used to represent a generic,\n fixed-length raw binary data buffer. You cannot directly\n manipulate the contents of an `ArrayBuffer`; instead, you\n create one of the typed array objects or a `DataView` object\n which represents the buffer in a specific format, and use that\n to read and write the contents of the buffer.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":28418,"byte_end":28433,"line_start":687,"line_end":687,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":28418,"byte_end":28433,"line_start":687,"line_end":687,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":29769,"byte_end":29780,"line_start":712,"line_end":712,"column_start":12,"column_end":23},"name":"byte_length","qualname":"<ArrayBuffer>::byte_length","value":"pub fn byte_length(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The byteLength property of an object which is an instance of type ArrayBuffer\n it's an accessor property whose set accessor function is undefined,\n meaning that you can only read this property.\n The value is established when the array is constructed and cannot be changed.\n This property returns 0 if this ArrayBuffer has been detached.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":28418,"byte_end":28433,"line_start":687,"line_end":687,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":28418,"byte_end":28433,"line_start":687,"line_end":687,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":30181,"byte_end":30188,"line_start":719,"line_end":719,"column_start":12,"column_end":19},"name":"is_view","qualname":"<ArrayBuffer>::is_view","value":"pub fn is_view(&JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `isView()` method returns true if arg is one of the `ArrayBuffer`\n views, such as typed array objects or a DataView; false otherwise.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":28418,"byte_end":28433,"line_start":687,"line_end":687,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":28418,"byte_end":28433,"line_start":687,"line_end":687,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":30565,"byte_end":30570,"line_start":727,"line_end":727,"column_start":12,"column_end":17},"name":"slice","qualname":"<ArrayBuffer>::slice","value":"pub fn slice(&Self, u32) -> ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The `slice()` method returns a new `ArrayBuffer` whose contents\n are a copy of this `ArrayBuffer`'s bytes from begin, inclusive,\n up to end, exclusive.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":28418,"byte_end":28433,"line_start":687,"line_end":687,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":28418,"byte_end":28433,"line_start":687,"line_end":687,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":30864,"byte_end":30878,"line_start":733,"line_end":733,"column_start":12,"column_end":26},"name":"slice_with_end","qualname":"<ArrayBuffer>::slice_with_end","value":"pub fn slice_with_end(&Self, u32, u32) -> ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" Like `slice()` but with the `end` argument.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":28418,"byte_end":28433,"line_start":687,"line_end":687,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":28418,"byte_end":28433,"line_start":687,"line_end":687,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":766},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":31108,"byte_end":31125,"line_start":741,"line_end":741,"column_start":14,"column_end":31},"name":"SharedArrayBuffer","qualname":"::SharedArrayBuffer","value":"SharedArrayBuffer {  }","parent":null,"children":[{"krate":0,"index":767}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":30961,"byte_end":30976,"line_start":737,"line_end":737,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":30961,"byte_end":30976,"line_start":737,"line_end":737,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":31625,"byte_end":31628,"line_start":751,"line_end":751,"column_start":12,"column_end":15},"name":"new","qualname":"<SharedArrayBuffer>::new","value":"pub fn new(u32) -> SharedArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The `SharedArrayBuffer` object is used to represent a generic,\n fixed-length raw binary data buffer, similar to the `ArrayBuffer`\n object, but in a way that they can be used to create views\n on shared memory. Unlike an `ArrayBuffer`, a `SharedArrayBuffer`\n cannot become detached.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":30961,"byte_end":30976,"line_start":737,"line_end":737,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":30961,"byte_end":30976,"line_start":737,"line_end":737,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":32083,"byte_end":32094,"line_start":759,"line_end":759,"column_start":12,"column_end":23},"name":"byte_length","qualname":"<SharedArrayBuffer>::byte_length","value":"pub fn byte_length(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The byteLength accessor property represents the length of\n an `SharedArrayBuffer` in bytes. This is established when\n the `SharedArrayBuffer` is constructed and cannot be changed.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":30961,"byte_end":30976,"line_start":737,"line_end":737,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":30961,"byte_end":30976,"line_start":737,"line_end":737,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":32497,"byte_end":32502,"line_start":767,"line_end":767,"column_start":12,"column_end":17},"name":"slice","qualname":"<SharedArrayBuffer>::slice","value":"pub fn slice(&Self, u32) -> SharedArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The `slice()` method returns a new `SharedArrayBuffer` whose contents\n are a copy of this `SharedArrayBuffer`'s bytes from begin, inclusive,\n up to end, exclusive.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":30961,"byte_end":30976,"line_start":737,"line_end":737,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":30961,"byte_end":30976,"line_start":737,"line_end":737,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":32814,"byte_end":32828,"line_start":773,"line_end":773,"column_start":12,"column_end":26},"name":"slice_with_end","qualname":"<SharedArrayBuffer>::slice_with_end","value":"pub fn slice_with_end(&Self, u32, u32) -> SharedArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" Like `slice()` but with the `end` argument.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":30961,"byte_end":30976,"line_start":737,"line_end":737,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":30961,"byte_end":30976,"line_start":737,"line_end":737,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":773},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":33241,"byte_end":33245,"line_start":784,"line_end":784,"column_start":12,"column_end":16},"name":"keys","qualname":"<Array>::keys","value":"pub fn keys(&Self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The `keys()` method returns a new Array Iterator object that contains the\n keys for each index in the array.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":32920,"byte_end":32935,"line_start":777,"line_end":777,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":32920,"byte_end":32935,"line_start":777,"line_end":777,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":776},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":33583,"byte_end":33590,"line_start":791,"line_end":791,"column_start":12,"column_end":19},"name":"entries","qualname":"<Array>::entries","value":"pub fn entries(&Self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The `entries()` method returns a new Array Iterator object that contains\n the key/value pairs for each index in the array.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":32920,"byte_end":32935,"line_start":777,"line_end":777,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":32920,"byte_end":32935,"line_start":777,"line_end":777,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":33917,"byte_end":33923,"line_start":798,"line_end":798,"column_start":12,"column_end":18},"name":"values","qualname":"<Array>::values","value":"pub fn values(&Self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The `values()` method returns a new Array Iterator object that\n contains the values for each index in the array.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":32920,"byte_end":32935,"line_start":777,"line_end":777,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":32920,"byte_end":32935,"line_start":777,"line_end":777,"column_start":1,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":110},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":34560,"byte_end":34567,"line_start":811,"line_end":811,"column_start":9,"column_end":16},"name":"Atomics","qualname":"::Atomics","value":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":781},{"krate":0,"index":783},{"krate":0,"index":785},{"krate":0,"index":787},{"krate":0,"index":789},{"krate":0,"index":791},{"krate":0,"index":793},{"krate":0,"index":795},{"krate":0,"index":797},{"krate":0,"index":799},{"krate":0,"index":801},{"krate":0,"index":803},{"krate":0,"index":805},{"krate":0,"index":807}],"decl_id":null,"docs":" The `Atomics` object provides atomic operations as static methods.\n They are used with `SharedArrayBuffer` objects.","sig":null,"attributes":[{"value":"/ The `Atomics` object provides atomic operations as static methods.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":33954,"byte_end":34024,"line_start":801,"line_end":801,"column_start":1,"column_end":71}},{"value":"/ They are used with `SharedArrayBuffer` objects.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":34025,"byte_end":34076,"line_start":802,"line_end":802,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":34077,"byte_end":34080,"line_start":803,"line_end":803,"column_start":1,"column_end":4}},{"value":"/ The Atomic operations are installed on an `Atomics` module. Unlike","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":34081,"byte_end":34151,"line_start":804,"line_end":804,"column_start":1,"column_end":71}},{"value":"/ the other global objects, `Atomics` is not a constructor. You cannot","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":34152,"byte_end":34224,"line_start":805,"line_end":805,"column_start":1,"column_end":73}},{"value":"/ use it with a new operator or invoke the `Atomics` object as a","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":34225,"byte_end":34291,"line_start":806,"line_end":806,"column_start":1,"column_end":67}},{"value":"/ function. All properties and methods of `Atomics` are static","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":34292,"byte_end":34356,"line_start":807,"line_end":807,"column_start":1,"column_end":65}},{"value":"/ (as is the case with the Math object, for example).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":34357,"byte_end":34412,"line_start":808,"line_end":808,"column_start":1,"column_end":56}},{"value":"/ [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":34413,"byte_end":34526,"line_start":809,"line_end":809,"column_start":1,"column_end":114}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":34527,"byte_end":34551,"line_start":810,"line_end":810,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":781},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":35115,"byte_end":35118,"line_start":823,"line_end":823,"column_start":16,"column_end":19},"name":"add","qualname":"::Atomics::add","value":"pub fn add(&JsValue, u32, i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.add()` method adds a given value at a given\n position in the array and returns the old value at that position.\n This atomic operation guarantees that no other write happens\n until the modified value is written back.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":34593,"byte_end":34608,"line_start":814,"line_end":814,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":34593,"byte_end":34608,"line_start":814,"line_end":814,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":783},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":35717,"byte_end":35720,"line_start":833,"line_end":833,"column_start":16,"column_end":19},"name":"and","qualname":"::Atomics::and","value":"pub fn and(&JsValue, u32, i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.and()` method computes a bitwise AND with a given\n value at a given position in the array, and returns the old value\n at that position.\n This atomic operation guarantees that no other write happens\n until the modified value is written back.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":34593,"byte_end":34608,"line_start":814,"line_end":814,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":34593,"byte_end":34608,"line_start":814,"line_end":814,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":785},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":36473,"byte_end":36489,"line_start":844,"line_end":844,"column_start":16,"column_end":32},"name":"compare_exchange","qualname":"::Atomics::compare_exchange","value":"pub fn compare_exchange(&JsValue, u32, i32, i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.compareExchange()` method exchanges a given\n replacement value at a given position in the array, if a given expected\n value equals the old value. It returns the old value at that position\n whether it was equal to the expected value or not.\n This atomic operation guarantees that no other write happens\n until the modified value is written back.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":34593,"byte_end":34608,"line_start":814,"line_end":814,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":34593,"byte_end":34608,"line_start":814,"line_end":814,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":787},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":37156,"byte_end":37164,"line_start":858,"line_end":858,"column_start":16,"column_end":24},"name":"exchange","qualname":"::Atomics::exchange","value":"pub fn exchange(&JsValue, u32, i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.exchange()` method stores a given value at a given\n position in the array and returns the old value at that position.\n This atomic operation guarantees that no other write happens\n until the modified value is written back.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":34593,"byte_end":34608,"line_start":814,"line_end":814,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":34593,"byte_end":34608,"line_start":814,"line_end":814,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":789},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":37730,"byte_end":37742,"line_start":867,"line_end":867,"column_start":16,"column_end":28},"name":"is_lock_free","qualname":"::Atomics::is_lock_free","value":"pub fn is_lock_free(u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.isLockFree()` method is used to determine\n whether to use locks or atomic operations. It returns true,\n if the given size is one of the `BYTES_PER_ELEMENT` property\n of integer `TypedArray` types.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":34593,"byte_end":34608,"line_start":814,"line_end":814,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":34593,"byte_end":34608,"line_start":814,"line_end":814,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":791},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":38082,"byte_end":38086,"line_start":874,"line_end":874,"column_start":16,"column_end":20},"name":"load","qualname":"::Atomics::load","value":"pub fn load(&JsValue, u32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.load()` method returns a value at a given\n position in the array.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":34593,"byte_end":34608,"line_start":814,"line_end":814,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":34593,"byte_end":34608,"line_start":814,"line_end":814,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":793},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":38631,"byte_end":38637,"line_start":883,"line_end":883,"column_start":16,"column_end":22},"name":"notify","qualname":"::Atomics::notify","value":"pub fn notify(&Int32Array, u32) -> Result<u32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.notify()` method notifies up some agents that\n are sleeping in the wait queue.\n Note: This operation works with a shared `Int32Array` only.\n If `count` is not provided, notifies all the agents in the queue.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":34593,"byte_end":34608,"line_start":814,"line_end":814,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":34593,"byte_end":34608,"line_start":814,"line_end":814,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":795},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":38851,"byte_end":38868,"line_start":887,"line_end":887,"column_start":16,"column_end":33},"name":"notify_with_count","qualname":"::Atomics::notify_with_count","value":"pub fn notify_with_count(&Int32Array, u32, u32) -> Result<u32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" Notifies up to `count` agents in the wait queue.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":34593,"byte_end":34608,"line_start":814,"line_end":814,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":34593,"byte_end":34608,"line_start":814,"line_end":814,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":797},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":39502,"byte_end":39504,"line_start":900,"line_end":900,"column_start":16,"column_end":18},"name":"or","qualname":"::Atomics::or","value":"pub fn or(&JsValue, u32, i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.or()` method computes a bitwise OR with a given value\n at a given position in the array, and returns the old value at that position.\n This atomic operation guarantees that no other write happens\n until the modified value is written back.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":34593,"byte_end":34608,"line_start":814,"line_end":814,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":34593,"byte_end":34608,"line_start":814,"line_end":814,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":799},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":39928,"byte_end":39933,"line_start":907,"line_end":907,"column_start":16,"column_end":21},"name":"store","qualname":"::Atomics::store","value":"pub fn store(&JsValue, u32, i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.store()` method stores a given value at the given\n position in the array and returns that value.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":34593,"byte_end":34608,"line_start":814,"line_end":814,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":34593,"byte_end":34608,"line_start":814,"line_end":814,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":801},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":40502,"byte_end":40505,"line_start":916,"line_end":916,"column_start":16,"column_end":19},"name":"sub","qualname":"::Atomics::sub","value":"pub fn sub(&JsValue, u32, i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.sub()` method substracts a given value at a\n given position in the array and returns the old value at that position.\n This atomic operation guarantees that no other write happens\n until the modified value is written back.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":34593,"byte_end":34608,"line_start":814,"line_end":814,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":34593,"byte_end":34608,"line_start":814,"line_end":814,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":803},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":41197,"byte_end":41201,"line_start":927,"line_end":927,"column_start":16,"column_end":20},"name":"wait","qualname":"::Atomics::wait","value":"pub fn wait(&Int32Array, u32, i32) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.wait()` method verifies that a given\n position in an `Int32Array` still contains a given value\n and if so sleeps, awaiting a wakeup or a timeout.\n It returns a string which is either \"ok\", \"not-equal\", or \"timed-out\".\n Note: This operation only works with a shared `Int32Array`\n and may not be allowed on the main thread.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":34593,"byte_end":34608,"line_start":814,"line_end":814,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":34593,"byte_end":34608,"line_start":814,"line_end":814,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":805},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":41552,"byte_end":41569,"line_start":933,"line_end":933,"column_start":16,"column_end":33},"name":"wait_with_timeout","qualname":"::Atomics::wait_with_timeout","value":"pub fn wait_with_timeout(&Int32Array, u32, i32, f64)\n-> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" Like `wait()`, but with timeout","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":34593,"byte_end":34608,"line_start":814,"line_end":814,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":34593,"byte_end":34608,"line_start":814,"line_end":814,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":807},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":42249,"byte_end":42252,"line_start":948,"line_end":948,"column_start":16,"column_end":19},"name":"xor","qualname":"::Atomics::xor","value":"pub fn xor(&JsValue, u32, i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.xor()` method computes a bitwise XOR\n with a given value at a given position in the array,\n and returns the old value at that position.\n This atomic operation guarantees that no other write happens\n until the modified value is written back.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":34593,"byte_end":34608,"line_start":814,"line_end":814,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":34593,"byte_end":34608,"line_start":814,"line_end":814,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":918},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":42520,"byte_end":42526,"line_start":957,"line_end":957,"column_start":14,"column_end":20},"name":"BigInt","qualname":"::BigInt","value":"BigInt {  }","parent":null,"children":[{"krate":0,"index":919}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":42344,"byte_end":42359,"line_start":953,"line_end":953,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":42344,"byte_end":42359,"line_start":953,"line_end":953,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":43020,"byte_end":43028,"line_start":969,"line_end":969,"column_start":12,"column_end":20},"name":"as_int_n","qualname":"<BigInt>::as_int_n","value":"pub fn as_int_n(f64, &BigInt) -> BigInt","parent":null,"children":[],"decl_id":null,"docs":" Clamps a BigInt value to a signed integer value, and returns that value.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":42344,"byte_end":42359,"line_start":953,"line_end":953,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":42344,"byte_end":42359,"line_start":953,"line_end":953,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":43363,"byte_end":43372,"line_start":975,"line_end":975,"column_start":12,"column_end":21},"name":"as_uint_n","qualname":"<BigInt>::as_uint_n","value":"pub fn as_uint_n(f64, &BigInt) -> BigInt","parent":null,"children":[],"decl_id":null,"docs":" Clamps a BigInt value to an unsigned integer value, and returns that value.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":42344,"byte_end":42359,"line_start":953,"line_end":953,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":42344,"byte_end":42359,"line_start":953,"line_end":953,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":43870,"byte_end":43886,"line_start":981,"line_end":981,"column_start":12,"column_end":28},"name":"to_locale_string","qualname":"<BigInt>::to_locale_string","value":"pub fn to_locale_string(&Self, &JsValue, &JsValue) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" Returns a string with a language-sensitive representation of this BigInt value. Overrides the [`Object.prototype.toLocaleString()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt/toLocaleString) method.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":42344,"byte_end":42359,"line_start":953,"line_end":953,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":42344,"byte_end":42359,"line_start":953,"line_end":953,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":44393,"byte_end":44402,"line_start":987,"line_end":987,"column_start":12,"column_end":21},"name":"to_string","qualname":"<BigInt>::to_string","value":"pub fn to_string(&Self, u8) -> Result<JsString, RangeError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a string representing this BigInt value in the specified radix (base). Overrides the [`Object.prototype.toString()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString) method.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":42344,"byte_end":42359,"line_start":953,"line_end":953,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":42344,"byte_end":42359,"line_start":953,"line_end":953,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":44952,"byte_end":44960,"line_start":996,"line_end":996,"column_start":12,"column_end":20},"name":"value_of","qualname":"<BigInt>::value_of","value":"pub fn value_of(&Self, u8) -> BigInt","parent":null,"children":[],"decl_id":null,"docs":" Returns this BigInt value. Overrides the [`Object.prototype.valueOf()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf) method.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":42344,"byte_end":42359,"line_start":953,"line_end":953,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":42344,"byte_end":42359,"line_start":953,"line_end":953,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":45208,"byte_end":45211,"line_start":1004,"line_end":1004,"column_start":12,"column_end":15},"name":"new","qualname":"<BigInt>::new","value":"pub fn new(&JsValue) -> Result<BigInt, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new BigInt value.","sig":null,"attributes":[{"value":"/ Creates a new BigInt value.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":45019,"byte_end":45050,"line_start":1000,"line_end":1000,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":45055,"byte_end":45058,"line_start":1001,"line_end":1001,"column_start":5,"column_end":8}},{"value":"/ [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt/BigInt)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":45063,"byte_end":45182,"line_start":1002,"line_end":1002,"column_start":5,"column_end":124}},{"value":"inline","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":45187,"byte_end":45196,"line_start":1003,"line_end":1003,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":45531,"byte_end":45542,"line_start":1011,"line_end":1011,"column_start":12,"column_end":23},"name":"checked_div","qualname":"<BigInt>::checked_div","value":"pub fn checked_div(&Self, &Self) -> Result<Self, RangeError>","parent":null,"children":[],"decl_id":null,"docs":" Applies the binary `/` JS operator on two `BigInt`s, catching and returning any `RangeError` thrown.","sig":null,"attributes":[{"value":"/ Applies the binary `/` JS operator on two `BigInt`s, catching and returning any `RangeError` thrown.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":45293,"byte_end":45397,"line_start":1008,"line_end":1008,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":45402,"byte_end":45405,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Division)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":45410,"byte_end":45519,"line_start":1010,"line_end":1010,"column_start":5,"column_end":114}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":46056,"byte_end":46059,"line_start":1025,"line_end":1025,"column_start":12,"column_end":15},"name":"pow","qualname":"<BigInt>::pow","value":"pub fn pow(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Applies the binary `**` JS operator on the two `BigInt`s.","sig":null,"attributes":[{"value":"/ Applies the binary `**` JS operator on the two `BigInt`s.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":45841,"byte_end":45902,"line_start":1021,"line_end":1021,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":45907,"byte_end":45910,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Exponentiation)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":45915,"byte_end":46030,"line_start":1023,"line_end":1023,"column_start":5,"column_end":120}},{"value":"inline","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":46035,"byte_end":46044,"line_start":1024,"line_end":1024,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1235},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":49823,"byte_end":49830,"line_start":1170,"line_end":1170,"column_start":14,"column_end":21},"name":"Boolean","qualname":"::Boolean","value":"Boolean {  }","parent":null,"children":[{"krate":0,"index":1236}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":49638,"byte_end":49653,"line_start":1166,"line_end":1166,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":49638,"byte_end":49653,"line_start":1166,"line_end":1166,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1230},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":50182,"byte_end":50185,"line_start":1178,"line_end":1178,"column_start":12,"column_end":15},"name":"new","qualname":"<Boolean>::new","value":"pub fn new(&JsValue) -> Boolean","parent":null,"children":[],"decl_id":null,"docs":" The `Boolean()` constructor creates an object wrapper for a boolean value.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":49638,"byte_end":49653,"line_start":1166,"line_end":1166,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":49638,"byte_end":49653,"line_start":1166,"line_end":1166,"column_start":1,"column_end":16}},{"value":"deprecated(note = \"recommended to use `Boolean::from` instead\")","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":50079,"byte_end":50145,"line_start":1176,"line_end":1176,"column_start":5,"column_end":71}},{"value":"allow(deprecated)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":50150,"byte_end":50170,"line_start":1177,"line_end":1177,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1233},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":50490,"byte_end":50498,"line_start":1184,"line_end":1184,"column_start":12,"column_end":20},"name":"value_of","qualname":"<Boolean>::value_of","value":"pub fn value_of(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `valueOf()` method returns the primitive value of a `Boolean` object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":49638,"byte_end":49653,"line_start":1166,"line_end":1166,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":49638,"byte_end":49653,"line_start":1166,"line_end":1166,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1438},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51688,"byte_end":51696,"line_start":1244,"line_end":1244,"column_start":14,"column_end":22},"name":"DataView","qualname":"::DataView","value":"DataView {  }","parent":null,"children":[{"krate":0,"index":1439}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1343},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":52054,"byte_end":52057,"line_start":1252,"line_end":1252,"column_start":12,"column_end":15},"name":"new","qualname":"<DataView>::new","value":"pub fn new(&ArrayBuffer, usize, usize) -> DataView","parent":null,"children":[],"decl_id":null,"docs":" The `DataView` view provides a low-level interface for reading and\n writing multiple number types in an `ArrayBuffer` irrespective of the\n platform's endianness.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1346},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":52421,"byte_end":52427,"line_start":1258,"line_end":1258,"column_start":12,"column_end":18},"name":"buffer","qualname":"<DataView>::buffer","value":"pub fn buffer(&Self) -> ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The ArrayBuffer referenced by this view. Fixed at construction time and thus read only.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1349},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":52814,"byte_end":52825,"line_start":1265,"line_end":1265,"column_start":12,"column_end":23},"name":"byte_length","qualname":"<DataView>::byte_length","value":"pub fn byte_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The length (in bytes) of this view from the start of its ArrayBuffer.\n Fixed at construction time and thus read only.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1352},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":53206,"byte_end":53217,"line_start":1272,"line_end":1272,"column_start":12,"column_end":23},"name":"byte_offset","qualname":"<DataView>::byte_offset","value":"pub fn byte_offset(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The offset (in bytes) of this view from the start of its ArrayBuffer.\n Fixed at construction time and thus read only.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1355},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":53574,"byte_end":53582,"line_start":1279,"line_end":1279,"column_start":12,"column_end":20},"name":"get_int8","qualname":"<DataView>::get_int8","value":"pub fn get_int8(&Self, usize) -> i8","parent":null,"children":[],"decl_id":null,"docs":" The `getInt8()` method gets a signed 8-bit integer (byte) at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1358},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":53961,"byte_end":53970,"line_start":1286,"line_end":1286,"column_start":12,"column_end":21},"name":"get_uint8","qualname":"<DataView>::get_uint8","value":"pub fn get_uint8(&Self, usize) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The `getUint8()` method gets a unsigned 8-bit integer (byte) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1361},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":54349,"byte_end":54358,"line_start":1293,"line_end":1293,"column_start":12,"column_end":21},"name":"get_int16","qualname":"<DataView>::get_int16","value":"pub fn get_int16(&Self, usize) -> i16","parent":null,"children":[],"decl_id":null,"docs":" The `getInt16()` method gets a signed 16-bit integer (short) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1364},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":54738,"byte_end":54754,"line_start":1300,"line_end":1300,"column_start":12,"column_end":28},"name":"get_int16_endian","qualname":"<DataView>::get_int16_endian","value":"pub fn get_int16_endian(&Self, usize, bool) -> i16","parent":null,"children":[],"decl_id":null,"docs":" The `getInt16()` method gets a signed 16-bit integer (short) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1367},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":55166,"byte_end":55176,"line_start":1307,"line_end":1307,"column_start":12,"column_end":22},"name":"get_uint16","qualname":"<DataView>::get_uint16","value":"pub fn get_uint16(&Self, usize) -> u16","parent":null,"children":[],"decl_id":null,"docs":" The `getUint16()` method gets an unsigned 16-bit integer (unsigned short) at the specified\n byte offset from the start of the view.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1370},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":55567,"byte_end":55584,"line_start":1314,"line_end":1314,"column_start":12,"column_end":29},"name":"get_uint16_endian","qualname":"<DataView>::get_uint16_endian","value":"pub fn get_uint16_endian(&Self, usize, bool) -> u16","parent":null,"children":[],"decl_id":null,"docs":" The `getUint16()` method gets an unsigned 16-bit integer (unsigned short) at the specified\n byte offset from the start of the view.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1373},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":55984,"byte_end":55993,"line_start":1321,"line_end":1321,"column_start":12,"column_end":21},"name":"get_int32","qualname":"<DataView>::get_int32","value":"pub fn get_int32(&Self, usize) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The `getInt32()` method gets a signed 32-bit integer (long) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1376},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":56372,"byte_end":56388,"line_start":1328,"line_end":1328,"column_start":12,"column_end":28},"name":"get_int32_endian","qualname":"<DataView>::get_int32_endian","value":"pub fn get_int32_endian(&Self, usize, bool) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The `getInt32()` method gets a signed 32-bit integer (long) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1379},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":56799,"byte_end":56809,"line_start":1335,"line_end":1335,"column_start":12,"column_end":22},"name":"get_uint32","qualname":"<DataView>::get_uint32","value":"pub fn get_uint32(&Self, usize) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getUint32()` method gets an unsigned 32-bit integer (unsigned long) at the specified\n byte offset from the start of the view.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1382},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":57199,"byte_end":57216,"line_start":1342,"line_end":1342,"column_start":12,"column_end":29},"name":"get_uint32_endian","qualname":"<DataView>::get_uint32_endian","value":"pub fn get_uint32_endian(&Self, usize, bool) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getUint32()` method gets an unsigned 32-bit integer (unsigned long) at the specified\n byte offset from the start of the view.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1385},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":57621,"byte_end":57632,"line_start":1349,"line_end":1349,"column_start":12,"column_end":23},"name":"get_float32","qualname":"<DataView>::get_float32","value":"pub fn get_float32(&Self, usize) -> f32","parent":null,"children":[],"decl_id":null,"docs":" The `getFloat32()` method gets a signed 32-bit float (float) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1388},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":58016,"byte_end":58034,"line_start":1356,"line_end":1356,"column_start":12,"column_end":30},"name":"get_float32_endian","qualname":"<DataView>::get_float32_endian","value":"pub fn get_float32_endian(&Self, usize, bool) -> f32","parent":null,"children":[],"decl_id":null,"docs":" The `getFloat32()` method gets a signed 32-bit float (float) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1391},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":58440,"byte_end":58451,"line_start":1363,"line_end":1363,"column_start":12,"column_end":23},"name":"get_float64","qualname":"<DataView>::get_float64","value":"pub fn get_float64(&Self, usize) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `getFloat64()` method gets a signed 64-bit float (double) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1394},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":58836,"byte_end":58854,"line_start":1370,"line_end":1370,"column_start":12,"column_end":30},"name":"get_float64_endian","qualname":"<DataView>::get_float64_endian","value":"pub fn get_float64_endian(&Self, usize, bool) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `getFloat64()` method gets a signed 64-bit float (double) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1397},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":59258,"byte_end":59266,"line_start":1377,"line_end":1377,"column_start":12,"column_end":20},"name":"set_int8","qualname":"<DataView>::set_int8","value":"pub fn set_int8(&Self, usize, i8)","parent":null,"children":[],"decl_id":null,"docs":" The `setInt8()` method stores a signed 8-bit integer (byte) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1400},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":59659,"byte_end":59668,"line_start":1384,"line_end":1384,"column_start":12,"column_end":21},"name":"set_uint8","qualname":"<DataView>::set_uint8","value":"pub fn set_uint8(&Self, usize, u8)","parent":null,"children":[],"decl_id":null,"docs":" The `setUint8()` method stores an unsigned 8-bit integer (byte) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1403},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":60060,"byte_end":60069,"line_start":1391,"line_end":1391,"column_start":12,"column_end":21},"name":"set_int16","qualname":"<DataView>::set_int16","value":"pub fn set_int16(&Self, usize, i16)","parent":null,"children":[],"decl_id":null,"docs":" The `setInt16()` method stores a signed 16-bit integer (short) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1406},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":60462,"byte_end":60478,"line_start":1398,"line_end":1398,"column_start":12,"column_end":28},"name":"set_int16_endian","qualname":"<DataView>::set_int16_endian","value":"pub fn set_int16_endian(&Self, usize, i16, bool)","parent":null,"children":[],"decl_id":null,"docs":" The `setInt16()` method stores a signed 16-bit integer (short) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1409},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":60907,"byte_end":60917,"line_start":1405,"line_end":1405,"column_start":12,"column_end":22},"name":"set_uint16","qualname":"<DataView>::set_uint16","value":"pub fn set_uint16(&Self, usize, u16)","parent":null,"children":[],"decl_id":null,"docs":" The `setUint16()` method stores an unsigned 16-bit integer (unsigned short) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1412},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":61325,"byte_end":61342,"line_start":1412,"line_end":1412,"column_start":12,"column_end":29},"name":"set_uint16_endian","qualname":"<DataView>::set_uint16_endian","value":"pub fn set_uint16_endian(&Self, usize, u16, bool)","parent":null,"children":[],"decl_id":null,"docs":" The `setUint16()` method stores an unsigned 16-bit integer (unsigned short) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1415},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":61755,"byte_end":61764,"line_start":1419,"line_end":1419,"column_start":12,"column_end":21},"name":"set_int32","qualname":"<DataView>::set_int32","value":"pub fn set_int32(&Self, usize, i32)","parent":null,"children":[],"decl_id":null,"docs":" The `setInt32()` method stores a signed 32-bit integer (long) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1418},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":62156,"byte_end":62172,"line_start":1426,"line_end":1426,"column_start":12,"column_end":28},"name":"set_int32_endian","qualname":"<DataView>::set_int32_endian","value":"pub fn set_int32_endian(&Self, usize, i32, bool)","parent":null,"children":[],"decl_id":null,"docs":" The `setInt32()` method stores a signed 32-bit integer (long) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1421},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":62600,"byte_end":62610,"line_start":1433,"line_end":1433,"column_start":12,"column_end":22},"name":"set_uint32","qualname":"<DataView>::set_uint32","value":"pub fn set_uint32(&Self, usize, u32)","parent":null,"children":[],"decl_id":null,"docs":" The `setUint32()` method stores an unsigned 32-bit integer (unsigned long) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1424},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":63017,"byte_end":63034,"line_start":1440,"line_end":1440,"column_start":12,"column_end":29},"name":"set_uint32_endian","qualname":"<DataView>::set_uint32_endian","value":"pub fn set_uint32_endian(&Self, usize, u32, bool)","parent":null,"children":[],"decl_id":null,"docs":" The `setUint32()` method stores an unsigned 32-bit integer (unsigned long) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1427},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":63452,"byte_end":63463,"line_start":1447,"line_end":1447,"column_start":12,"column_end":23},"name":"set_float32","qualname":"<DataView>::set_float32","value":"pub fn set_float32(&Self, usize, f32)","parent":null,"children":[],"decl_id":null,"docs":" The `setFloat32()` method stores a signed 32-bit float (float) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1430},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":63860,"byte_end":63878,"line_start":1454,"line_end":1454,"column_start":12,"column_end":30},"name":"set_float32_endian","qualname":"<DataView>::set_float32_endian","value":"pub fn set_float32_endian(&Self, usize, f32, bool)","parent":null,"children":[],"decl_id":null,"docs":" The `setFloat32()` method stores a signed 32-bit float (float) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1433},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":64297,"byte_end":64308,"line_start":1461,"line_end":1461,"column_start":12,"column_end":23},"name":"set_float64","qualname":"<DataView>::set_float64","value":"pub fn set_float64(&Self, usize, f64)","parent":null,"children":[],"decl_id":null,"docs":" The `setFloat64()` method stores a signed 64-bit float (double) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1436},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":64706,"byte_end":64724,"line_start":1468,"line_end":1468,"column_start":12,"column_end":30},"name":"set_float64_endian","qualname":"<DataView>::set_float64_endian","value":"pub fn set_float64_endian(&Self, usize, f64, bool)","parent":null,"children":[],"decl_id":null,"docs":" The `setFloat64()` method stores a signed 64-bit float (double) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51535,"byte_end":51550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1554},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":64958,"byte_end":64963,"line_start":1476,"line_end":1476,"column_start":14,"column_end":19},"name":"Error","qualname":"::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":1555}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":64808,"byte_end":64823,"line_start":1472,"line_end":1472,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":64808,"byte_end":64823,"line_start":1472,"line_end":1472,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1537},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":65403,"byte_end":65406,"line_start":1485,"line_end":1485,"column_start":12,"column_end":15},"name":"new","qualname":"<Error>::new","value":"pub fn new(&str) -> Error","parent":null,"children":[],"decl_id":null,"docs":" The Error constructor creates an error object.\n Instances of Error objects are thrown when runtime errors occur.\n The Error object can also be used as a base object for user-defined exceptions.\n See below for standard built-in error types.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":64808,"byte_end":64823,"line_start":1472,"line_end":1472,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":64808,"byte_end":64823,"line_start":1472,"line_end":1472,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1540},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":65699,"byte_end":65706,"line_start":1491,"line_end":1491,"column_start":12,"column_end":19},"name":"message","qualname":"<Error>::message","value":"pub fn message(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The message property is a human-readable description of the error.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":64808,"byte_end":64823,"line_start":1472,"line_end":1472,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":64808,"byte_end":64823,"line_start":1472,"line_end":1472,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1543},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":65793,"byte_end":65804,"line_start":1493,"line_end":1493,"column_start":12,"column_end":23},"name":"set_message","qualname":"<Error>::set_message","value":"pub fn set_message(&Self, &str)","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":64808,"byte_end":64823,"line_start":1472,"line_end":1472,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":64808,"byte_end":64823,"line_start":1472,"line_end":1472,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1546},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":66121,"byte_end":66125,"line_start":1499,"line_end":1499,"column_start":12,"column_end":16},"name":"name","qualname":"<Error>::name","value":"pub fn name(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The name property represents a name for the type of error. The initial value is \"Error\".","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":64808,"byte_end":64823,"line_start":1472,"line_end":1472,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":64808,"byte_end":64823,"line_start":1472,"line_end":1472,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1549},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":66212,"byte_end":66220,"line_start":1501,"line_end":1501,"column_start":12,"column_end":20},"name":"set_name","qualname":"<Error>::set_name","value":"pub fn set_name(&Self, &str)","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":64808,"byte_end":64823,"line_start":1472,"line_end":1472,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":64808,"byte_end":64823,"line_start":1472,"line_end":1472,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1552},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":66530,"byte_end":66539,"line_start":1507,"line_end":1507,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Error>::to_string","value":"pub fn to_string(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toString()` method returns a string representing the specified Error object","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":64808,"byte_end":64823,"line_start":1472,"line_end":1472,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":64808,"byte_end":64823,"line_start":1472,"line_end":1472,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1673},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":66782,"byte_end":66791,"line_start":1517,"line_end":1517,"column_start":14,"column_end":23},"name":"EvalError","qualname":"::EvalError","value":"EvalError {  }","parent":null,"children":[{"krate":0,"index":1674}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":66611,"byte_end":66626,"line_start":1513,"line_end":1513,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":66611,"byte_end":66626,"line_start":1513,"line_end":1513,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1671},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":67176,"byte_end":67179,"line_start":1525,"line_end":1525,"column_start":12,"column_end":15},"name":"new","qualname":"<EvalError>::new","value":"pub fn new(&str) -> EvalError","parent":null,"children":[],"decl_id":null,"docs":" The EvalError object indicates an error regarding the global eval() function. This\n exception is not thrown by JavaScript anymore, however the EvalError object remains for\n compatibility.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":66611,"byte_end":66626,"line_start":1513,"line_end":1513,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":66611,"byte_end":66626,"line_start":1513,"line_end":1513,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1817},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":67412,"byte_end":67420,"line_start":1533,"line_end":1533,"column_start":14,"column_end":22},"name":"Function","qualname":"::Function","value":"Function {  }","parent":null,"children":[{"krate":0,"index":1818}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":67224,"byte_end":67239,"line_start":1529,"line_end":1529,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":67224,"byte_end":67239,"line_start":1529,"line_end":1529,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1773},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":68053,"byte_end":68066,"line_start":1544,"line_end":1544,"column_start":12,"column_end":25},"name":"new_with_args","qualname":"<Function>::new_with_args","value":"pub fn new_with_args(&str, &str) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The `Function` constructor creates a new `Function` object. Calling the\n constructor directly can create functions dynamically, but suffers from\n security and similar (but far less significant) performance issues\n similar to `eval`. However, unlike `eval`, the `Function` constructor\n allows executing code in the global scope, prompting better programming\n habits and allowing for more efficient code minification.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":67224,"byte_end":67239,"line_start":1529,"line_end":1529,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":67224,"byte_end":67239,"line_start":1529,"line_end":1529,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1776},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":68735,"byte_end":68746,"line_start":1555,"line_end":1555,"column_start":12,"column_end":23},"name":"new_no_args","qualname":"<Function>::new_no_args","value":"pub fn new_no_args(&str) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The `Function` constructor creates a new `Function` object. Calling the\n constructor directly can create functions dynamically, but suffers from\n security and similar (but far less significant) performance issues\n similar to `eval`. However, unlike `eval`, the `Function` constructor\n allows executing code in the global scope, prompting better programming\n habits and allowing for more efficient code minification.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":67224,"byte_end":67239,"line_start":1529,"line_end":1529,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":67224,"byte_end":67239,"line_start":1529,"line_end":1529,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1779},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":69093,"byte_end":69098,"line_start":1562,"line_end":1562,"column_start":12,"column_end":17},"name":"apply","qualname":"<Function>::apply","value":"pub fn apply(&Self, &JsValue, &Array) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `apply()` method calls a function with a given this value, and arguments provided as an array\n (or an array-like object).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":67224,"byte_end":67239,"line_start":1529,"line_end":1529,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":67224,"byte_end":67239,"line_start":1529,"line_end":1529,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1782},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":69487,"byte_end":69492,"line_start":1569,"line_end":1569,"column_start":12,"column_end":17},"name":"call0","qualname":"<Function>::call0","value":"pub fn call0(&Self, &JsValue) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `call()` method calls a function with a given this value and\n arguments provided individually.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":67224,"byte_end":67239,"line_start":1529,"line_end":1529,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":67224,"byte_end":67239,"line_start":1529,"line_end":1529,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1785},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":69867,"byte_end":69872,"line_start":1576,"line_end":1576,"column_start":12,"column_end":17},"name":"call1","qualname":"<Function>::call1","value":"pub fn call1(&Self, &JsValue, &JsValue) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `call()` method calls a function with a given this value and\n arguments provided individually.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":67224,"byte_end":67239,"line_start":1529,"line_end":1529,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":67224,"byte_end":67239,"line_start":1529,"line_end":1529,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1788},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":70263,"byte_end":70268,"line_start":1583,"line_end":1583,"column_start":12,"column_end":17},"name":"call2","qualname":"<Function>::call2","value":"pub fn call2(&Self, &JsValue, &JsValue, &JsValue) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `call()` method calls a function with a given this value and\n arguments provided individually.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":67224,"byte_end":67239,"line_start":1529,"line_end":1529,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":67224,"byte_end":67239,"line_start":1529,"line_end":1529,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1791},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":70714,"byte_end":70719,"line_start":1595,"line_end":1595,"column_start":12,"column_end":17},"name":"call3","qualname":"<Function>::call3","value":"pub fn call3(&Self, &JsValue, &JsValue, &JsValue, &JsValue)\n-> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `call()` method calls a function with a given this value and\n arguments provided individually.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":67224,"byte_end":67239,"line_start":1529,"line_end":1529,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":67224,"byte_end":67239,"line_start":1529,"line_end":1529,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1794},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":71285,"byte_end":71289,"line_start":1608,"line_end":1608,"column_start":12,"column_end":16},"name":"bind","qualname":"<Function>::bind","value":"pub fn bind(&Self, &JsValue) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The `bind()` method creates a new function that, when called, has its this keyword set to the provided value,\n with a given sequence of arguments preceding any provided when the new function is called.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":67224,"byte_end":67239,"line_start":1529,"line_end":1529,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":67224,"byte_end":67239,"line_start":1529,"line_end":1529,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1797},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":71744,"byte_end":71749,"line_start":1615,"line_end":1615,"column_start":12,"column_end":17},"name":"bind0","qualname":"<Function>::bind0","value":"pub fn bind0(&Self, &JsValue) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The `bind()` method creates a new function that, when called, has its this keyword set to the provided value,\n with a given sequence of arguments preceding any provided when the new function is called.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":67224,"byte_end":67239,"line_start":1529,"line_end":1529,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":67224,"byte_end":67239,"line_start":1529,"line_end":1529,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1800},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":72204,"byte_end":72209,"line_start":1622,"line_end":1622,"column_start":12,"column_end":17},"name":"bind1","qualname":"<Function>::bind1","value":"pub fn bind1(&Self, &JsValue, &JsValue) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The `bind()` method creates a new function that, when called, has its this keyword set to the provided value,\n with a given sequence of arguments preceding any provided when the new function is called.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":67224,"byte_end":67239,"line_start":1529,"line_end":1529,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":67224,"byte_end":67239,"line_start":1529,"line_end":1529,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1803},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":72680,"byte_end":72685,"line_start":1629,"line_end":1629,"column_start":12,"column_end":17},"name":"bind2","qualname":"<Function>::bind2","value":"pub fn bind2(&Self, &JsValue, &JsValue, &JsValue) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The `bind()` method creates a new function that, when called, has its this keyword set to the provided value,\n with a given sequence of arguments preceding any provided when the new function is called.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":67224,"byte_end":67239,"line_start":1529,"line_end":1529,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":67224,"byte_end":67239,"line_start":1529,"line_end":1529,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1806},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":73172,"byte_end":73177,"line_start":1636,"line_end":1636,"column_start":12,"column_end":17},"name":"bind3","qualname":"<Function>::bind3","value":"pub fn bind3(&Self, &JsValue, &JsValue, &JsValue, &JsValue) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The `bind()` method creates a new function that, when called, has its this keyword set to the provided value,\n with a given sequence of arguments preceding any provided when the new function is called.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":67224,"byte_end":67239,"line_start":1529,"line_end":1529,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":67224,"byte_end":67239,"line_start":1529,"line_end":1529,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1809},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":73604,"byte_end":73610,"line_start":1648,"line_end":1648,"column_start":12,"column_end":18},"name":"length","qualname":"<Function>::length","value":"pub fn length(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The length property indicates the number of arguments expected by the function.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":67224,"byte_end":67239,"line_start":1529,"line_end":1529,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":67224,"byte_end":67239,"line_start":1529,"line_end":1529,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1812},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":74009,"byte_end":74013,"line_start":1656,"line_end":1656,"column_start":12,"column_end":16},"name":"name","qualname":"<Function>::name","value":"pub fn name(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" A Function object's read-only name property indicates the function's\n name as specified when it was created or \"anonymous\" for functions\n created anonymously.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":67224,"byte_end":67239,"line_start":1529,"line_end":1529,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":67224,"byte_end":67239,"line_start":1529,"line_end":1529,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1815},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":74335,"byte_end":74344,"line_start":1662,"line_end":1662,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Function>::to_string","value":"pub fn to_string(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toString()` method returns a string representing the source code of the function.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":67224,"byte_end":67239,"line_start":1529,"line_end":1529,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":67224,"byte_end":67239,"line_start":1529,"line_end":1529,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":74689,"byte_end":74697,"line_start":1672,"line_end":1672,"column_start":12,"column_end":20},"name":"try_from","qualname":"<Function>::try_from","value":"pub fn try_from(&JsValue) -> Option<&Function>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Function` value of this JS value if it's an instance of a\n function.","sig":null,"attributes":[{"value":"/ Returns the `Function` value of this JS value if it's an instance of a","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":74398,"byte_end":74472,"line_start":1666,"line_end":1666,"column_start":5,"column_end":79}},{"value":"/ function.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":74477,"byte_end":74490,"line_start":1667,"line_end":1667,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":74495,"byte_end":74498,"line_start":1668,"line_end":1668,"column_start":5,"column_end":8}},{"value":"/ If this JS value is not an instance of a function then this returns","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":74503,"byte_end":74574,"line_start":1669,"line_end":1669,"column_start":5,"column_end":76}},{"value":"/ `None`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":74579,"byte_end":74590,"line_start":1670,"line_end":1670,"column_start":5,"column_end":16}},{"value":"deprecated(note =\n             \"recommended to use dyn_ref instead which is now equivalent\")","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":74595,"byte_end":74677,"line_start":1671,"line_end":1671,"column_start":5,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":1924},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":75043,"byte_end":75052,"line_start":1688,"line_end":1688,"column_start":14,"column_end":23},"name":"Generator","qualname":"::Generator","value":"Generator {  }","parent":null,"children":[{"krate":0,"index":1925}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":74874,"byte_end":74889,"line_start":1684,"line_end":1684,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":74874,"byte_end":74889,"line_start":1684,"line_end":1684,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1916},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":75422,"byte_end":75426,"line_start":1695,"line_end":1695,"column_start":12,"column_end":16},"name":"next","qualname":"<Generator>::next","value":"pub fn next(&Self, &JsValue) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `next()` method returns an object with two properties done and value.\n You can also provide a parameter to the next method to send a value to the generator.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":74874,"byte_end":74889,"line_start":1684,"line_end":1684,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":74874,"byte_end":74889,"line_start":1684,"line_end":1684,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1919},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":75778,"byte_end":75785,"line_start":1701,"line_end":1701,"column_start":12,"column_end":19},"name":"return_","qualname":"<Generator>::return_","value":"pub fn return_(&Self, &JsValue) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `return()` method returns the given value and finishes the generator.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":74874,"byte_end":74889,"line_start":1684,"line_end":1684,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":74874,"byte_end":74889,"line_start":1684,"line_end":1684,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1922},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":76187,"byte_end":76192,"line_start":1708,"line_end":1708,"column_start":12,"column_end":17},"name":"throw","qualname":"<Generator>::throw","value":"pub fn throw(&Self, &Error) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `throw()` method resumes the execution of a generator by throwing an error into it\n and returns an object with two properties done and value.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":74874,"byte_end":74889,"line_start":1684,"line_end":1684,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":74874,"byte_end":74889,"line_start":1684,"line_end":1684,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2046},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":76423,"byte_end":76426,"line_start":1716,"line_end":1716,"column_start":14,"column_end":17},"name":"Map","qualname":"::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":2047}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":76265,"byte_end":76280,"line_start":1712,"line_end":1712,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":76265,"byte_end":76280,"line_start":1712,"line_end":1712,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2023},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":76665,"byte_end":76670,"line_start":1722,"line_end":1722,"column_start":12,"column_end":17},"name":"clear","qualname":"<Map>::clear","value":"pub fn clear(&Self)","parent":null,"children":[],"decl_id":null,"docs":" The `clear()` method removes all elements from a Map object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":76265,"byte_end":76280,"line_start":1712,"line_end":1712,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":76265,"byte_end":76280,"line_start":1712,"line_end":1712,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2026},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":76932,"byte_end":76938,"line_start":1728,"line_end":1728,"column_start":12,"column_end":18},"name":"delete","qualname":"<Map>::delete","value":"pub fn delete(&Self, &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `delete()` method removes the specified element from a Map object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":76265,"byte_end":76280,"line_start":1712,"line_end":1712,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":76265,"byte_end":76280,"line_start":1712,"line_end":1712,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2029},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":77564,"byte_end":77572,"line_start":1742,"line_end":1742,"column_start":12,"column_end":20},"name":"for_each","qualname":"<Map>::for_each","value":"pub fn for_each(&Self, &mut dyn FnMut(JsValue, JsValue) -> ())","parent":null,"children":[],"decl_id":null,"docs":" The `forEach()` method executes a provided function once per each\n key/value pair in the Map object, in insertion order.\n Note that in Javascript land the `Key` and `Value` are reversed compared to normal expectations:\n # Examples\n ```\n let js_map = Map::new();\n js_map.for_each(&mut |value, key| {\n     // Do something here...\n })\n ```\n [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach)","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":76265,"byte_end":76280,"line_start":1712,"line_end":1712,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":76265,"byte_end":76280,"line_start":1712,"line_end":1712,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2032},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":77870,"byte_end":77873,"line_start":1748,"line_end":1748,"column_start":12,"column_end":15},"name":"get","qualname":"<Map>::get","value":"pub fn get(&Self, &JsValue) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `get()` method returns a specified element from a Map object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":76265,"byte_end":76280,"line_start":1712,"line_end":1712,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":76265,"byte_end":76280,"line_start":1712,"line_end":1712,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2035},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":78200,"byte_end":78203,"line_start":1755,"line_end":1755,"column_start":12,"column_end":15},"name":"has","qualname":"<Map>::has","value":"pub fn has(&Self, &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `has()` method returns a boolean indicating whether an element with\n the specified key exists or not.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":76265,"byte_end":76280,"line_start":1712,"line_end":1712,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":76265,"byte_end":76280,"line_start":1712,"line_end":1712,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2038},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":78546,"byte_end":78549,"line_start":1762,"line_end":1762,"column_start":12,"column_end":15},"name":"new","qualname":"<Map>::new","value":"pub fn new() -> Map","parent":null,"children":[],"decl_id":null,"docs":" The Map object holds key-value pairs. Any value (both objects and\n primitive values) maybe used as either a key or a value.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":76265,"byte_end":76280,"line_start":1712,"line_end":1712,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":76265,"byte_end":76280,"line_start":1712,"line_end":1712,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2041},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":78836,"byte_end":78839,"line_start":1769,"line_end":1769,"column_start":12,"column_end":15},"name":"set","qualname":"<Map>::set","value":"pub fn set(&Self, &JsValue, &JsValue) -> Map","parent":null,"children":[],"decl_id":null,"docs":" The `set()` method adds or updates an element with a specified key\n and value to a Map object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":76265,"byte_end":76280,"line_start":1712,"line_end":1712,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":76265,"byte_end":76280,"line_start":1712,"line_end":1712,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2044},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":79266,"byte_end":79270,"line_start":1777,"line_end":1777,"column_start":12,"column_end":16},"name":"size","qualname":"<Map>::size","value":"pub fn size(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The value of size is an integer representing how many entries\n the Map object has. A set accessor function for size is undefined;\n you can not change this property.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":76265,"byte_end":76280,"line_start":1712,"line_end":1712,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":76265,"byte_end":76280,"line_start":1712,"line_end":1712,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2060},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":79756,"byte_end":79763,"line_start":1795,"line_end":1795,"column_start":12,"column_end":19},"name":"entries","qualname":"<Map>::entries","value":"pub fn entries(&Self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The `entries()` method returns a new Iterator object that contains\n the [key, value] pairs for each element in the Map object in\n insertion order.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":79389,"byte_end":79404,"line_start":1787,"line_end":1787,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":79389,"byte_end":79404,"line_start":1787,"line_end":1787,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2063},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":80100,"byte_end":80104,"line_start":1802,"line_end":1802,"column_start":12,"column_end":16},"name":"keys","qualname":"<Map>::keys","value":"pub fn keys(&Self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The `keys()` method returns a new Iterator object that contains the\n keys for each element in the Map object in insertion order.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":79389,"byte_end":79404,"line_start":1787,"line_end":1787,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":79389,"byte_end":79404,"line_start":1787,"line_end":1787,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2066},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":80447,"byte_end":80453,"line_start":1809,"line_end":1809,"column_start":12,"column_end":18},"name":"values","qualname":"<Map>::values","value":"pub fn values(&Self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The `values()` method returns a new Iterator object that contains the\n values for each element in the Map object in insertion order.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":79389,"byte_end":79404,"line_start":1787,"line_end":1787,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":79389,"byte_end":79404,"line_start":1787,"line_end":1787,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2147},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":80921,"byte_end":80929,"line_start":1821,"line_end":1821,"column_start":14,"column_end":22},"name":"Iterator","qualname":"::Iterator","value":"Iterator {  }","parent":null,"children":[{"krate":0,"index":2148}],"decl_id":null,"docs":" Any object that conforms to the JS iterator protocol. For example,\n something returned by `myArray[Symbol.iterator]()`.","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":80494,"byte_end":80509,"line_start":1813,"line_end":1813,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":80494,"byte_end":80509,"line_start":1813,"line_end":1813,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2145},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":81269,"byte_end":81273,"line_start":1828,"line_end":1828,"column_start":12,"column_end":16},"name":"next","qualname":"<Iterator>::next","value":"pub fn next(&Self) -> Result<IteratorNext, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `next()` method always has to return an object with appropriate\n properties including done and value. If a non-object value gets returned\n (such as false or undefined), a TypeError (\"iterator.next() returned a\n non-object value\") will be thrown.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":80494,"byte_end":80509,"line_start":1813,"line_end":1813,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":80494,"byte_end":80509,"line_start":1813,"line_end":1813,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2311},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":82216,"byte_end":82229,"line_start":1860,"line_end":1860,"column_start":14,"column_end":27},"name":"AsyncIterator","qualname":"::AsyncIterator","value":"AsyncIterator {  }","parent":null,"children":[{"krate":0,"index":2312}],"decl_id":null,"docs":" Any object that conforms to the JS async iterator protocol. For example,\n something returned by `myObject[Symbol.asyncIterator]()`.","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":81762,"byte_end":81777,"line_start":1852,"line_end":1852,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":81762,"byte_end":81777,"line_start":1852,"line_end":1852,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2309},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":82597,"byte_end":82601,"line_start":1867,"line_end":1867,"column_start":12,"column_end":16},"name":"next","qualname":"<AsyncIterator>::next","value":"pub fn next(&Self) -> Result<Promise, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `next()` method always has to return a Promise which resolves to an object\n with appropriate properties including done and value. If a non-object value\n gets returned (such as false or undefined), a TypeError (\"iterator.next()\n returned a non-object value\") will be thrown.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":81762,"byte_end":81777,"line_start":1852,"line_end":1852,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":81762,"byte_end":81777,"line_start":1852,"line_end":1852,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":163},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":82817,"byte_end":82821,"line_start":1873,"line_end":1873,"column_start":12,"column_end":16},"name":"Iter","qualname":"::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166}],"decl_id":null,"docs":" An iterator over the JS `Symbol.iterator` iteration protocol.","sig":null,"attributes":[{"value":"/ An iterator over the JS `Symbol.iterator` iteration protocol.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":82656,"byte_end":82721,"line_start":1870,"line_end":1870,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":82722,"byte_end":82725,"line_start":1871,"line_end":1871,"column_start":1,"column_end":4}},{"value":"/ Use the `IntoIterator for &js_sys::Iterator` implementation to create this.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":82726,"byte_end":82805,"line_start":1872,"line_end":1872,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":167},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":83035,"byte_end":83043,"line_start":1881,"line_end":1881,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169}],"decl_id":null,"docs":" An iterator over the JS `Symbol.iterator` iteration protocol.","sig":null,"attributes":[{"value":"/ An iterator over the JS `Symbol.iterator` iteration protocol.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":82875,"byte_end":82940,"line_start":1878,"line_end":1878,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":82941,"byte_end":82944,"line_start":1879,"line_end":1879,"column_start":1,"column_end":4}},{"value":"/ Use the `IntoIterator for js_sys::Iterator` implementation to create this.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":82945,"byte_end":83023,"line_start":1880,"line_end":1880,"column_start":1,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":191},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":84608,"byte_end":84616,"line_start":1957,"line_end":1957,"column_start":8,"column_end":16},"name":"try_iter","qualname":"::try_iter","value":"pub fn try_iter(&JsValue) -> Result<Option<IntoIter>, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator over `val` using the JS iteration protocol and\n `Symbol.iterator`.\n","sig":null,"attributes":[{"value":"/ Create an iterator over `val` using the JS iteration protocol and","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":84508,"byte_end":84577,"line_start":1955,"line_end":1955,"column_start":1,"column_end":70}},{"value":"/ `Symbol.iterator`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":84578,"byte_end":84600,"line_start":1956,"line_end":1956,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":2408},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":85417,"byte_end":85429,"line_start":1982,"line_end":1982,"column_start":14,"column_end":26},"name":"IteratorNext","qualname":"::IteratorNext","value":"IteratorNext {  }","parent":null,"children":[{"krate":0,"index":2409}],"decl_id":null,"docs":" The result of calling `next()` on a JS iterator.","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":85073,"byte_end":85088,"line_start":1975,"line_end":1975,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":85073,"byte_end":85088,"line_start":1975,"line_end":1975,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2403},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":85857,"byte_end":85861,"line_start":1992,"line_end":1992,"column_start":12,"column_end":16},"name":"done","qualname":"<IteratorNext>::done","value":"pub fn done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Has the value `true` if the iterator is past the end of the iterated\n sequence. In this case value optionally specifies the return value of\n the iterator.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":85073,"byte_end":85088,"line_start":1975,"line_end":1975,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":85073,"byte_end":85088,"line_start":1975,"line_end":1975,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2406},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86049,"byte_end":86054,"line_start":1997,"line_end":1997,"column_start":12,"column_end":17},"name":"value","qualname":"<IteratorNext>::value","value":"pub fn value(&Self) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" Any JavaScript value returned by the iterator. Can be omitted when done\n is true.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":85073,"byte_end":85088,"line_start":1975,"line_end":1975,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":85073,"byte_end":85088,"line_start":1975,"line_end":1975,"column_start":1,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":192},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86124,"byte_end":86128,"line_start":2001,"line_end":2001,"column_start":9,"column_end":13},"name":"Math","qualname":"::Math","value":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":2421},{"krate":0,"index":2423},{"krate":0,"index":2425},{"krate":0,"index":2427},{"krate":0,"index":2429},{"krate":0,"index":2431},{"krate":0,"index":2433},{"krate":0,"index":2435},{"krate":0,"index":2437},{"krate":0,"index":2439},{"krate":0,"index":2441},{"krate":0,"index":2443},{"krate":0,"index":2445},{"krate":0,"index":2447},{"krate":0,"index":2449},{"krate":0,"index":2451},{"krate":0,"index":2453},{"krate":0,"index":2455},{"krate":0,"index":2457},{"krate":0,"index":2459},{"krate":0,"index":2461},{"krate":0,"index":2463},{"krate":0,"index":2465},{"krate":0,"index":2467},{"krate":0,"index":2469},{"krate":0,"index":2471},{"krate":0,"index":2473},{"krate":0,"index":2475},{"krate":0,"index":2477},{"krate":0,"index":2479},{"krate":0,"index":2481},{"krate":0,"index":2483},{"krate":0,"index":2485},{"krate":0,"index":2487},{"krate":0,"index":2489}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86091,"byte_end":86115,"line_start":2000,"line_end":2000,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2421},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86510,"byte_end":86513,"line_start":2012,"line_end":2012,"column_start":16,"column_end":19},"name":"abs","qualname":"::Math::abs","value":"pub fn abs(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.abs()` function returns the absolute value of a number, that is\n Math.abs(x) = |x|","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2423},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86928,"byte_end":86932,"line_start":2020,"line_end":2020,"column_start":16,"column_end":20},"name":"acos","qualname":"::Math::acos","value":"pub fn acos(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.acos()` function returns the arccosine (in radians) of a\n number, that is ∀x∊[-1;1]\n Math.acos(x) = arccos(x) = the unique y∊[0;π] such that cos(y)=x","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2425},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":87346,"byte_end":87351,"line_start":2028,"line_end":2028,"column_start":16,"column_end":21},"name":"acosh","qualname":"::Math::acosh","value":"pub fn acosh(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.acosh()` function returns the hyperbolic arc-cosine of a\n number, that is ∀x ≥ 1\n Math.acosh(x) = arcosh(x) = the unique y ≥ 0 such that cosh(y) = x","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2427},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":87772,"byte_end":87776,"line_start":2036,"line_end":2036,"column_start":16,"column_end":20},"name":"asin","qualname":"::Math::asin","value":"pub fn asin(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.asin()` function returns the arcsine (in radians) of a\n number, that is ∀x ∊ [-1;1]\n Math.asin(x) = arcsin(x) = the unique y∊[-π2;π2] such that sin(y) = x","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2429},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":88158,"byte_end":88163,"line_start":2043,"line_end":2043,"column_start":16,"column_end":21},"name":"asinh","qualname":"::Math::asinh","value":"pub fn asinh(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.asinh()` function returns the hyperbolic arcsine of a\n number, that is Math.asinh(x) = arsinh(x) = the unique y such that sinh(y) = x","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2431},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":88436,"byte_end":88440,"line_start":2049,"line_end":2049,"column_start":16,"column_end":20},"name":"atan","qualname":"::Math::atan","value":"pub fn atan(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.atan()` function returns the arctangent (in radians) of a\n number, that is Math.atan(x) = arctan(x) = the unique y ∊ [-π2;π2]such that\n tan(y) = x","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2433},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":88764,"byte_end":88769,"line_start":2056,"line_end":2056,"column_start":16,"column_end":21},"name":"atan2","qualname":"::Math::atan2","value":"pub fn atan2(f64, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.atan2()` function returns the arctangent of the quotient of\n its arguments.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2435},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":89192,"byte_end":89197,"line_start":2064,"line_end":2064,"column_start":16,"column_end":21},"name":"atanh","qualname":"::Math::atanh","value":"pub fn atanh(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.atanh()` function returns the hyperbolic arctangent of a number,\n that is ∀x ∊ (-1,1), Math.atanh(x) = arctanh(x) = the unique y such that\n tanh(y) = x","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2437},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":89558,"byte_end":89562,"line_start":2071,"line_end":2071,"column_start":16,"column_end":20},"name":"cbrt","qualname":"::Math::cbrt","value":"pub fn cbrt(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.cbrt() `function returns the cube root of a number, that is\n Math.cbrt(x) = ∛x = the unique y such that y^3 = x","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2439},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":89897,"byte_end":89901,"line_start":2078,"line_end":2078,"column_start":16,"column_end":20},"name":"ceil","qualname":"::Math::ceil","value":"pub fn ceil(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.ceil()` function returns the smallest integer greater than\n or equal to a given number.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2441},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":90257,"byte_end":90262,"line_start":2085,"line_end":2085,"column_start":16,"column_end":21},"name":"clz32","qualname":"::Math::clz32","value":"pub fn clz32(i32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `Math.clz32()` function returns the number of leading zero bits in\n the 32-bit binary representation of a number.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2443},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":90662,"byte_end":90665,"line_start":2092,"line_end":2092,"column_start":16,"column_end":19},"name":"cos","qualname":"::Math::cos","value":"pub fn cos(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.cos()` static function returns the cosine of the specified angle,\n which must be specified in radians. This value is length(adjacent)/length(hypotenuse).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2445},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":91017,"byte_end":91021,"line_start":2099,"line_end":2099,"column_start":16,"column_end":20},"name":"cosh","qualname":"::Math::cosh","value":"pub fn cosh(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.cosh()` function returns the hyperbolic cosine of a number,\n that can be expressed using the constant e.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2447},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":91417,"byte_end":91420,"line_start":2106,"line_end":2106,"column_start":16,"column_end":19},"name":"exp","qualname":"::Math::exp","value":"pub fn exp(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.exp()` function returns e^x, where x is the argument, and e is Euler's number\n (also known as Napier's constant), the base of the natural logarithms.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2449},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":91771,"byte_end":91776,"line_start":2113,"line_end":2113,"column_start":16,"column_end":21},"name":"expm1","qualname":"::Math::expm1","value":"pub fn expm1(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.expm1()` function returns e^x - 1, where x is the argument, and e the base of the\n natural logarithms.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2451},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":92109,"byte_end":92114,"line_start":2120,"line_end":2120,"column_start":16,"column_end":21},"name":"floor","qualname":"::Math::floor","value":"pub fn floor(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.floor()` function returns the largest integer less than or\n equal to a given number.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2453},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":92461,"byte_end":92467,"line_start":2127,"line_end":2127,"column_start":16,"column_end":22},"name":"fround","qualname":"::Math::fround","value":"pub fn fround(f64) -> f32","parent":null,"children":[],"decl_id":null,"docs":" The `Math.fround()` function returns the nearest 32-bit single precision float representation\n of a Number.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2455},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":92786,"byte_end":92791,"line_start":2133,"line_end":2133,"column_start":16,"column_end":21},"name":"hypot","qualname":"::Math::hypot","value":"pub fn hypot(f64, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.hypot()` function returns the square root of the sum of squares of its arguments.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2457},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":93142,"byte_end":93146,"line_start":2140,"line_end":2140,"column_start":16,"column_end":20},"name":"imul","qualname":"::Math::imul","value":"pub fn imul(i32, i32) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The `Math.imul()` function returns the result of the C-like 32-bit multiplication of the\n two parameters.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2459},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":93545,"byte_end":93548,"line_start":2147,"line_end":2147,"column_start":16,"column_end":19},"name":"log","qualname":"::Math::log","value":"pub fn log(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.log()` function returns the natural logarithm (base e) of a number.\n The JavaScript `Math.log()` function is equivalent to ln(x) in mathematics.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2461},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":93846,"byte_end":93851,"line_start":2153,"line_end":2153,"column_start":16,"column_end":21},"name":"log10","qualname":"::Math::log10","value":"pub fn log10(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.log10()` function returns the base 10 logarithm of a number.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2463},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":94150,"byte_end":94155,"line_start":2158,"line_end":2158,"column_start":16,"column_end":21},"name":"log1p","qualname":"::Math::log1p","value":"pub fn log1p(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.log1p()` function returns the natural logarithm (base e) of 1 + a number.\n [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/log1p)","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2465},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":94450,"byte_end":94454,"line_start":2164,"line_end":2164,"column_start":16,"column_end":20},"name":"log2","qualname":"::Math::log2","value":"pub fn log2(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.log2()` function returns the base 2 logarithm of a number.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2467},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":94741,"byte_end":94744,"line_start":2170,"line_end":2170,"column_start":16,"column_end":19},"name":"max","qualname":"::Math::max","value":"pub fn max(f64, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.max()` function returns the largest of two numbers.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2469},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":95059,"byte_end":95062,"line_start":2176,"line_end":2176,"column_start":16,"column_end":19},"name":"min","qualname":"::Math::min","value":"pub fn min(f64, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The static function `Math.min()` returns the lowest-valued number passed into it.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2471},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":95385,"byte_end":95388,"line_start":2182,"line_end":2182,"column_start":16,"column_end":19},"name":"pow","qualname":"::Math::pow","value":"pub fn pow(f64, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.pow()` function returns the base to the exponent power, that is, base^exponent.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2473},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":96042,"byte_end":96048,"line_start":2192,"line_end":2192,"column_start":16,"column_end":22},"name":"random","qualname":"::Math::random","value":"pub fn random() -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.random()` function returns a floating-point, pseudo-random number\n in the range 0–1 (inclusive of 0, but not 1) with approximately uniform distribution\n over that range — which you can then scale to your desired range.\n The implementation selects the initial seed to the random number generation algorithm;\n it cannot be chosen or reset by the user.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2475},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":96359,"byte_end":96364,"line_start":2198,"line_end":2198,"column_start":16,"column_end":21},"name":"round","qualname":"::Math::round","value":"pub fn round(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.round()` function returns the value of a number rounded to the nearest integer.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2477},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":96720,"byte_end":96724,"line_start":2205,"line_end":2205,"column_start":16,"column_end":20},"name":"sign","qualname":"::Math::sign","value":"pub fn sign(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.sign()` function returns the sign of a number, indicating whether the number is\n positive, negative or zero.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2479},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":97005,"byte_end":97008,"line_start":2211,"line_end":2211,"column_start":16,"column_end":19},"name":"sin","qualname":"::Math::sin","value":"pub fn sin(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.sin()` function returns the sine of a number.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2481},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":97388,"byte_end":97392,"line_start":2218,"line_end":2218,"column_start":16,"column_end":20},"name":"sinh","qualname":"::Math::sinh","value":"pub fn sinh(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.sinh()` function returns the hyperbolic sine of a number, that can be expressed\n using the constant e: Math.sinh(x) = (e^x - e^-x)/2","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2483},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":97773,"byte_end":97777,"line_start":2225,"line_end":2225,"column_start":16,"column_end":20},"name":"sqrt","qualname":"::Math::sqrt","value":"pub fn sqrt(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.sqrt()` function returns the square root of a number, that is\n ∀x ≥ 0, Math.sqrt(x) = √x = the unique y ≥ 0 such that y^2 = x","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2485},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":98061,"byte_end":98064,"line_start":2231,"line_end":2231,"column_start":16,"column_end":19},"name":"tan","qualname":"::Math::tan","value":"pub fn tan(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.tan()` function returns the tangent of a number.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2487},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":98458,"byte_end":98462,"line_start":2238,"line_end":2238,"column_start":16,"column_end":20},"name":"tanh","qualname":"::Math::tanh","value":"pub fn tanh(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.tanh()` function returns the hyperbolic tangent of a number, that is\n tanh x = sinh x / cosh x = (e^x - e^-x)/(e^x + e^-x) = (e^2x - 1)/(e^2x + 1)","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2489},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":98801,"byte_end":98806,"line_start":2245,"line_end":2245,"column_start":16,"column_end":21},"name":"trunc","qualname":"::Math::trunc","value":"pub fn trunc(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.trunc()` function returns the integer part of a number by removing any fractional\n digits.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":86166,"byte_end":86181,"line_start":2005,"line_end":2005,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2620},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":99022,"byte_end":99028,"line_start":2254,"line_end":2254,"column_start":14,"column_end":20},"name":"Number","qualname":"::Number","value":"Number {  }","parent":null,"children":[{"krate":0,"index":2621}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":98843,"byte_end":98858,"line_start":2250,"line_end":2250,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":98843,"byte_end":98858,"line_start":2250,"line_end":2250,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2579},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":99338,"byte_end":99347,"line_start":2260,"line_end":2260,"column_start":12,"column_end":21},"name":"is_finite","qualname":"<Number>::is_finite","value":"pub fn is_finite(&JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `Number.isFinite()` method determines whether the passed value is a finite number.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":98843,"byte_end":98858,"line_start":2250,"line_end":2250,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":98843,"byte_end":98858,"line_start":2250,"line_end":2250,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2582},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":99680,"byte_end":99690,"line_start":2266,"line_end":2266,"column_start":12,"column_end":22},"name":"is_integer","qualname":"<Number>::is_integer","value":"pub fn is_integer(&JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `Number.isInteger()` method determines whether the passed value is an integer.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":98843,"byte_end":98858,"line_start":2250,"line_end":2250,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":98843,"byte_end":98858,"line_start":2250,"line_end":2250,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2585},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":100098,"byte_end":100104,"line_start":2273,"line_end":2273,"column_start":12,"column_end":18},"name":"is_nan","qualname":"<Number>::is_nan","value":"pub fn is_nan(&JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `Number.isNaN()` method determines whether the passed value is `NaN` and its type is Number.\n It is a more robust version of the original, global isNaN().","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":98843,"byte_end":98858,"line_start":2250,"line_end":2250,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":98843,"byte_end":98858,"line_start":2250,"line_end":2250,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2588},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":100480,"byte_end":100495,"line_start":2280,"line_end":2280,"column_start":12,"column_end":27},"name":"is_safe_integer","qualname":"<Number>::is_safe_integer","value":"pub fn is_safe_integer(&JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `Number.isSafeInteger()` method determines whether the provided value is a number\n that is a safe integer.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":98843,"byte_end":98858,"line_start":2250,"line_end":2250,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":98843,"byte_end":98858,"line_start":2250,"line_end":2250,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2591},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":100969,"byte_end":100972,"line_start":2290,"line_end":2290,"column_start":12,"column_end":15},"name":"new","qualname":"<Number>::new","value":"pub fn new(&JsValue) -> Number","parent":null,"children":[],"decl_id":null,"docs":" The `Number` JavaScript object is a wrapper object allowing\n you to work with numerical values. A `Number` object is\n created using the `Number()` constructor.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":98843,"byte_end":98858,"line_start":2250,"line_end":2250,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":98843,"byte_end":98858,"line_start":2250,"line_end":2250,"column_start":1,"column_end":16}},{"value":"deprecated(note = \"recommended to use `Number::from` instead\")","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":100867,"byte_end":100932,"line_start":2288,"line_end":2288,"column_start":5,"column_end":70}},{"value":"allow(deprecated)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":100937,"byte_end":100957,"line_start":2289,"line_end":2289,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2597},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":101419,"byte_end":101428,"line_start":2300,"line_end":2300,"column_start":12,"column_end":21},"name":"parse_int","qualname":"<Number>::parse_int","value":"pub fn parse_int(&str, u8) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Number.parseInt()` method parses a string argument and returns an\n integer of the specified radix or base.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":98843,"byte_end":98858,"line_start":2250,"line_end":2250,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":98843,"byte_end":98858,"line_start":2250,"line_end":2250,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2600},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":101788,"byte_end":101799,"line_start":2307,"line_end":2307,"column_start":12,"column_end":23},"name":"parse_float","qualname":"<Number>::parse_float","value":"pub fn parse_float(&str) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Number.parseFloat()` method parses a string argument and returns a\n floating point number.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":98843,"byte_end":98858,"line_start":2250,"line_end":2250,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":98843,"byte_end":98858,"line_start":2250,"line_end":2250,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2603},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":102146,"byte_end":102162,"line_start":2314,"line_end":2314,"column_start":12,"column_end":28},"name":"to_locale_string","qualname":"<Number>::to_locale_string","value":"pub fn to_locale_string(&Self, &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toLocaleString()` method returns a string with a language sensitive\n representation of this number.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":98843,"byte_end":98858,"line_start":2250,"line_end":2250,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":98843,"byte_end":98858,"line_start":2250,"line_end":2250,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2606},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":102531,"byte_end":102543,"line_start":2321,"line_end":2321,"column_start":12,"column_end":24},"name":"to_precision","qualname":"<Number>::to_precision","value":"pub fn to_precision(&Self, u8) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `toPrecision()` method returns a string representing the Number\n object to the specified precision.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":98843,"byte_end":98858,"line_start":2250,"line_end":2250,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":98843,"byte_end":98858,"line_start":2250,"line_end":2250,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2609},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":102918,"byte_end":102926,"line_start":2328,"line_end":2328,"column_start":12,"column_end":20},"name":"to_fixed","qualname":"<Number>::to_fixed","value":"pub fn to_fixed(&Self, u8) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `toFixed()` method returns a string representing the Number\n object using fixed-point notation.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":98843,"byte_end":98858,"line_start":2250,"line_end":2250,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":98843,"byte_end":98858,"line_start":2250,"line_end":2250,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2612},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":103313,"byte_end":103327,"line_start":2335,"line_end":2335,"column_start":12,"column_end":26},"name":"to_exponential","qualname":"<Number>::to_exponential","value":"pub fn to_exponential(&Self, u8) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `toExponential()` method returns a string representing the Number\n object in exponential notation.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":98843,"byte_end":98858,"line_start":2250,"line_end":2250,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":98843,"byte_end":98858,"line_start":2250,"line_end":2250,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2615},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":103694,"byte_end":103703,"line_start":2342,"line_end":2342,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Number>::to_string","value":"pub fn to_string(&Self, u8) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `toString()` method returns a string representing the\n specified Number object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":98843,"byte_end":98858,"line_start":2250,"line_end":2250,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":98843,"byte_end":98858,"line_start":2250,"line_end":2250,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2618},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":104047,"byte_end":104055,"line_start":2349,"line_end":2349,"column_start":12,"column_end":20},"name":"value_of","qualname":"<Number>::value_of","value":"pub fn value_of(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `valueOf()` method returns the wrapped primitive value of\n a Number object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":98843,"byte_end":98858,"line_start":2250,"line_end":2250,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":98843,"byte_end":98858,"line_start":2250,"line_end":2250,"column_start":1,"column_end":16}}]},{"kind":"Const","id":{"krate":0,"index":195},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":104308,"byte_end":104315,"line_start":2356,"line_end":2356,"column_start":15,"column_end":22},"name":"EPSILON","qualname":"::Number::EPSILON","value":"f64","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" The smallest interval between two representable numbers.","sig":null,"attributes":[{"value":"/ The smallest interval between two representable numbers.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":104100,"byte_end":104160,"line_start":2353,"line_end":2353,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":104165,"byte_end":104168,"line_start":2354,"line_end":2354,"column_start":5,"column_end":8}},{"value":"/ [MDN Documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":104173,"byte_end":104293,"line_start":2355,"line_end":2355,"column_start":5,"column_end":125}}]},{"kind":"Const","id":{"krate":0,"index":196},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":104552,"byte_end":104568,"line_start":2360,"line_end":2360,"column_start":15,"column_end":31},"name":"MAX_SAFE_INTEGER","qualname":"::Number::MAX_SAFE_INTEGER","value":"f64","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" The maximum safe integer in JavaScript (2^53 - 1).","sig":null,"attributes":[{"value":"/ The maximum safe integer in JavaScript (2^53 - 1).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":104341,"byte_end":104395,"line_start":2357,"line_end":2357,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":104400,"byte_end":104403,"line_start":2358,"line_end":2358,"column_start":5,"column_end":8}},{"value":"/ [MDN Documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":104408,"byte_end":104537,"line_start":2359,"line_end":2359,"column_start":5,"column_end":134}}]},{"kind":"Const","id":{"krate":0,"index":197},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":104796,"byte_end":104805,"line_start":2364,"line_end":2364,"column_start":15,"column_end":24},"name":"MAX_VALUE","qualname":"::Number::MAX_VALUE","value":"f64","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" The largest positive representable number.","sig":null,"attributes":[{"value":"/ The largest positive representable number.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":104600,"byte_end":104646,"line_start":2361,"line_end":2361,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":104651,"byte_end":104654,"line_start":2362,"line_end":2362,"column_start":5,"column_end":8}},{"value":"/ [MDN Documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_VALUE)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":104659,"byte_end":104781,"line_start":2363,"line_end":2363,"column_start":5,"column_end":127}}]},{"kind":"Const","id":{"krate":0,"index":198},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":105041,"byte_end":105057,"line_start":2368,"line_end":2368,"column_start":15,"column_end":31},"name":"MIN_SAFE_INTEGER","qualname":"::Number::MIN_SAFE_INTEGER","value":"f64","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" The minimum safe integer in JavaScript (-(2^53 - 1)).","sig":null,"attributes":[{"value":"/ The minimum safe integer in JavaScript (-(2^53 - 1)).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":104827,"byte_end":104884,"line_start":2365,"line_end":2365,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":104889,"byte_end":104892,"line_start":2366,"line_end":2366,"column_start":5,"column_end":8}},{"value":"/ [MDN Documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_SAFE_INTEGER)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":104897,"byte_end":105026,"line_start":2367,"line_end":2367,"column_start":5,"column_end":134}}]},{"kind":"Const","id":{"krate":0,"index":199},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":105464,"byte_end":105473,"line_start":2374,"line_end":2374,"column_start":15,"column_end":24},"name":"MIN_VALUE","qualname":"::Number::MIN_VALUE","value":"f64","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" The smallest positive representable number—that is, the positive number closest to zero\n (without actually being zero).","sig":null,"attributes":[{"value":"/ The smallest positive representable number—that is, the positive number closest to zero","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":105090,"byte_end":105183,"line_start":2369,"line_end":2369,"column_start":5,"column_end":96}},{"value":"/ (without actually being zero).","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":105188,"byte_end":105222,"line_start":2370,"line_end":2370,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":105227,"byte_end":105230,"line_start":2371,"line_end":2371,"column_start":5,"column_end":8}},{"value":"/ [MDN Documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_VALUE)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":105235,"byte_end":105357,"line_start":2372,"line_end":2372,"column_start":5,"column_end":127}}]},{"kind":"Const","id":{"krate":0,"index":200},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":105670,"byte_end":105673,"line_start":2378,"line_end":2378,"column_start":15,"column_end":18},"name":"NAN","qualname":"::Number::NAN","value":"f64","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" Special \"Not a Number\" value.","sig":null,"attributes":[{"value":"/ Special \"Not a Number\" value.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":105493,"byte_end":105526,"line_start":2375,"line_end":2375,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":105531,"byte_end":105534,"line_start":2376,"line_end":2376,"column_start":5,"column_end":8}},{"value":"/ [MDN Documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/NaN)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":105539,"byte_end":105655,"line_start":2377,"line_end":2377,"column_start":5,"column_end":121}}]},{"kind":"Const","id":{"krate":0,"index":201},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":105924,"byte_end":105941,"line_start":2382,"line_end":2382,"column_start":15,"column_end":32},"name":"NEGATIVE_INFINITY","qualname":"::Number::NEGATIVE_INFINITY","value":"f64","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" Special value representing negative infinity. Returned on overflow.","sig":null,"attributes":[{"value":"/ Special value representing negative infinity. Returned on overflow.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":105695,"byte_end":105766,"line_start":2379,"line_end":2379,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":105771,"byte_end":105774,"line_start":2380,"line_end":2380,"column_start":5,"column_end":8}},{"value":"/ [MDN Documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/NEGATIVE_INFINITY)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":105779,"byte_end":105909,"line_start":2381,"line_end":2381,"column_start":5,"column_end":135}}]},{"kind":"Const","id":{"krate":0,"index":202},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":106192,"byte_end":106209,"line_start":2386,"line_end":2386,"column_start":15,"column_end":32},"name":"POSITIVE_INFINITY","qualname":"::Number::POSITIVE_INFINITY","value":"f64","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" Special value representing infinity. Returned on overflow.","sig":null,"attributes":[{"value":"/ Special value representing infinity. Returned on overflow.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":105972,"byte_end":106034,"line_start":2383,"line_end":2383,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":106039,"byte_end":106042,"line_start":2384,"line_end":2384,"column_start":5,"column_end":8}},{"value":"/ [MDN Documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/POSITIVE_INFINITY)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":106047,"byte_end":106177,"line_start":2385,"line_end":2385,"column_start":5,"column_end":135}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":106452,"byte_end":106455,"line_start":2392,"line_end":2392,"column_start":12,"column_end":15},"name":"pow","qualname":"<Number>::pow","value":"pub fn pow(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Applies the binary `**` JS operator on the two `Number`s.","sig":null,"attributes":[{"value":"/ Applies the binary `**` JS operator on the two `Number`s.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":106237,"byte_end":106298,"line_start":2388,"line_end":2388,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":106303,"byte_end":106306,"line_start":2389,"line_end":2389,"column_start":5,"column_end":8}},{"value":"/ [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Exponentiation)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":106311,"byte_end":106426,"line_start":2390,"line_end":2390,"column_start":5,"column_end":120}},{"value":"inline","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":106431,"byte_end":106440,"line_start":2391,"line_end":2391,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":106817,"byte_end":106829,"line_start":2402,"line_end":2402,"column_start":12,"column_end":24},"name":"unsigned_shr","qualname":"<Number>::unsigned_shr","value":"pub fn unsigned_shr(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Applies the binary `>>>` JS operator on the two `Number`s.","sig":null,"attributes":[{"value":"/ Applies the binary `>>>` JS operator on the two `Number`s.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":106595,"byte_end":106657,"line_start":2398,"line_end":2398,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":106662,"byte_end":106665,"line_start":2399,"line_end":2399,"column_start":5,"column_end":8}},{"value":"/ [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":106670,"byte_end":106791,"line_start":2400,"line_end":2400,"column_start":5,"column_end":126}},{"value":"inline","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":106796,"byte_end":106805,"line_start":2401,"line_end":2401,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3076},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110570,"byte_end":110574,"line_start":2555,"line_end":2555,"column_start":14,"column_end":18},"name":"Date","qualname":"::Date","value":"Date {  }","parent":null,"children":[{"krate":0,"index":3077}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2903},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110882,"byte_end":110890,"line_start":2562,"line_end":2562,"column_start":12,"column_end":20},"name":"get_date","qualname":"<Date>::get_date","value":"pub fn get_date(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getDate()` method returns the day of the month for the\n specified date according to local time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2906},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":111281,"byte_end":111288,"line_start":2569,"line_end":2569,"column_start":12,"column_end":19},"name":"get_day","qualname":"<Date>::get_day","value":"pub fn get_day(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getDay()` method returns the day of the week for the specified date according to local time,\n where 0 represents Sunday. For the day of the month see getDate().","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2909},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":111607,"byte_end":111620,"line_start":2575,"line_end":2575,"column_start":12,"column_end":25},"name":"get_full_year","qualname":"<Date>::get_full_year","value":"pub fn get_full_year(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getFullYear()` method returns the year of the specified date according to local time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2912},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":111932,"byte_end":111941,"line_start":2581,"line_end":2581,"column_start":12,"column_end":21},"name":"get_hours","qualname":"<Date>::get_hours","value":"pub fn get_hours(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getHours()` method returns the hour for the specified date, according to local time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2915},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":112280,"byte_end":112296,"line_start":2587,"line_end":2587,"column_start":12,"column_end":28},"name":"get_milliseconds","qualname":"<Date>::get_milliseconds","value":"pub fn get_milliseconds(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getMilliseconds()` method returns the milliseconds in the specified date according to local time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2918},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":112615,"byte_end":112626,"line_start":2593,"line_end":2593,"column_start":12,"column_end":23},"name":"get_minutes","qualname":"<Date>::get_minutes","value":"pub fn get_minutes(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getMinutes()` method returns the minutes in the specified date according to local time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2921},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":113019,"byte_end":113028,"line_start":2600,"line_end":2600,"column_start":12,"column_end":21},"name":"get_month","qualname":"<Date>::get_month","value":"pub fn get_month(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getMonth()` method returns the month in the specified date according to local time,\n as a zero-based value (where zero indicates the first month of the year).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2924},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":113347,"byte_end":113358,"line_start":2606,"line_end":2606,"column_start":12,"column_end":23},"name":"get_seconds","qualname":"<Date>::get_seconds","value":"pub fn get_seconds(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getSeconds()` method returns the seconds in the specified date according to local time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2927},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":113713,"byte_end":113721,"line_start":2613,"line_end":2613,"column_start":12,"column_end":20},"name":"get_time","qualname":"<Date>::get_time","value":"pub fn get_time(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `getTime()` method returns the numeric value corresponding to the time for the specified date\n according to universal time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2930},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":114099,"byte_end":114118,"line_start":2620,"line_end":2620,"column_start":12,"column_end":31},"name":"get_timezone_offset","qualname":"<Date>::get_timezone_offset","value":"pub fn get_timezone_offset(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `getTimezoneOffset()` method returns the time zone difference, in minutes,\n from current locale (host system settings) to UTC.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2933},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":114465,"byte_end":114477,"line_start":2627,"line_end":2627,"column_start":12,"column_end":24},"name":"get_utc_date","qualname":"<Date>::get_utc_date","value":"pub fn get_utc_date(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getUTCDate()` method returns the day (date) of the month in the specified date\n according to universal time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2936},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":114840,"byte_end":114851,"line_start":2634,"line_end":2634,"column_start":12,"column_end":23},"name":"get_utc_day","qualname":"<Date>::get_utc_day","value":"pub fn get_utc_day(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getUTCDay()` method returns the day of the week in the specified date according to universal time,\n where 0 represents Sunday.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2939},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":115183,"byte_end":115200,"line_start":2640,"line_end":2640,"column_start":12,"column_end":29},"name":"get_utc_full_year","qualname":"<Date>::get_utc_full_year","value":"pub fn get_utc_full_year(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getUTCFullYear()` method returns the year in the specified date according to universal time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2942},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":115524,"byte_end":115537,"line_start":2646,"line_end":2646,"column_start":12,"column_end":25},"name":"get_utc_hours","qualname":"<Date>::get_utc_hours","value":"pub fn get_utc_hours(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getUTCHours()` method returns the hours in the specified date according to universal time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2945},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":115897,"byte_end":115917,"line_start":2653,"line_end":2653,"column_start":12,"column_end":32},"name":"get_utc_milliseconds","qualname":"<Date>::get_utc_milliseconds","value":"pub fn get_utc_milliseconds(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getUTCMilliseconds()` method returns the milliseconds in the specified date\n according to universal time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2948},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":116249,"byte_end":116264,"line_start":2659,"line_end":2659,"column_start":12,"column_end":27},"name":"get_utc_minutes","qualname":"<Date>::get_utc_minutes","value":"pub fn get_utc_minutes(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getUTCMinutes()` method returns the minutes in the specified date according to universal time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2951},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":116663,"byte_end":116676,"line_start":2666,"line_end":2666,"column_start":12,"column_end":25},"name":"get_utc_month","qualname":"<Date>::get_utc_month","value":"pub fn get_utc_month(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getUTCMonth()` returns the month of the specified date according to universal time,\n as a zero-based value (where zero indicates the first month of the year).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2954},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":117008,"byte_end":117023,"line_start":2672,"line_end":2672,"column_start":12,"column_end":27},"name":"get_utc_seconds","qualname":"<Date>::get_utc_seconds","value":"pub fn get_utc_seconds(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getUTCSeconds()` method returns the seconds in the specified date according to universal time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2957},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":117417,"byte_end":117420,"line_start":2680,"line_end":2680,"column_start":12,"column_end":15},"name":"new","qualname":"<Date>::new","value":"pub fn new(&JsValue) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Creates a JavaScript `Date` instance that represents\n a single moment in time. `Date` objects are based on a time value that is\n the number of milliseconds since 1 January 1970 UTC.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2960},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":117711,"byte_end":117716,"line_start":2687,"line_end":2687,"column_start":12,"column_end":17},"name":"new_0","qualname":"<Date>::new_0","value":"pub fn new_0() -> Date","parent":null,"children":[],"decl_id":null,"docs":" Creates a JavaScript `Date` instance that represents the current moment in\n time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2963},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":118100,"byte_end":118119,"line_start":2695,"line_end":2695,"column_start":12,"column_end":31},"name":"new_with_year_month","qualname":"<Date>::new_with_year_month","value":"pub fn new_with_year_month(u32, i32) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Creates a JavaScript `Date` instance that represents\n a single moment in time. `Date` objects are based on a time value that is\n the number of milliseconds since 1 January 1970 UTC.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2966},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":118524,"byte_end":118547,"line_start":2703,"line_end":2703,"column_start":12,"column_end":35},"name":"new_with_year_month_day","qualname":"<Date>::new_with_year_month_day","value":"pub fn new_with_year_month_day(u32, i32, i32) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Creates a JavaScript `Date` instance that represents\n a single moment in time. `Date` objects are based on a time value that is\n the number of milliseconds since 1 January 1970 UTC.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2969},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":118962,"byte_end":118988,"line_start":2711,"line_end":2711,"column_start":12,"column_end":38},"name":"new_with_year_month_day_hr","qualname":"<Date>::new_with_year_month_day_hr","value":"pub fn new_with_year_month_day_hr(u32, i32, i32, i32) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Creates a JavaScript `Date` instance that represents\n a single moment in time. `Date` objects are based on a time value that is\n the number of milliseconds since 1 January 1970 UTC.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2972},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":119412,"byte_end":119442,"line_start":2719,"line_end":2719,"column_start":12,"column_end":42},"name":"new_with_year_month_day_hr_min","qualname":"<Date>::new_with_year_month_day_hr_min","value":"pub fn new_with_year_month_day_hr_min(u32, i32, i32, i32, i32) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Creates a JavaScript `Date` instance that represents\n a single moment in time. `Date` objects are based on a time value that is\n the number of milliseconds since 1 January 1970 UTC.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2975},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":119923,"byte_end":119957,"line_start":2733,"line_end":2733,"column_start":12,"column_end":46},"name":"new_with_year_month_day_hr_min_sec","qualname":"<Date>::new_with_year_month_day_hr_min_sec","value":"pub fn new_with_year_month_day_hr_min_sec(u32, i32, i32, i32, i32, i32)\n-> Date","parent":null,"children":[],"decl_id":null,"docs":" Creates a JavaScript `Date` instance that represents\n a single moment in time. `Date` objects are based on a time value that is\n the number of milliseconds since 1 January 1970 UTC.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2978},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":120456,"byte_end":120496,"line_start":2748,"line_end":2748,"column_start":12,"column_end":52},"name":"new_with_year_month_day_hr_min_sec_milli","qualname":"<Date>::new_with_year_month_day_hr_min_sec_milli","value":"pub fn new_with_year_month_day_hr_min_sec_milli(u32, i32, i32, i32, i32, i32,\n                                                i32) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Creates a JavaScript `Date` instance that represents\n a single moment in time. `Date` objects are based on a time value that is\n the number of milliseconds since 1 January 1970 UTC.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2981},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":120946,"byte_end":120949,"line_start":2763,"line_end":2763,"column_start":12,"column_end":15},"name":"now","qualname":"<Date>::now","value":"pub fn now() -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Date.now()` method returns the number of milliseconds\n elapsed since January 1, 1970 00:00:00 UTC.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2984},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":121419,"byte_end":121424,"line_start":2771,"line_end":2771,"column_start":12,"column_end":17},"name":"parse","qualname":"<Date>::parse","value":"pub fn parse(&str) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Date.parse()` method parses a string representation of a date, and returns the number of milliseconds\n since January 1, 1970, 00:00:00 UTC or `NaN` if the string is unrecognized or, in some cases,\n contains illegal date values (e.g. 2015-02-31).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2987},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":121752,"byte_end":121760,"line_start":2777,"line_end":2777,"column_start":12,"column_end":20},"name":"set_date","qualname":"<Date>::set_date","value":"pub fn set_date(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setDate()` method sets the day of the Date object relative to the beginning of the currently set month.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2990},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":122121,"byte_end":122134,"line_start":2784,"line_end":2784,"column_start":12,"column_end":25},"name":"set_full_year","qualname":"<Date>::set_full_year","value":"pub fn set_full_year(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setFullYear()` method sets the full year for a specified date according to local time.\n Returns new timestamp.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2993},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":122496,"byte_end":122520,"line_start":2791,"line_end":2791,"column_start":12,"column_end":36},"name":"set_full_year_with_month","qualname":"<Date>::set_full_year_with_month","value":"pub fn set_full_year_with_month(&Self, u32, i32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setFullYear()` method sets the full year for a specified date according to local time.\n Returns new timestamp.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2996},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":122894,"byte_end":122923,"line_start":2798,"line_end":2798,"column_start":12,"column_end":41},"name":"set_full_year_with_month_date","qualname":"<Date>::set_full_year_with_month_date","value":"pub fn set_full_year_with_month_date(&Self, u32, i32, i32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setFullYear()` method sets the full year for a specified date according to local time.\n Returns new timestamp.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2999},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":123411,"byte_end":123420,"line_start":2806,"line_end":2806,"column_start":12,"column_end":21},"name":"set_hours","qualname":"<Date>::set_hours","value":"pub fn set_hours(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setHours()` method sets the hours for a specified date according to local time,\n and returns the number of milliseconds since January 1, 1970 00:00:00 UTC until the time represented\n by the updated Date instance.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3002},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":123767,"byte_end":123783,"line_start":2812,"line_end":2812,"column_start":12,"column_end":28},"name":"set_milliseconds","qualname":"<Date>::set_milliseconds","value":"pub fn set_milliseconds(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setMilliseconds()` method sets the milliseconds for a specified date according to local time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3005},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":124117,"byte_end":124128,"line_start":2818,"line_end":2818,"column_start":12,"column_end":23},"name":"set_minutes","qualname":"<Date>::set_minutes","value":"pub fn set_minutes(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setMinutes()` method sets the minutes for a specified date according to local time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3008},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":124461,"byte_end":124470,"line_start":2824,"line_end":2824,"column_start":12,"column_end":21},"name":"set_month","qualname":"<Date>::set_month","value":"pub fn set_month(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setMonth()` method sets the month for a specified date according to the currently set year.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3011},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":124797,"byte_end":124808,"line_start":2830,"line_end":2830,"column_start":12,"column_end":23},"name":"set_seconds","qualname":"<Date>::set_seconds","value":"pub fn set_seconds(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setSeconds()` method sets the seconds for a specified date according to local time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3014},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":125183,"byte_end":125191,"line_start":2837,"line_end":2837,"column_start":12,"column_end":20},"name":"set_time","qualname":"<Date>::set_time","value":"pub fn set_time(&Self, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setTime()` method sets the Date object to the time represented by a number of milliseconds\n since January 1, 1970, 00:00:00 UTC.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3017},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":125538,"byte_end":125550,"line_start":2844,"line_end":2844,"column_start":12,"column_end":24},"name":"set_utc_date","qualname":"<Date>::set_utc_date","value":"pub fn set_utc_date(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setUTCDate()` method sets the day of the month for a specified date\n according to universal time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3020},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":125893,"byte_end":125910,"line_start":2850,"line_end":2850,"column_start":12,"column_end":29},"name":"set_utc_full_year","qualname":"<Date>::set_utc_full_year","value":"pub fn set_utc_full_year(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setUTCFullYear()` method sets the full year for a specified date according to universal time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3023},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":126254,"byte_end":126282,"line_start":2856,"line_end":2856,"column_start":12,"column_end":40},"name":"set_utc_full_year_with_month","qualname":"<Date>::set_utc_full_year_with_month","value":"pub fn set_utc_full_year_with_month(&Self, u32, i32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setUTCFullYear()` method sets the full year for a specified date according to universal time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3026},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":126638,"byte_end":126671,"line_start":2862,"line_end":2862,"column_start":12,"column_end":45},"name":"set_utc_full_year_with_month_date","qualname":"<Date>::set_utc_full_year_with_month_date","value":"pub fn set_utc_full_year_with_month_date(&Self, u32, i32, i32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setUTCFullYear()` method sets the full year for a specified date according to universal time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3029},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":127172,"byte_end":127185,"line_start":2870,"line_end":2870,"column_start":12,"column_end":25},"name":"set_utc_hours","qualname":"<Date>::set_utc_hours","value":"pub fn set_utc_hours(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setUTCHours()` method sets the hour for a specified date according to universal time,\n and returns the number of milliseconds since  January 1, 1970 00:00:00 UTC until the time\n represented by the updated Date instance.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3032},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":127553,"byte_end":127573,"line_start":2877,"line_end":2877,"column_start":12,"column_end":32},"name":"set_utc_milliseconds","qualname":"<Date>::set_utc_milliseconds","value":"pub fn set_utc_milliseconds(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setUTCMilliseconds()` method sets the milliseconds for a specified date\n according to universal time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3035},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":127920,"byte_end":127935,"line_start":2883,"line_end":2883,"column_start":12,"column_end":27},"name":"set_utc_minutes","qualname":"<Date>::set_utc_minutes","value":"pub fn set_utc_minutes(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setUTCMinutes()` method sets the minutes for a specified date according to universal time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3038},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":128269,"byte_end":128282,"line_start":2889,"line_end":2889,"column_start":12,"column_end":25},"name":"set_utc_month","qualname":"<Date>::set_utc_month","value":"pub fn set_utc_month(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setUTCMonth()` method sets the month for a specified date according to universal time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3041},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":128622,"byte_end":128637,"line_start":2895,"line_end":2895,"column_start":12,"column_end":27},"name":"set_utc_seconds","qualname":"<Date>::set_utc_seconds","value":"pub fn set_utc_seconds(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setUTCSeconds()` method sets the seconds for a specified date according to universal time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3044},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":129003,"byte_end":129017,"line_start":2902,"line_end":2902,"column_start":12,"column_end":26},"name":"to_date_string","qualname":"<Date>::to_date_string","value":"pub fn to_date_string(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toDateString()` method returns the date portion of a Date object\n in human readable form in American English.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3047},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":129548,"byte_end":129561,"line_start":2911,"line_end":2911,"column_start":12,"column_end":25},"name":"to_iso_string","qualname":"<Date>::to_iso_string","value":"pub fn to_iso_string(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toISOString()` method returns a string in simplified extended ISO format (ISO\n 8601), which is always 24 or 27 characters long (YYYY-MM-DDTHH:mm:ss.sssZ or\n ±YYYYYY-MM-DDTHH:mm:ss.sssZ, respectively). The timezone is always zero UTC offset,\n as denoted by the suffix \"Z\"","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3050},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":129858,"byte_end":129865,"line_start":2917,"line_end":2917,"column_start":12,"column_end":19},"name":"to_json","qualname":"<Date>::to_json","value":"pub fn to_json(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toJSON()` method returns a string representation of the Date object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3053},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":130624,"byte_end":130645,"line_start":2929,"line_end":2929,"column_start":12,"column_end":33},"name":"to_locale_date_string","qualname":"<Date>::to_locale_date_string","value":"pub fn to_locale_date_string(&Self, &str, &JsValue) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toLocaleDateString()` method returns a string with a language sensitive\n representation of the date portion of this date. The new locales and options\n arguments let applications specify the language whose formatting conventions\n should be used and allow to customize the behavior of the function.\n In older implementations, which ignore the locales and options arguments,\n the locale used and the form of the string\n returned are entirely implementation dependent.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3056},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":131396,"byte_end":131412,"line_start":2941,"line_end":2941,"column_start":12,"column_end":28},"name":"to_locale_string","qualname":"<Date>::to_locale_string","value":"pub fn to_locale_string(&Self, &str, &JsValue) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toLocaleString()` method returns a string with a language sensitive\n representation of this date. The new locales and options arguments\n let applications specify the language whose formatting conventions\n should be used and customize the behavior of the function.\n In older implementations, which ignore the locales\n and options arguments, the locale used and the form of the string\n returned are entirely implementation dependent.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3059},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":132187,"byte_end":132208,"line_start":2952,"line_end":2952,"column_start":12,"column_end":33},"name":"to_locale_time_string","qualname":"<Date>::to_locale_time_string","value":"pub fn to_locale_time_string(&Self, &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toLocaleTimeString()` method returns a string with a language sensitive\n representation of the time portion of this date. The new locales and options\n arguments let applications specify the language whose formatting conventions should be\n used and customize the behavior of the function. In older implementations, which ignore\n the locales and options arguments, the locale used and the form of the string\n returned are entirely implementation dependent.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3062},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":132538,"byte_end":132547,"line_start":2959,"line_end":2959,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Date>::to_string","value":"pub fn to_string(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toString()` method returns a string representing\n the specified Date object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3065},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":132904,"byte_end":132918,"line_start":2966,"line_end":2966,"column_start":12,"column_end":26},"name":"to_time_string","qualname":"<Date>::to_time_string","value":"pub fn to_time_string(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toTimeString()` method returns the time portion of a Date object in human\n readable form in American English.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3068},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":133240,"byte_end":133253,"line_start":2973,"line_end":2973,"column_start":12,"column_end":25},"name":"to_utc_string","qualname":"<Date>::to_utc_string","value":"pub fn to_utc_string(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toUTCString()` method converts a date to a string,\n using the UTC time zone.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3071},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":133710,"byte_end":133713,"line_start":2982,"line_end":2982,"column_start":12,"column_end":15},"name":"utc","qualname":"<Date>::utc","value":"pub fn utc(f64, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Date.UTC()` method accepts the same parameters as the\n longest form of the constructor, and returns the number of\n milliseconds in a `Date` object since January 1, 1970,\n 00:00:00, universal time.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3074},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134021,"byte_end":134029,"line_start":2989,"line_end":2989,"column_start":12,"column_end":20},"name":"value_of","qualname":"<Date>::value_of","value":"pub fn value_of(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `valueOf()` method  returns the primitive value of\n a Date object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110421,"byte_end":110436,"line_start":2551,"line_end":2551,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":3257},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134183,"byte_end":134189,"line_start":2997,"line_end":2997,"column_start":14,"column_end":20},"name":"Object","qualname":"::Object","value":"Object {  }","parent":null,"children":[{"krate":0,"index":3258}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3165},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134581,"byte_end":134587,"line_start":3005,"line_end":3005,"column_start":12,"column_end":18},"name":"assign","qualname":"<Object>::assign","value":"pub fn assign(&Object, &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Object.assign()` method is used to copy the values of all enumerable\n own properties from one or more source objects to a target object. It\n will return the target object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3168},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":135041,"byte_end":135048,"line_start":3013,"line_end":3013,"column_start":12,"column_end":19},"name":"assign2","qualname":"<Object>::assign2","value":"pub fn assign2(&Object, &Object, &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Object.assign()` method is used to copy the values of all enumerable\n own properties from one or more source objects to a target object. It\n will return the target object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3171},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":135521,"byte_end":135528,"line_start":3021,"line_end":3021,"column_start":12,"column_end":19},"name":"assign3","qualname":"<Object>::assign3","value":"pub fn assign3(&Object, &Object, &Object, &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Object.assign()` method is used to copy the values of all enumerable\n own properties from one or more source objects to a target object. It\n will return the target object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3174},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":135936,"byte_end":135947,"line_start":3029,"line_end":3029,"column_start":12,"column_end":23},"name":"constructor","qualname":"<Object>::constructor","value":"pub fn constructor(&Self) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The constructor property returns a reference to the `Object` constructor\n function that created the instance object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3177},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":136308,"byte_end":136314,"line_start":3036,"line_end":3036,"column_start":12,"column_end":18},"name":"create","qualname":"<Object>::create","value":"pub fn create(&Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Object.create()` method creates a new object, using an existing\n object to provide the newly created object's prototype.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3180},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":136756,"byte_end":136771,"line_start":3044,"line_end":3044,"column_start":12,"column_end":27},"name":"define_property","qualname":"<Object>::define_property","value":"pub fn define_property(&Object, &JsValue, &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The static method `Object.defineProperty()` defines a new\n property directly on an object, or modifies an existing\n property on an object, and returns the object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3183},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":137215,"byte_end":137232,"line_start":3052,"line_end":3052,"column_start":12,"column_end":29},"name":"define_properties","qualname":"<Object>::define_properties","value":"pub fn define_properties(&Object, &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Object.defineProperties()` method defines new or modifies\n existing properties directly on an object, returning the\n object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3186},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":137767,"byte_end":137774,"line_start":3062,"line_end":3062,"column_start":12,"column_end":19},"name":"entries","qualname":"<Object>::entries","value":"pub fn entries(&Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Object.entries()` method returns an array of a given\n object's own enumerable property [key, value] pairs, in the\n same order as that provided by a for...in loop (the difference\n being that a for-in loop enumerates properties in the\n prototype chain as well).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3189},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":138387,"byte_end":138393,"line_start":3072,"line_end":3072,"column_start":12,"column_end":18},"name":"freeze","qualname":"<Object>::freeze","value":"pub fn freeze(&Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Object.freeze()` method freezes an object: that is, prevents new\n properties from being added to it; prevents existing properties from\n being removed; and prevents existing properties, or their enumerability,\n configurability, or writability, from being changed, it also prevents\n the prototype from being changed. The method returns the passed object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3192},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":138750,"byte_end":138762,"line_start":3079,"line_end":3079,"column_start":12,"column_end":24},"name":"from_entries","qualname":"<Object>::from_entries","value":"pub fn from_entries(&JsValue) -> Result<Object, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `Object.fromEntries()` method transforms a list of key-value pairs\n into an object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3195},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":139289,"byte_end":139316,"line_start":3088,"line_end":3088,"column_start":12,"column_end":39},"name":"get_own_property_descriptor","qualname":"<Object>::get_own_property_descriptor","value":"pub fn get_own_property_descriptor(&Object, &JsValue) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `Object.getOwnPropertyDescriptor()` method returns a\n property descriptor for an own property (that is, one directly\n present on an object and not in the object's prototype chain)\n of a given object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3198},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":139726,"byte_end":139754,"line_start":3095,"line_end":3095,"column_start":12,"column_end":40},"name":"get_own_property_descriptors","qualname":"<Object>::get_own_property_descriptors","value":"pub fn get_own_property_descriptors(&Object) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `Object.getOwnPropertyDescriptors()` method returns all own\n property descriptors of a given object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3201},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":140225,"byte_end":140247,"line_start":3103,"line_end":3103,"column_start":12,"column_end":34},"name":"get_own_property_names","qualname":"<Object>::get_own_property_names","value":"pub fn get_own_property_names(&Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Object.getOwnPropertyNames()` method returns an array of\n all properties (including non-enumerable properties except for\n those which use Symbol) found directly upon a given object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3204},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":140649,"byte_end":140673,"line_start":3110,"line_end":3110,"column_start":12,"column_end":36},"name":"get_own_property_symbols","qualname":"<Object>::get_own_property_symbols","value":"pub fn get_own_property_symbols(&Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Object.getOwnPropertySymbols()` method returns an array of\n all symbol properties found directly upon a given object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3207},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":141087,"byte_end":141103,"line_start":3118,"line_end":3118,"column_start":12,"column_end":28},"name":"get_prototype_of","qualname":"<Object>::get_prototype_of","value":"pub fn get_prototype_of(&JsValue) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Object.getPrototypeOf()` method returns the prototype\n (i.e. the value of the internal [[Prototype]] property) of the\n specified object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3210},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":141516,"byte_end":141532,"line_start":3126,"line_end":3126,"column_start":12,"column_end":28},"name":"has_own_property","qualname":"<Object>::has_own_property","value":"pub fn has_own_property(&Self, &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `hasOwnProperty()` method returns a boolean indicating whether the\n object has the specified property as its own property (as opposed to\n inheriting it).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3213},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":141847,"byte_end":141849,"line_start":3132,"line_end":3132,"column_start":12,"column_end":14},"name":"is","qualname":"<Object>::is","value":"pub fn is(&JsValue, &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `Object.is()` method determines whether two values are the same value.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3216},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":142257,"byte_end":142270,"line_start":3139,"line_end":3139,"column_start":12,"column_end":25},"name":"is_extensible","qualname":"<Object>::is_extensible","value":"pub fn is_extensible(&Object) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `Object.isExtensible()` method determines if an object is extensible\n (whether it can have new properties added to it).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3219},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":142577,"byte_end":142586,"line_start":3145,"line_end":3145,"column_start":12,"column_end":21},"name":"is_frozen","qualname":"<Object>::is_frozen","value":"pub fn is_frozen(&Object) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `Object.isFrozen()` determines if an object is frozen.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3222},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":142900,"byte_end":142909,"line_start":3151,"line_end":3151,"column_start":12,"column_end":21},"name":"is_sealed","qualname":"<Object>::is_sealed","value":"pub fn is_sealed(&Object) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `Object.isSealed()` method determines if an object is sealed.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3225},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":143249,"byte_end":143264,"line_start":3158,"line_end":3158,"column_start":12,"column_end":27},"name":"is_prototype_of","qualname":"<Object>::is_prototype_of","value":"pub fn is_prototype_of(&Self, &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `isPrototypeOf()` method checks if an object exists in another\n object's prototype chain.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3228},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":143639,"byte_end":143643,"line_start":3165,"line_end":3165,"column_start":12,"column_end":16},"name":"keys","qualname":"<Object>::keys","value":"pub fn keys(&Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Object.keys()` method returns an array of a given object's property\n names, in the same order as we get with a normal loop.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3231},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":143903,"byte_end":143906,"line_start":3171,"line_end":3171,"column_start":12,"column_end":15},"name":"new","qualname":"<Object>::new","value":"pub fn new() -> Object","parent":null,"children":[],"decl_id":null,"docs":" The [`Object`] constructor creates an object wrapper.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3234},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":144323,"byte_end":144341,"line_start":3179,"line_end":3179,"column_start":12,"column_end":30},"name":"prevent_extensions","qualname":"<Object>::prevent_extensions","value":"pub fn prevent_extensions(&Object)","parent":null,"children":[],"decl_id":null,"docs":" The `Object.preventExtensions()` method prevents new properties from\n ever being added to an object (i.e. prevents future extensions to the\n object).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3237},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":144705,"byte_end":144727,"line_start":3186,"line_end":3186,"column_start":12,"column_end":34},"name":"property_is_enumerable","qualname":"<Object>::property_is_enumerable","value":"pub fn property_is_enumerable(&Self, &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `propertyIsEnumerable()` method returns a Boolean indicating\n whether the specified property is enumerable.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3240},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":145224,"byte_end":145228,"line_start":3195,"line_end":3195,"column_start":12,"column_end":16},"name":"seal","qualname":"<Object>::seal","value":"pub fn seal(&Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Object.seal()` method seals an object, preventing new properties\n from being added to it and marking all existing properties as\n non-configurable.  Values of present properties can still be changed as\n long as they are writable.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3243},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":145658,"byte_end":145674,"line_start":3203,"line_end":3203,"column_start":12,"column_end":28},"name":"set_prototype_of","qualname":"<Object>::set_prototype_of","value":"pub fn set_prototype_of(&Object, &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Object.setPrototypeOf()` method sets the prototype (i.e., the\n internal `[[Prototype]]` property) of a specified object to another\n object or `null`.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3246},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":146112,"byte_end":146128,"line_start":3211,"line_end":3211,"column_start":12,"column_end":28},"name":"to_locale_string","qualname":"<Object>::to_locale_string","value":"pub fn to_locale_string(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toLocaleString()` method returns a string representing the object.\n This method is meant to be overridden by derived objects for\n locale-specific purposes.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3249},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":146425,"byte_end":146434,"line_start":3217,"line_end":3217,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Object>::to_string","value":"pub fn to_string(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toString()` method returns a string representing the object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3252},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":146747,"byte_end":146755,"line_start":3224,"line_end":3224,"column_start":12,"column_end":20},"name":"value_of","qualname":"<Object>::value_of","value":"pub fn value_of(&Self) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `valueOf()` method returns the primitive value of the\n specified object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3255},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":147255,"byte_end":147261,"line_start":3233,"line_end":3233,"column_start":12,"column_end":18},"name":"values","qualname":"<Object>::values","value":"pub fn values(&Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Object.values()` method returns an array of a given object's own\n enumerable property values, in the same order as that provided by a\n `for...in` loop (the difference being that a for-in loop enumerates\n properties in the prototype chain as well).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":134065,"byte_end":134080,"line_start":2993,"line_end":2993,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":147510,"byte_end":147518,"line_start":3242,"line_end":3242,"column_start":12,"column_end":20},"name":"try_from","qualname":"<Object>::try_from","value":"pub fn try_from(&JsValue) -> Option<&Object>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Object` value of this JS value if it's an instance of an\n object.","sig":null,"attributes":[{"value":"/ Returns the `Object` value of this JS value if it's an instance of an","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":147310,"byte_end":147383,"line_start":3237,"line_end":3237,"column_start":5,"column_end":78}},{"value":"/ object.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":147388,"byte_end":147399,"line_start":3238,"line_end":3238,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":147404,"byte_end":147407,"line_start":3239,"line_end":3239,"column_start":5,"column_end":8}},{"value":"/ If this JS value is not an instance of an object then this returns","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":147412,"byte_end":147482,"line_start":3240,"line_end":3240,"column_start":5,"column_end":75}},{"value":"/ `None`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":147487,"byte_end":147498,"line_start":3241,"line_end":3241,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":3344},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":148061,"byte_end":148066,"line_start":3271,"line_end":3271,"column_start":14,"column_end":19},"name":"Proxy","qualname":"::Proxy","value":"Proxy {  }","parent":null,"children":[{"krate":0,"index":3345}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":147933,"byte_end":147948,"line_start":3267,"line_end":3267,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":147933,"byte_end":147948,"line_start":3267,"line_end":3267,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3339},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":148418,"byte_end":148421,"line_start":3279,"line_end":3279,"column_start":12,"column_end":15},"name":"new","qualname":"<Proxy>::new","value":"pub fn new(&JsValue, &Object) -> Proxy","parent":null,"children":[],"decl_id":null,"docs":" The [`Proxy`] object is used to define custom behavior for fundamental\n operations (e.g. property lookup, assignment, enumeration, function\n invocation, etc).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":147933,"byte_end":147948,"line_start":3267,"line_end":3267,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":147933,"byte_end":147948,"line_start":3267,"line_end":3267,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3342},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":148755,"byte_end":148764,"line_start":3286,"line_end":3286,"column_start":12,"column_end":21},"name":"revocable","qualname":"<Proxy>::revocable","value":"pub fn revocable(&JsValue, &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Proxy.revocable()` method is used to create a revocable [`Proxy`]\n object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":147933,"byte_end":147948,"line_start":3267,"line_end":3267,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":147933,"byte_end":147948,"line_start":3267,"line_end":3267,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":3448},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":149248,"byte_end":149258,"line_start":3298,"line_end":3298,"column_start":14,"column_end":24},"name":"RangeError","qualname":"::RangeError","value":"RangeError {  }","parent":null,"children":[{"krate":0,"index":3449}],"decl_id":null,"docs":" The `RangeError` object indicates an error when a value is not in the set\n or range of allowed values.","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":148829,"byte_end":148844,"line_start":3290,"line_end":3290,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":148829,"byte_end":148844,"line_start":3290,"line_end":3290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3446},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":149552,"byte_end":149555,"line_start":3305,"line_end":3305,"column_start":12,"column_end":15},"name":"new","qualname":"<RangeError>::new","value":"pub fn new(&str) -> RangeError","parent":null,"children":[],"decl_id":null,"docs":" The `RangeError` object indicates an error when a value is not in the set\n or range of allowed values.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":148829,"byte_end":148844,"line_start":3290,"line_end":3290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":148829,"byte_end":148844,"line_start":3290,"line_end":3290,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":3559},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150024,"byte_end":150038,"line_start":3317,"line_end":3317,"column_start":14,"column_end":28},"name":"ReferenceError","qualname":"::ReferenceError","value":"ReferenceError {  }","parent":null,"children":[{"krate":0,"index":3560}],"decl_id":null,"docs":" The `ReferenceError` object represents an error when a non-existent\n variable is referenced.","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":149607,"byte_end":149622,"line_start":3309,"line_end":3309,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":149607,"byte_end":149622,"line_start":3309,"line_end":3309,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3557},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150326,"byte_end":150329,"line_start":3324,"line_end":3324,"column_start":12,"column_end":15},"name":"new","qualname":"<ReferenceError>::new","value":"pub fn new(&str) -> ReferenceError","parent":null,"children":[],"decl_id":null,"docs":" The `ReferenceError` object represents an error when a non-existent\n variable is referenced.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":149607,"byte_end":149622,"line_start":3309,"line_end":3309,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":149607,"byte_end":149622,"line_start":3309,"line_end":3309,"column_start":1,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":237},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150400,"byte_end":150407,"line_start":3328,"line_end":3328,"column_start":9,"column_end":16},"name":"Reflect","qualname":"::Reflect","value":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":3572},{"krate":0,"index":3574},{"krate":0,"index":3576},{"krate":0,"index":3578},{"krate":0,"index":3580},{"krate":0,"index":3582},{"krate":0,"index":3584},{"krate":0,"index":3586},{"krate":0,"index":3588},{"krate":0,"index":3590},{"krate":0,"index":3592},{"krate":0,"index":3594},{"krate":0,"index":3596},{"krate":0,"index":3598},{"krate":0,"index":3600},{"krate":0,"index":3602},{"krate":0,"index":3604},{"krate":0,"index":3606},{"krate":0,"index":3608}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150367,"byte_end":150391,"line_start":3327,"line_end":3327,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":3572},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150804,"byte_end":150809,"line_start":3339,"line_end":3339,"column_start":16,"column_end":21},"name":"apply","qualname":"::Reflect::apply","value":"pub fn apply(&Function, &JsValue, &Array) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.apply()` method calls a target function with\n arguments as specified.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150448,"byte_end":150463,"line_start":3332,"line_end":3332,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150448,"byte_end":150463,"line_start":3332,"line_end":3332,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3574},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":151409,"byte_end":151418,"line_start":3351,"line_end":3351,"column_start":16,"column_end":25},"name":"construct","qualname":"::Reflect::construct","value":"pub fn construct(&Function, &Array) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.construct()` method acts like the new operator, but\n as a function.  It is equivalent to calling `new target(...args)`. It\n gives also the added option to specify a different prototype.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150448,"byte_end":150463,"line_start":3332,"line_end":3332,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150448,"byte_end":150463,"line_start":3332,"line_end":3332,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3576},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":151967,"byte_end":151992,"line_start":3359,"line_end":3359,"column_start":16,"column_end":41},"name":"construct_with_new_target","qualname":"::Reflect::construct_with_new_target","value":"pub fn construct_with_new_target(&Function, &Array, &Function)\n-> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.construct()` method acts like the new operator, but\n as a function.  It is equivalent to calling `new target(...args)`. It\n gives also the added option to specify a different prototype.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150448,"byte_end":150463,"line_start":3332,"line_end":3332,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150448,"byte_end":150463,"line_start":3332,"line_end":3332,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3578},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":152509,"byte_end":152524,"line_start":3370,"line_end":3370,"column_start":16,"column_end":31},"name":"define_property","qualname":"::Reflect::define_property","value":"pub fn define_property(&Object, &JsValue, &Object) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.defineProperty()` method is like\n `Object.defineProperty()` but returns a `Boolean`.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150448,"byte_end":150463,"line_start":3332,"line_end":3332,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150448,"byte_end":150463,"line_start":3332,"line_end":3332,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3580},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":153053,"byte_end":153068,"line_start":3381,"line_end":3381,"column_start":16,"column_end":31},"name":"delete_property","qualname":"::Reflect::delete_property","value":"pub fn delete_property(&Object, &JsValue) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.deleteProperty()` method allows to delete\n properties.  It is like the `delete` operator as a function.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150448,"byte_end":150463,"line_start":3332,"line_end":3332,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150448,"byte_end":150463,"line_start":3332,"line_end":3332,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3582},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":153478,"byte_end":153481,"line_start":3388,"line_end":3388,"column_start":16,"column_end":19},"name":"get","qualname":"::Reflect::get","value":"pub fn get(&JsValue, &JsValue) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.get()` method works like getting a property from\n an object (`target[propertyKey]`) as a function.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150448,"byte_end":150463,"line_start":3332,"line_end":3332,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150448,"byte_end":150463,"line_start":3332,"line_end":3332,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3584},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":153743,"byte_end":153750,"line_start":3393,"line_end":3393,"column_start":16,"column_end":23},"name":"get_f64","qualname":"::Reflect::get_f64","value":"pub fn get_f64(&JsValue, f64) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The same as [`get`](fn.get.html)\n except the key is an `f64`, which is slightly faster.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150448,"byte_end":150463,"line_start":3332,"line_end":3332,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150448,"byte_end":150463,"line_start":3332,"line_end":3332,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3586},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":154006,"byte_end":154013,"line_start":3398,"line_end":3398,"column_start":16,"column_end":23},"name":"get_u32","qualname":"::Reflect::get_u32","value":"pub fn get_u32(&JsValue, u32) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The same as [`get`](fn.get.html)\n except the key is a `u32`, which is slightly faster.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150448,"byte_end":150463,"line_start":3332,"line_end":3332,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150448,"byte_end":150463,"line_start":3332,"line_end":3332,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3588},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":154585,"byte_end":154612,"line_start":3406,"line_end":3406,"column_start":16,"column_end":43},"name":"get_own_property_descriptor","qualname":"::Reflect::get_own_property_descriptor","value":"pub fn get_own_property_descriptor(&Object, &JsValue)\n-> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.getOwnPropertyDescriptor()` method is similar to\n `Object.getOwnPropertyDescriptor()`. It returns a property descriptor\n of the given property if it exists on the object, `undefined` otherwise.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150448,"byte_end":150463,"line_start":3332,"line_end":3332,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150448,"byte_end":150463,"line_start":3332,"line_end":3332,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3590},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":155221,"byte_end":155237,"line_start":3418,"line_end":3418,"column_start":16,"column_end":32},"name":"get_prototype_of","qualname":"::Reflect::get_prototype_of","value":"pub fn get_prototype_of(&JsValue) -> Result<Object, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.getPrototypeOf()` method is almost the same\n method as `Object.getPrototypeOf()`. It returns the prototype\n (i.e. the value of the internal `[[Prototype]]` property) of\n the specified object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150448,"byte_end":150463,"line_start":3332,"line_end":3332,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150448,"byte_end":150463,"line_start":3332,"line_end":3332,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3592},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":155593,"byte_end":155596,"line_start":3425,"line_end":3425,"column_start":16,"column_end":19},"name":"has","qualname":"::Reflect::has","value":"pub fn has(&JsValue, &JsValue) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.has()` method works like the in operator as a\n function.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150448,"byte_end":150463,"line_start":3332,"line_end":3332,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150448,"byte_end":150463,"line_start":3332,"line_end":3332,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3594},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":156143,"byte_end":156156,"line_start":3433,"line_end":3433,"column_start":16,"column_end":29},"name":"is_extensible","qualname":"::Reflect::is_extensible","value":"pub fn is_extensible(&Object) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.isExtensible()` method determines if an object is\n extensible (whether it can have new properties added to it). It is\n similar to `Object.isExtensible()`, but with some differences.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150448,"byte_end":150463,"line_start":3332,"line_end":3332,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150448,"byte_end":150463,"line_start":3332,"line_end":3332,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3596},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":156553,"byte_end":156561,"line_start":3440,"line_end":3440,"column_start":16,"column_end":24},"name":"own_keys","qualname":"::Reflect::own_keys","value":"pub fn own_keys(&JsValue) -> Result<Array, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.ownKeys()` method returns an array of the\n target object's own property keys.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150448,"byte_end":150463,"line_start":3332,"line_end":3332,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150448,"byte_end":150463,"line_start":3332,"line_end":3332,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3598},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":157137,"byte_end":157155,"line_start":3449,"line_end":3449,"column_start":16,"column_end":34},"name":"prevent_extensions","qualname":"::Reflect::prevent_extensions","value":"pub fn prevent_extensions(&Object) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.preventExtensions()` method prevents new\n properties from ever being added to an object (i.e. prevents\n future extensions to the object). It is similar to\n `Object.preventExtensions()`, but with some differences.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150448,"byte_end":150463,"line_start":3332,"line_end":3332,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150448,"byte_end":150463,"line_start":3332,"line_end":3332,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3600},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":157510,"byte_end":157513,"line_start":3456,"line_end":3456,"column_start":16,"column_end":19},"name":"set","qualname":"::Reflect::set","value":"pub fn set(&JsValue, &JsValue, &JsValue) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.set()` method works like setting a\n property on an object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150448,"byte_end":150463,"line_start":3332,"line_end":3332,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150448,"byte_end":150463,"line_start":3332,"line_end":3332,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3602},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":157845,"byte_end":157852,"line_start":3465,"line_end":3465,"column_start":16,"column_end":23},"name":"set_f64","qualname":"::Reflect::set_f64","value":"pub fn set_f64(&JsValue, f64, &JsValue) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The same as [`set`](fn.set.html)\n except the key is an `f64`, which is slightly faster.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150448,"byte_end":150463,"line_start":3332,"line_end":3332,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150448,"byte_end":150463,"line_start":3332,"line_end":3332,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3604},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":158178,"byte_end":158185,"line_start":3474,"line_end":3474,"column_start":16,"column_end":23},"name":"set_u32","qualname":"::Reflect::set_u32","value":"pub fn set_u32(&JsValue, u32, &JsValue) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The same as [`set`](fn.set.html)\n except the key is a `u32`, which is slightly faster.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150448,"byte_end":150463,"line_start":3332,"line_end":3332,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150448,"byte_end":150463,"line_start":3332,"line_end":3332,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3606},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":158639,"byte_end":158656,"line_start":3485,"line_end":3485,"column_start":16,"column_end":33},"name":"set_with_receiver","qualname":"::Reflect::set_with_receiver","value":"pub fn set_with_receiver(&JsValue, &JsValue, &JsValue, &JsValue)\n-> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.set()` method works like setting a\n property on an object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150448,"byte_end":150463,"line_start":3332,"line_end":3332,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150448,"byte_end":150463,"line_start":3332,"line_end":3332,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3608},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159329,"byte_end":159345,"line_start":3499,"line_end":3499,"column_start":16,"column_end":32},"name":"set_prototype_of","qualname":"::Reflect::set_prototype_of","value":"pub fn set_prototype_of(&Object, &JsValue) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.setPrototypeOf()` method is the same\n method as `Object.setPrototypeOf()`. It sets the prototype\n (i.e., the internal `[[Prototype]]` property) of a specified\n object to another object or to null.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150448,"byte_end":150463,"line_start":3332,"line_end":3332,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":150448,"byte_end":150463,"line_start":3332,"line_end":3332,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3779},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159580,"byte_end":159586,"line_start":3508,"line_end":3508,"column_start":14,"column_end":20},"name":"RegExp","qualname":"::RegExp","value":"RegExp {  }","parent":null,"children":[{"krate":0,"index":3780}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3696},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159880,"byte_end":159884,"line_start":3515,"line_end":3515,"column_start":12,"column_end":16},"name":"exec","qualname":"<RegExp>::exec","value":"pub fn exec(&Self, &str) -> Option<Array>","parent":null,"children":[],"decl_id":null,"docs":" The `exec()` method executes a search for a match in a specified\n string. Returns a result array, or null.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3699},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":160227,"byte_end":160232,"line_start":3522,"line_end":3522,"column_start":12,"column_end":17},"name":"flags","qualname":"<RegExp>::flags","value":"pub fn flags(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The flags property returns a string consisting of the flags of\n the current regular expression object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3702},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":160637,"byte_end":160643,"line_start":3530,"line_end":3530,"column_start":12,"column_end":18},"name":"global","qualname":"<RegExp>::global","value":"pub fn global(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The global property indicates whether or not the \"g\" flag is\n used with the regular expression. global is a read-only\n property of an individual regular expression instance.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3705},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":161078,"byte_end":161089,"line_start":3538,"line_end":3538,"column_start":12,"column_end":23},"name":"ignore_case","qualname":"<RegExp>::ignore_case","value":"pub fn ignore_case(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The ignoreCase property indicates whether or not the \"i\" flag\n is used with the regular expression. ignoreCase is a read-only\n property of an individual regular expression instance.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3708},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":161533,"byte_end":161538,"line_start":3547,"line_end":3547,"column_start":12,"column_end":17},"name":"input","qualname":"<RegExp>::input","value":"pub fn input() -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The non-standard input property is a static property of\n regular expressions that contains the string against which a\n regular expression is matched. RegExp.$_ is an alias for this\n property.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3711},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":161915,"byte_end":161925,"line_start":3554,"line_end":3554,"column_start":12,"column_end":22},"name":"last_index","qualname":"<RegExp>::last_index","value":"pub fn last_index(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The lastIndex is a read/write integer property of regular expression\n instances that specifies the index at which to start the next match.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3714},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":162310,"byte_end":162324,"line_start":3561,"line_end":3561,"column_start":12,"column_end":26},"name":"set_last_index","qualname":"<RegExp>::set_last_index","value":"pub fn set_last_index(&Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" The lastIndex is a read/write integer property of regular expression\n instances that specifies the index at which to start the next match.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3717},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":162780,"byte_end":162790,"line_start":3569,"line_end":3569,"column_start":12,"column_end":22},"name":"last_match","qualname":"<RegExp>::last_match","value":"pub fn last_match() -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The non-standard lastMatch property is a static and read-only\n property of regular expressions that contains the last matched\n characters. `RegExp.$&` is an alias for this property.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3720},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":163260,"byte_end":163270,"line_start":3578,"line_end":3578,"column_start":12,"column_end":22},"name":"last_paren","qualname":"<RegExp>::last_paren","value":"pub fn last_paren() -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The non-standard lastParen property is a static and read-only\n property of regular expressions that contains the last\n parenthesized substring match, if any. `RegExp.$+` is an alias\n for this property.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3723},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":163745,"byte_end":163757,"line_start":3587,"line_end":3587,"column_start":12,"column_end":24},"name":"left_context","qualname":"<RegExp>::left_context","value":"pub fn left_context() -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The non-standard leftContext property is a static and\n read-only property of regular expressions that contains the\n substring preceding the most recent match. `RegExp.$`` is an\n alias for this property.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3726},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":164158,"byte_end":164167,"line_start":3595,"line_end":3595,"column_start":12,"column_end":21},"name":"multiline","qualname":"<RegExp>::multiline","value":"pub fn multiline(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The multiline property indicates whether or not the \"m\" flag\n is used with the regular expression. multiline is a read-only\n property of an individual regular expression instance.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3729},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":164594,"byte_end":164596,"line_start":3603,"line_end":3603,"column_start":12,"column_end":14},"name":"n1","qualname":"<RegExp>::n1","value":"pub fn n1() -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The non-standard $1, $2, $3, $4, $5, $6, $7, $8, $9 properties\n are static and read-only properties of regular expressions\n that contain parenthesized substring matches.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3732},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":164694,"byte_end":164696,"line_start":3605,"line_end":3605,"column_start":12,"column_end":14},"name":"n2","qualname":"<RegExp>::n2","value":"pub fn n2() -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3735},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":164794,"byte_end":164796,"line_start":3607,"line_end":3607,"column_start":12,"column_end":14},"name":"n3","qualname":"<RegExp>::n3","value":"pub fn n3() -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3738},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":164894,"byte_end":164896,"line_start":3609,"line_end":3609,"column_start":12,"column_end":14},"name":"n4","qualname":"<RegExp>::n4","value":"pub fn n4() -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3741},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":164994,"byte_end":164996,"line_start":3611,"line_end":3611,"column_start":12,"column_end":14},"name":"n5","qualname":"<RegExp>::n5","value":"pub fn n5() -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3744},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":165094,"byte_end":165096,"line_start":3613,"line_end":3613,"column_start":12,"column_end":14},"name":"n6","qualname":"<RegExp>::n6","value":"pub fn n6() -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3747},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":165194,"byte_end":165196,"line_start":3615,"line_end":3615,"column_start":12,"column_end":14},"name":"n7","qualname":"<RegExp>::n7","value":"pub fn n7() -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3750},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":165294,"byte_end":165296,"line_start":3617,"line_end":3617,"column_start":12,"column_end":14},"name":"n8","qualname":"<RegExp>::n8","value":"pub fn n8() -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3753},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":165394,"byte_end":165396,"line_start":3619,"line_end":3619,"column_start":12,"column_end":14},"name":"n9","qualname":"<RegExp>::n9","value":"pub fn n9() -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3756},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":165685,"byte_end":165688,"line_start":3625,"line_end":3625,"column_start":12,"column_end":15},"name":"new","qualname":"<RegExp>::new","value":"pub fn new(&str, &str) -> RegExp","parent":null,"children":[],"decl_id":null,"docs":" The `RegExp` constructor creates a regular expression object for matching text with a pattern.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3759},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":165772,"byte_end":165782,"line_start":3627,"line_end":3627,"column_start":12,"column_end":22},"name":"new_regexp","qualname":"<RegExp>::new_regexp","value":"pub fn new_regexp(&RegExp, &str) -> RegExp","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3762},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":166287,"byte_end":166300,"line_start":3636,"line_end":3636,"column_start":12,"column_end":25},"name":"right_context","qualname":"<RegExp>::right_context","value":"pub fn right_context() -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The non-standard rightContext property is a static and\n read-only property of regular expressions that contains the\n substring following the most recent match. `RegExp.$'` is an\n alias for this property.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3765},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":166682,"byte_end":166688,"line_start":3644,"line_end":3644,"column_start":12,"column_end":18},"name":"source","qualname":"<RegExp>::source","value":"pub fn source(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The source property returns a String containing the source\n text of the regexp object, and it doesn't contain the two\n forward slashes on both sides and any flags.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3768},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":167183,"byte_end":167189,"line_start":3654,"line_end":3654,"column_start":12,"column_end":18},"name":"sticky","qualname":"<RegExp>::sticky","value":"pub fn sticky(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The sticky property reflects whether or not the search is\n sticky (searches in strings only from the index indicated by\n the lastIndex property of this regular expression). sticky is\n a read-only property of an individual regular expression\n object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3771},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":167534,"byte_end":167538,"line_start":3662,"line_end":3662,"column_start":12,"column_end":16},"name":"test","qualname":"<RegExp>::test","value":"pub fn test(&Self, &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `test()` method executes a search for a match between a\n regular expression and a specified string. Returns true or\n false.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3774},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":167863,"byte_end":167872,"line_start":3669,"line_end":3669,"column_start":12,"column_end":21},"name":"to_string","qualname":"<RegExp>::to_string","value":"pub fn to_string(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toString()` method returns a string representing the\n regular expression.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3777},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":168278,"byte_end":168285,"line_start":3677,"line_end":3677,"column_start":12,"column_end":19},"name":"unicode","qualname":"<RegExp>::unicode","value":"pub fn unicode(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The unicode property indicates whether or not the \"u\" flag is\n used with a regular expression. unicode is a read-only\n property of an individual regular expression instance.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":159429,"byte_end":159444,"line_start":3504,"line_end":3504,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":3898},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":168473,"byte_end":168476,"line_start":3685,"line_end":3685,"column_start":14,"column_end":17},"name":"Set","qualname":"::Set","value":"Set {  }","parent":null,"children":[{"krate":0,"index":3899}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":168320,"byte_end":168335,"line_start":3681,"line_end":3681,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":168320,"byte_end":168335,"line_start":3681,"line_end":3681,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3878},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":168756,"byte_end":168759,"line_start":3692,"line_end":3692,"column_start":12,"column_end":15},"name":"add","qualname":"<Set>::add","value":"pub fn add(&Self, &JsValue) -> Set","parent":null,"children":[],"decl_id":null,"docs":" The `add()` method appends a new element with a specified value to the\n end of a [`Set`] object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":168320,"byte_end":168335,"line_start":3681,"line_end":3681,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":168320,"byte_end":168335,"line_start":3681,"line_end":3681,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3881},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":169038,"byte_end":169043,"line_start":3698,"line_end":3698,"column_start":12,"column_end":17},"name":"clear","qualname":"<Set>::clear","value":"pub fn clear(&Self)","parent":null,"children":[],"decl_id":null,"docs":" The `clear()` method removes all elements from a [`Set`] object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":168320,"byte_end":168335,"line_start":3681,"line_end":3681,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":168320,"byte_end":168335,"line_start":3681,"line_end":3681,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3884},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":169317,"byte_end":169323,"line_start":3705,"line_end":3705,"column_start":12,"column_end":18},"name":"delete","qualname":"<Set>::delete","value":"pub fn delete(&Self, &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `delete()` method removes the specified element from a [`Set`]\n object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":168320,"byte_end":168335,"line_start":3681,"line_end":3681,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":168320,"byte_end":168335,"line_start":3681,"line_end":3681,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3887},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":169678,"byte_end":169686,"line_start":3712,"line_end":3712,"column_start":12,"column_end":20},"name":"for_each","qualname":"<Set>::for_each","value":"pub fn for_each(&Self, &mut dyn FnMut(JsValue, JsValue, Set) -> ())","parent":null,"children":[],"decl_id":null,"docs":" The `forEach()` method executes a provided function once for each value\n in the Set object, in insertion order.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":168320,"byte_end":168335,"line_start":3681,"line_end":3681,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":168320,"byte_end":168335,"line_start":3681,"line_end":3681,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3890},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":170058,"byte_end":170061,"line_start":3719,"line_end":3719,"column_start":12,"column_end":15},"name":"has","qualname":"<Set>::has","value":"pub fn has(&Self, &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `has()` method returns a boolean indicating whether an element with\n the specified value exists in a [`Set`] object or not.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":168320,"byte_end":168335,"line_start":3681,"line_end":3681,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":168320,"byte_end":168335,"line_start":3681,"line_end":3681,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3893},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":170391,"byte_end":170394,"line_start":3726,"line_end":3726,"column_start":12,"column_end":15},"name":"new","qualname":"<Set>::new","value":"pub fn new(&JsValue) -> Set","parent":null,"children":[],"decl_id":null,"docs":" The [`Set`] object lets you store unique values of any type, whether\n primitive values or object references.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":168320,"byte_end":168335,"line_start":3681,"line_end":3681,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":168320,"byte_end":168335,"line_start":3681,"line_end":3681,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3896},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":170698,"byte_end":170702,"line_start":3733,"line_end":3733,"column_start":12,"column_end":16},"name":"size","qualname":"<Set>::size","value":"pub fn size(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The size accessor property returns the number of elements in a [`Set`]\n object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":168320,"byte_end":168335,"line_start":3681,"line_end":3681,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":168320,"byte_end":168335,"line_start":3681,"line_end":3681,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3912},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":171435,"byte_end":171442,"line_start":3753,"line_end":3753,"column_start":12,"column_end":19},"name":"entries","qualname":"<Set>::entries","value":"pub fn entries(&Self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The `entries()` method returns a new Iterator object that contains an\n array of [value, value] for each element in the Set object, in insertion\n order. For Set objects there is no key like in Map objects. However, to\n keep the API similar to the Map object, each entry has the same value\n for its key and value here, so that an array [value, value] is returned.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":170839,"byte_end":170854,"line_start":3743,"line_end":3743,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":170839,"byte_end":170854,"line_start":3743,"line_end":3743,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3915},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":171807,"byte_end":171811,"line_start":3761,"line_end":3761,"column_start":12,"column_end":16},"name":"keys","qualname":"<Set>::keys","value":"pub fn keys(&Self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The `keys()` method is an alias for this method (for similarity with\n Map objects); it behaves exactly the same and returns values\n of Set elements.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":170839,"byte_end":170854,"line_start":3743,"line_end":3743,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":170839,"byte_end":170854,"line_start":3743,"line_end":3743,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3918},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":172153,"byte_end":172159,"line_start":3768,"line_end":3768,"column_start":12,"column_end":18},"name":"values","qualname":"<Set>::values","value":"pub fn values(&Self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The `values()` method returns a new Iterator object that contains the\n values for each element in the Set object in insertion order.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":170839,"byte_end":170854,"line_start":3743,"line_end":3743,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":170839,"byte_end":170854,"line_start":3743,"line_end":3743,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":4018},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":172686,"byte_end":172697,"line_start":3781,"line_end":3781,"column_start":14,"column_end":25},"name":"SyntaxError","qualname":"::SyntaxError","value":"SyntaxError {  }","parent":null,"children":[{"krate":0,"index":4019}],"decl_id":null,"docs":" A `SyntaxError` is thrown when the JavaScript engine encounters tokens or\n token order that does not conform to the syntax of the language when\n parsing code.","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":172202,"byte_end":172217,"line_start":3772,"line_end":3772,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":172202,"byte_end":172217,"line_start":3772,"line_end":3772,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4016},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":173055,"byte_end":173058,"line_start":3789,"line_end":3789,"column_start":12,"column_end":15},"name":"new","qualname":"<SyntaxError>::new","value":"pub fn new(&str) -> SyntaxError","parent":null,"children":[],"decl_id":null,"docs":" A `SyntaxError` is thrown when the JavaScript engine encounters tokens or\n token order that does not conform to the syntax of the language when\n parsing code.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":172202,"byte_end":172217,"line_start":3772,"line_end":3772,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":172202,"byte_end":172217,"line_start":3772,"line_end":3772,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":4129},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":173506,"byte_end":173515,"line_start":3801,"line_end":3801,"column_start":14,"column_end":23},"name":"TypeError","qualname":"::TypeError","value":"TypeError {  }","parent":null,"children":[{"krate":0,"index":4130}],"decl_id":null,"docs":" The `TypeError` object represents an error when a value is not of the\n expected type.","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":173106,"byte_end":173121,"line_start":3793,"line_end":3793,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":173106,"byte_end":173121,"line_start":3793,"line_end":3793,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4127},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":173791,"byte_end":173794,"line_start":3808,"line_end":3808,"column_start":12,"column_end":15},"name":"new","qualname":"<TypeError>::new","value":"pub fn new(&str) -> TypeError","parent":null,"children":[],"decl_id":null,"docs":" The `TypeError` object represents an error when a value is not of the\n expected type.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":173106,"byte_end":173121,"line_start":3793,"line_end":3793,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":173106,"byte_end":173121,"line_start":3793,"line_end":3793,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":4240},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":174275,"byte_end":174283,"line_start":3820,"line_end":3820,"column_start":14,"column_end":22},"name":"UriError","qualname":"::UriError","value":"UriError {  }","parent":null,"children":[{"krate":0,"index":4241}],"decl_id":null,"docs":" The `URIError` object represents an error when a global URI handling\n function was used in a wrong way.","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":173839,"byte_end":173854,"line_start":3812,"line_end":3812,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":173839,"byte_end":173854,"line_start":3812,"line_end":3812,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4238},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":174599,"byte_end":174602,"line_start":3827,"line_end":3827,"column_start":12,"column_end":15},"name":"new","qualname":"<UriError>::new","value":"pub fn new(&str) -> UriError","parent":null,"children":[],"decl_id":null,"docs":" The `URIError` object represents an error when a global URI handling\n function was used in a wrong way.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":173839,"byte_end":173854,"line_start":3812,"line_end":3812,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":173839,"byte_end":173854,"line_start":3812,"line_end":3812,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":4353},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":174810,"byte_end":174817,"line_start":3835,"line_end":3835,"column_start":14,"column_end":21},"name":"WeakMap","qualname":"::WeakMap","value":"WeakMap {  }","parent":null,"children":[{"krate":0,"index":4354}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":174645,"byte_end":174660,"line_start":3831,"line_end":3831,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":174645,"byte_end":174660,"line_start":3831,"line_end":3831,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4339},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":175179,"byte_end":175182,"line_start":3843,"line_end":3843,"column_start":12,"column_end":15},"name":"new","qualname":"<WeakMap>::new","value":"pub fn new() -> WeakMap","parent":null,"children":[],"decl_id":null,"docs":" The [`WeakMap`] object is a collection of key/value pairs in which the\n keys are weakly referenced.  The keys must be objects and the values can\n be arbitrary values.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":174645,"byte_end":174660,"line_start":3831,"line_end":3831,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":174645,"byte_end":174660,"line_start":3831,"line_end":3831,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4342},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":175510,"byte_end":175513,"line_start":3850,"line_end":3850,"column_start":12,"column_end":15},"name":"set","qualname":"<WeakMap>::set","value":"pub fn set(&Self, &Object, &JsValue) -> WeakMap","parent":null,"children":[],"decl_id":null,"docs":" The `set()` method sets the value for the key in the [`WeakMap`] object.\n Returns the [`WeakMap`] object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":174645,"byte_end":174660,"line_start":3831,"line_end":3831,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":174645,"byte_end":174660,"line_start":3831,"line_end":3831,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4345},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":175840,"byte_end":175843,"line_start":3857,"line_end":3857,"column_start":12,"column_end":15},"name":"get","qualname":"<WeakMap>::get","value":"pub fn get(&Self, &Object) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `get()` method returns a specified by key element\n from a [`WeakMap`] object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":174645,"byte_end":174660,"line_start":3831,"line_end":3831,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":174645,"byte_end":174660,"line_start":3831,"line_end":3831,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4348},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":176203,"byte_end":176206,"line_start":3864,"line_end":3864,"column_start":12,"column_end":15},"name":"has","qualname":"<WeakMap>::has","value":"pub fn has(&Self, &Object) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `has()` method returns a boolean indicating whether an element with\n the specified key exists in the [`WeakMap`] object or not.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":174645,"byte_end":174660,"line_start":3831,"line_end":3831,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":174645,"byte_end":174660,"line_start":3831,"line_end":3831,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4351},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":176514,"byte_end":176520,"line_start":3871,"line_end":3871,"column_start":12,"column_end":18},"name":"delete","qualname":"<WeakMap>::delete","value":"pub fn delete(&Self, &Object) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `delete()` method removes the specified element from a [`WeakMap`]\n object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":174645,"byte_end":174660,"line_start":3831,"line_end":3831,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":174645,"byte_end":174660,"line_start":3831,"line_end":3831,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":4463},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":176817,"byte_end":176824,"line_start":3885,"line_end":3885,"column_start":14,"column_end":21},"name":"WeakSet","qualname":"::WeakSet","value":"WeakSet {  }","parent":null,"children":[{"krate":0,"index":4464}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":176657,"byte_end":176672,"line_start":3881,"line_end":3881,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":176657,"byte_end":176672,"line_start":3881,"line_end":3881,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4452},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":177078,"byte_end":177081,"line_start":3891,"line_end":3891,"column_start":12,"column_end":15},"name":"new","qualname":"<WeakSet>::new","value":"pub fn new() -> WeakSet","parent":null,"children":[],"decl_id":null,"docs":" The `WeakSet` object lets you store weakly held objects in a collection.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":176657,"byte_end":176672,"line_start":3881,"line_end":3881,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":176657,"byte_end":176672,"line_start":3881,"line_end":3881,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4455},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":177376,"byte_end":177379,"line_start":3898,"line_end":3898,"column_start":12,"column_end":15},"name":"has","qualname":"<WeakSet>::has","value":"pub fn has(&Self, &Object) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `has()` method returns a boolean indicating whether an object exists\n in a WeakSet or not.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":176657,"byte_end":176672,"line_start":3881,"line_end":3881,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":176657,"byte_end":176672,"line_start":3881,"line_end":3881,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4458},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":177671,"byte_end":177674,"line_start":3904,"line_end":3904,"column_start":12,"column_end":15},"name":"add","qualname":"<WeakSet>::add","value":"pub fn add(&Self, &Object) -> WeakSet","parent":null,"children":[],"decl_id":null,"docs":" The `add()` method appends a new object to the end of a WeakSet object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":176657,"byte_end":176672,"line_start":3881,"line_end":3881,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":176657,"byte_end":176672,"line_start":3881,"line_end":3881,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4461},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":177983,"byte_end":177989,"line_start":3911,"line_end":3911,"column_start":12,"column_end":18},"name":"delete","qualname":"<WeakSet>::delete","value":"pub fn delete(&Self, &Object) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `delete()` method removes the specified element from a WeakSet\n object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":176657,"byte_end":176672,"line_start":3881,"line_end":3881,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":176657,"byte_end":176672,"line_start":3881,"line_end":3881,"column_start":1,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":245},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":178150,"byte_end":178161,"line_start":3921,"line_end":3921,"column_start":9,"column_end":20},"name":"WebAssembly","qualname":"::WebAssembly","value":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":4476},{"krate":0,"index":4478},{"krate":0,"index":4480},{"krate":0,"index":4482},{"krate":0,"index":4484},{"krate":0,"index":4574},{"krate":0,"index":4576},{"krate":0,"index":4578},{"krate":0,"index":4580},{"krate":0,"index":4581},{"krate":0,"index":4584},{"krate":0,"index":4585},{"krate":0,"index":4486},{"krate":0,"index":4558},{"krate":0,"index":4561},{"krate":0,"index":4566},{"krate":0,"index":4571},{"krate":0,"index":4678},{"krate":0,"index":4680},{"krate":0,"index":4682},{"krate":0,"index":4684},{"krate":0,"index":4685},{"krate":0,"index":4688},{"krate":0,"index":4689},{"krate":0,"index":4587},{"krate":0,"index":4659},{"krate":0,"index":4662},{"krate":0,"index":4667},{"krate":0,"index":4672},{"krate":0,"index":4675},{"krate":0,"index":4779},{"krate":0,"index":4781},{"krate":0,"index":4783},{"krate":0,"index":4785},{"krate":0,"index":4786},{"krate":0,"index":4789},{"krate":0,"index":4790},{"krate":0,"index":4691},{"krate":0,"index":4763},{"krate":0,"index":4766},{"krate":0,"index":4771},{"krate":0,"index":4776},{"krate":0,"index":4880},{"krate":0,"index":4882},{"krate":0,"index":4884},{"krate":0,"index":4886},{"krate":0,"index":4887},{"krate":0,"index":4890},{"krate":0,"index":4891},{"krate":0,"index":4792},{"krate":0,"index":4864},{"krate":0,"index":4867},{"krate":0,"index":4872},{"krate":0,"index":4877},{"krate":0,"index":4990},{"krate":0,"index":4992},{"krate":0,"index":4994},{"krate":0,"index":4996},{"krate":0,"index":4997},{"krate":0,"index":5000},{"krate":0,"index":5001},{"krate":0,"index":4893},{"krate":0,"index":4965},{"krate":0,"index":4968},{"krate":0,"index":4973},{"krate":0,"index":4978},{"krate":0,"index":4981},{"krate":0,"index":4984},{"krate":0,"index":4987},{"krate":0,"index":5103},{"krate":0,"index":5105},{"krate":0,"index":5107},{"krate":0,"index":5109},{"krate":0,"index":5110},{"krate":0,"index":5113},{"krate":0,"index":5114},{"krate":0,"index":5003},{"krate":0,"index":5075},{"krate":0,"index":5078},{"krate":0,"index":5083},{"krate":0,"index":5088},{"krate":0,"index":5091},{"krate":0,"index":5094},{"krate":0,"index":5097},{"krate":0,"index":5100},{"krate":0,"index":5210},{"krate":0,"index":5212},{"krate":0,"index":5214},{"krate":0,"index":5216},{"krate":0,"index":5217},{"krate":0,"index":5220},{"krate":0,"index":5221},{"krate":0,"index":5116},{"krate":0,"index":5188},{"krate":0,"index":5191},{"krate":0,"index":5196},{"krate":0,"index":5201},{"krate":0,"index":5204},{"krate":0,"index":5207},{"krate":0,"index":5317},{"krate":0,"index":5319},{"krate":0,"index":5321},{"krate":0,"index":5323},{"krate":0,"index":5324},{"krate":0,"index":5327},{"krate":0,"index":5328},{"krate":0,"index":5223},{"krate":0,"index":5295},{"krate":0,"index":5298},{"krate":0,"index":5303},{"krate":0,"index":5308},{"krate":0,"index":5311},{"krate":0,"index":5314}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":178117,"byte_end":178141,"line_start":3920,"line_end":3920,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":4476},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":178765,"byte_end":178772,"line_start":3934,"line_end":3934,"column_start":16,"column_end":23},"name":"compile","qualname":"::WebAssembly::compile","value":"pub fn compile(&JsValue) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.compile()` function compiles a `WebAssembly.Module`\n from WebAssembly binary code.  This function is useful if it is\n necessary to a compile a module before it can be instantiated\n (otherwise, the `WebAssembly.instantiate()` function should be used).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":178206,"byte_end":178221,"line_start":3925,"line_end":3925,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":178206,"byte_end":178221,"line_start":3925,"line_end":3925,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":4478},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":179172,"byte_end":179190,"line_start":3941,"line_end":3941,"column_start":16,"column_end":34},"name":"instantiate_buffer","qualname":"::WebAssembly::instantiate_buffer","value":"pub fn instantiate_buffer(&[u8], &Object) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.instantiate()` function allows you to compile and\n instantiate WebAssembly code.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":178206,"byte_end":178221,"line_start":3925,"line_end":3925,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":178206,"byte_end":178221,"line_start":3925,"line_end":3925,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":4480},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":179598,"byte_end":179616,"line_start":3948,"line_end":3948,"column_start":16,"column_end":34},"name":"instantiate_module","qualname":"::WebAssembly::instantiate_module","value":"pub fn instantiate_module(&Module, &Object) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.instantiate()` function allows you to compile and\n instantiate WebAssembly code.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":178206,"byte_end":178221,"line_start":3925,"line_end":3925,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":178206,"byte_end":178221,"line_start":3925,"line_end":3925,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":4482},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":180173,"byte_end":180194,"line_start":3957,"line_end":3957,"column_start":16,"column_end":37},"name":"instantiate_streaming","qualname":"::WebAssembly::instantiate_streaming","value":"pub fn instantiate_streaming(&Promise, &Object) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.instantiateStreaming()` function compiles and\n instantiates a WebAssembly module directly from a streamed\n underlying source. This is the most efficient, optimized way to load\n wasm code.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":178206,"byte_end":178221,"line_start":3925,"line_end":3925,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":178206,"byte_end":178221,"line_start":3925,"line_end":3925,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":4484},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":180679,"byte_end":180687,"line_start":3965,"line_end":3965,"column_start":16,"column_end":24},"name":"validate","qualname":"::WebAssembly::validate","value":"pub fn validate(&JsValue) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.validate()` function validates a given typed\n array of WebAssembly binary code, returning whether the bytes\n form a valid wasm module (`true`) or not (`false`).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":178206,"byte_end":178221,"line_start":3925,"line_end":3925,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":178206,"byte_end":178221,"line_start":3925,"line_end":3925,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4574},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":181343,"byte_end":181355,"line_start":3978,"line_end":3978,"column_start":18,"column_end":30},"name":"CompileError","qualname":"::WebAssembly::CompileError","value":"CompileError {  }","parent":null,"children":[{"krate":0,"index":4575}],"decl_id":null,"docs":" The `WebAssembly.CompileError()` constructor creates a new\n WebAssembly `CompileError` object, which indicates an error during\n WebAssembly decoding or validation.","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":180782,"byte_end":180797,"line_start":3969,"line_end":3969,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":180782,"byte_end":180797,"line_start":3969,"line_end":3969,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4572},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":181787,"byte_end":181790,"line_start":3986,"line_end":3986,"column_start":16,"column_end":19},"name":"new","qualname":"<CompileError>::new","value":"pub fn new(&str) -> CompileError","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.CompileError()` constructor creates a new\n WebAssembly `CompileError` object, which indicates an error during\n WebAssembly decoding or validation.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":180782,"byte_end":180797,"line_start":3969,"line_end":3969,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":180782,"byte_end":180797,"line_start":3969,"line_end":3969,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4678},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":182482,"byte_end":182490,"line_start":4000,"line_end":4000,"column_start":18,"column_end":26},"name":"Instance","qualname":"::WebAssembly::Instance","value":"Instance {  }","parent":null,"children":[{"krate":0,"index":4679}],"decl_id":null,"docs":" A `WebAssembly.Instance` object is a stateful, executable instance\n of a `WebAssembly.Module`. Instance objects contain all the exported\n WebAssembly functions that allow calling into WebAssembly code from\n JavaScript.","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":181862,"byte_end":181877,"line_start":3990,"line_end":3990,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":181862,"byte_end":181877,"line_start":3990,"line_end":3990,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4673},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":183026,"byte_end":183029,"line_start":4009,"line_end":4009,"column_start":16,"column_end":19},"name":"new","qualname":"<Instance>::new","value":"pub fn new(&Module, &Object) -> Result<Instance, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.Instance()` constructor function can be called to\n synchronously instantiate a given `WebAssembly.Module`\n object. However, the primary way to get an `Instance` is through the\n asynchronous `WebAssembly.instantiateStreaming()` function.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":181862,"byte_end":181877,"line_start":3990,"line_end":3990,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":181862,"byte_end":181877,"line_start":3990,"line_end":3990,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4676},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":183623,"byte_end":183630,"line_start":4018,"line_end":4018,"column_start":16,"column_end":23},"name":"exports","qualname":"<Instance>::exports","value":"pub fn exports(&Self) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `exports` readonly property of the `WebAssembly.Instance` object\n prototype returns an object containing as its members all the\n functions exported from the WebAssembly module instance, to allow\n them to be accessed and used by JavaScript.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":181862,"byte_end":181877,"line_start":3990,"line_end":3990,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":181862,"byte_end":181877,"line_start":3990,"line_end":3990,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4779},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":184272,"byte_end":184281,"line_start":4031,"line_end":4031,"column_start":18,"column_end":27},"name":"LinkError","qualname":"::WebAssembly::LinkError","value":"LinkError {  }","parent":null,"children":[{"krate":0,"index":4780}],"decl_id":null,"docs":" The `WebAssembly.LinkError()` constructor creates a new WebAssembly\n LinkError object, which indicates an error during module\n instantiation (besides traps from the start function).","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":183699,"byte_end":183714,"line_start":4022,"line_end":4022,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":183699,"byte_end":183714,"line_start":4022,"line_end":4022,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4777},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":184728,"byte_end":184731,"line_start":4039,"line_end":4039,"column_start":16,"column_end":19},"name":"new","qualname":"<LinkError>::new","value":"pub fn new(&str) -> LinkError","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.LinkError()` constructor creates a new WebAssembly\n LinkError object, which indicates an error during module\n instantiation (besides traps from the start function).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":183699,"byte_end":183714,"line_start":4022,"line_end":4022,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":183699,"byte_end":183714,"line_start":4022,"line_end":4022,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4880},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":185363,"byte_end":185375,"line_start":4052,"line_end":4052,"column_start":18,"column_end":30},"name":"RuntimeError","qualname":"::WebAssembly::RuntimeError","value":"RuntimeError {  }","parent":null,"children":[{"krate":0,"index":4881}],"decl_id":null,"docs":" The `WebAssembly.RuntimeError()` constructor creates a new WebAssembly\n `RuntimeError` object — the type that is thrown whenever WebAssembly\n specifies a trap.","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":184804,"byte_end":184819,"line_start":4043,"line_end":4043,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":184804,"byte_end":184819,"line_start":4043,"line_end":4043,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4878},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":185805,"byte_end":185808,"line_start":4060,"line_end":4060,"column_start":16,"column_end":19},"name":"new","qualname":"<RuntimeError>::new","value":"pub fn new(&str) -> RuntimeError","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.RuntimeError()` constructor creates a new WebAssembly\n `RuntimeError` object — the type that is thrown whenever WebAssembly\n specifies a trap.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":184804,"byte_end":184819,"line_start":4043,"line_end":4043,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":184804,"byte_end":184819,"line_start":4043,"line_end":4043,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4990},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":186455,"byte_end":186461,"line_start":4073,"line_end":4073,"column_start":18,"column_end":24},"name":"Module","qualname":"::WebAssembly::Module","value":"Module {  }","parent":null,"children":[{"krate":0,"index":4991}],"decl_id":null,"docs":" A `WebAssembly.Module` object contains stateless WebAssembly code\n that has already been compiled by the browser and can be\n efficiently shared with Workers, and instantiated multiple times.","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":185878,"byte_end":185893,"line_start":4064,"line_end":4064,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":185878,"byte_end":185893,"line_start":4064,"line_end":4064,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4979},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":186921,"byte_end":186924,"line_start":4081,"line_end":4081,"column_start":16,"column_end":19},"name":"new","qualname":"<Module>::new","value":"pub fn new(&JsValue) -> Result<Module, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" A `WebAssembly.Module` object contains stateless WebAssembly code\n that has already been compiled by the browser and can be\n efficiently shared with Workers, and instantiated multiple times.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":185878,"byte_end":185893,"line_start":4064,"line_end":4064,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":185878,"byte_end":185893,"line_start":4064,"line_end":4064,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4982},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":187441,"byte_end":187456,"line_start":4089,"line_end":4089,"column_start":16,"column_end":31},"name":"custom_sections","qualname":"<Module>::custom_sections","value":"pub fn custom_sections(&Module, &str) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.customSections()` function returns a copy of the\n contents of all custom sections in the given module with the given\n string name.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":185878,"byte_end":185893,"line_start":4064,"line_end":4064,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":185878,"byte_end":185893,"line_start":4064,"line_end":4064,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4985},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":187904,"byte_end":187911,"line_start":4096,"line_end":4096,"column_start":16,"column_end":23},"name":"exports","qualname":"<Module>::exports","value":"pub fn exports(&Module) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.exports()` function returns an array containing\n descriptions of all the declared exports of the given `Module`.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":185878,"byte_end":185893,"line_start":4064,"line_end":4064,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":185878,"byte_end":185893,"line_start":4064,"line_end":4064,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4988},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":188340,"byte_end":188347,"line_start":4103,"line_end":4103,"column_start":16,"column_end":23},"name":"imports","qualname":"<Module>::imports","value":"pub fn imports(&Module) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.imports()` function returns an array containing\n descriptions of all the declared imports of the given `Module`.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":185878,"byte_end":185893,"line_start":4064,"line_end":4064,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":185878,"byte_end":185893,"line_start":4064,"line_end":4064,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5103},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":188888,"byte_end":188893,"line_start":4115,"line_end":4115,"column_start":18,"column_end":23},"name":"Table","qualname":"::WebAssembly::Table","value":"Table {  }","parent":null,"children":[{"krate":0,"index":5104}],"decl_id":null,"docs":" The `WebAssembly.Table()` constructor creates a new `Table` object\n of the given size and element type.","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":188411,"byte_end":188426,"line_start":4107,"line_end":4107,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":188411,"byte_end":188426,"line_start":4107,"line_end":4107,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5089},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":189254,"byte_end":189257,"line_start":4122,"line_end":4122,"column_start":16,"column_end":19},"name":"new","qualname":"<Table>::new","value":"pub fn new(&Object) -> Result<Table, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.Table()` constructor creates a new `Table` object\n of the given size and element type.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":188411,"byte_end":188426,"line_start":4107,"line_end":4107,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":188411,"byte_end":188426,"line_start":4107,"line_end":4107,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5092},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":189722,"byte_end":189728,"line_start":4130,"line_end":4130,"column_start":16,"column_end":22},"name":"length","qualname":"<Table>::length","value":"pub fn length(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The length prototype property of the `WebAssembly.Table` object\n returns the length of the table, i.e. the number of elements in the\n table.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":188411,"byte_end":188426,"line_start":4107,"line_end":4107,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":188411,"byte_end":188426,"line_start":4107,"line_end":4107,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5095},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":190127,"byte_end":190130,"line_start":4137,"line_end":4137,"column_start":16,"column_end":19},"name":"get","qualname":"<Table>::get","value":"pub fn get(&Self, u32) -> Result<Function, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `get()` prototype method of the `WebAssembly.Table()` object\n retrieves a function reference stored at a given index.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":188411,"byte_end":188426,"line_start":4107,"line_end":4107,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":188411,"byte_end":188426,"line_start":4107,"line_end":4107,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5098},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":190597,"byte_end":190601,"line_start":4145,"line_end":4145,"column_start":16,"column_end":20},"name":"grow","qualname":"<Table>::grow","value":"pub fn grow(&Self, u32) -> Result<u32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `grow()` prototype method of the `WebAssembly.Table` object\n increases the size of the `Table` instance by a specified number of\n elements.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":188411,"byte_end":188426,"line_start":4107,"line_end":4107,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":188411,"byte_end":188426,"line_start":4107,"line_end":4107,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5101},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":191051,"byte_end":191054,"line_start":4152,"line_end":4152,"column_start":16,"column_end":19},"name":"set","qualname":"<Table>::set","value":"pub fn set(&Self, u32, &Function) -> Result<(), JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `set()` prototype method of the `WebAssembly.Table` object mutates a\n reference stored at a given index to a different value.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":188411,"byte_end":188426,"line_start":4107,"line_end":4107,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":188411,"byte_end":188426,"line_start":4107,"line_end":4107,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5210},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":191637,"byte_end":191643,"line_start":4164,"line_end":4164,"column_start":18,"column_end":24},"name":"Global","qualname":"::WebAssembly::Global","value":"Global {  }","parent":null,"children":[{"krate":0,"index":5211}],"decl_id":null,"docs":" The `WebAssembly.Global()` constructor creates a new `Global` object\n of the given type and value.","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":191163,"byte_end":191178,"line_start":4156,"line_end":4156,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":191163,"byte_end":191178,"line_start":4156,"line_end":4156,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5202},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":192000,"byte_end":192003,"line_start":4171,"line_end":4171,"column_start":16,"column_end":19},"name":"new","qualname":"<Global>::new","value":"pub fn new(&Object, &JsValue) -> Result<Global, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.Global()` constructor creates a new `Global` object\n of the given type and value.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":191163,"byte_end":191178,"line_start":4156,"line_end":4156,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":191163,"byte_end":191178,"line_start":4156,"line_end":4156,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5205},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":192439,"byte_end":192444,"line_start":4178,"line_end":4178,"column_start":16,"column_end":21},"name":"value","qualname":"<Global>::value","value":"pub fn value(&Self) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The value prototype property of the `WebAssembly.Global` object\n returns the value of the global.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":191163,"byte_end":191178,"line_start":4156,"line_end":4156,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":191163,"byte_end":191178,"line_start":4156,"line_end":4156,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5208},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":192575,"byte_end":192584,"line_start":4180,"line_end":4180,"column_start":16,"column_end":25},"name":"set_value","qualname":"<Global>::set_value","value":"pub fn set_value(&Self, &JsValue)","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":191163,"byte_end":191178,"line_start":4156,"line_end":4156,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":191163,"byte_end":191178,"line_start":4156,"line_end":4156,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5317},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":192995,"byte_end":193001,"line_start":4189,"line_end":4189,"column_start":18,"column_end":24},"name":"Memory","qualname":"::WebAssembly::Memory","value":"Memory {  }","parent":null,"children":[{"krate":0,"index":5318}],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/Memory)","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":192655,"byte_end":192670,"line_start":4184,"line_end":4184,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":192655,"byte_end":192670,"line_start":4184,"line_end":4184,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5309},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":193608,"byte_end":193611,"line_start":4200,"line_end":4200,"column_start":16,"column_end":19},"name":"new","qualname":"<Memory>::new","value":"pub fn new(&Object) -> Result<Memory, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.Memory()` constructor creates a new `Memory` object\n which is a resizable `ArrayBuffer` that holds the raw bytes of\n memory accessed by a WebAssembly `Instance`.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":192655,"byte_end":192670,"line_start":4184,"line_end":4184,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":192655,"byte_end":192670,"line_start":4184,"line_end":4184,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5312},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":193991,"byte_end":193997,"line_start":4207,"line_end":4207,"column_start":16,"column_end":22},"name":"buffer","qualname":"<Memory>::buffer","value":"pub fn buffer(&Self) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" An accessor property that returns the buffer contained in the\n memory.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":192655,"byte_end":192670,"line_start":4184,"line_end":4184,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":192655,"byte_end":192670,"line_start":4184,"line_end":4184,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5315},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":194562,"byte_end":194566,"line_start":4218,"line_end":4218,"column_start":16,"column_end":20},"name":"grow","qualname":"<Memory>::grow","value":"pub fn grow(&Self, u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `grow()` protoype method of the `Memory` object increases the\n size of the memory instance by a specified number of WebAssembly\n pages.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":192655,"byte_end":192670,"line_start":4184,"line_end":4184,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":192655,"byte_end":192670,"line_start":4184,"line_end":4184,"column_start":5,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":247},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":194918,"byte_end":194922,"line_start":4227,"line_end":4227,"column_start":9,"column_end":13},"name":"JSON","qualname":"::JSON","value":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":5330},{"krate":0,"index":5332},{"krate":0,"index":5334},{"krate":0,"index":5336}],"decl_id":null,"docs":" The `JSON` object contains methods for parsing [JavaScript Object\n Notation (JSON)](https://json.org/) and converting values to JSON. It\n can't be called or constructed, and aside from its two method\n properties, it has no interesting functionality of its own.\n","sig":null,"attributes":[{"value":"/ The `JSON` object contains methods for parsing [JavaScript Object","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":194611,"byte_end":194680,"line_start":4222,"line_end":4222,"column_start":1,"column_end":70}},{"value":"/ Notation (JSON)](https://json.org/) and converting values to JSON. It","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":194681,"byte_end":194754,"line_start":4223,"line_end":4223,"column_start":1,"column_end":74}},{"value":"/ can't be called or constructed, and aside from its two method","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":194755,"byte_end":194820,"line_start":4224,"line_end":4224,"column_start":1,"column_end":66}},{"value":"/ properties, it has no interesting functionality of its own.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":194821,"byte_end":194884,"line_start":4225,"line_end":4225,"column_start":1,"column_end":64}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":194885,"byte_end":194909,"line_start":4226,"line_end":4226,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":5330},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":195338,"byte_end":195343,"line_start":4238,"line_end":4238,"column_start":16,"column_end":21},"name":"parse","qualname":"::JSON::parse","value":"pub fn parse(&str) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `JSON.parse()` method parses a JSON string, constructing the\n JavaScript value or object described by the string.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":194960,"byte_end":194975,"line_start":4231,"line_end":4231,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":194960,"byte_end":194975,"line_start":4231,"line_end":4231,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":5332},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":195682,"byte_end":195691,"line_start":4244,"line_end":4244,"column_start":16,"column_end":25},"name":"stringify","qualname":"::JSON::stringify","value":"pub fn stringify(&JsValue) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `JSON.stringify()` method converts a JavaScript value to a JSON string.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":194960,"byte_end":194975,"line_start":4231,"line_end":4231,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":194960,"byte_end":194975,"line_start":4231,"line_end":4231,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":5334},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":196494,"byte_end":196517,"line_start":4256,"line_end":4256,"column_start":16,"column_end":39},"name":"stringify_with_replacer","qualname":"::JSON::stringify_with_replacer","value":"pub fn stringify_with_replacer(&JsValue, &JsValue)\n-> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `JSON.stringify()` method converts a JavaScript value to a JSON string.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":194960,"byte_end":194975,"line_start":4231,"line_end":4231,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":194960,"byte_end":194975,"line_start":4231,"line_end":4231,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":5336},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198034,"byte_end":198067,"line_start":4280,"line_end":4280,"column_start":16,"column_end":49},"name":"stringify_with_replacer_and_space","qualname":"::JSON::stringify_with_replacer_and_space","value":"pub fn stringify_with_replacer_and_space(&JsValue, &JsValue, &JsValue)\n-> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `JSON.stringify()` method converts a JavaScript value to a JSON string.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":194960,"byte_end":194975,"line_start":4231,"line_end":4231,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":194960,"byte_end":194975,"line_start":4231,"line_end":4231,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5604},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198414,"byte_end":198422,"line_start":4294,"line_end":4294,"column_start":14,"column_end":22},"name":"JsString","qualname":"::JsString","value":"JsString {  }","parent":null,"children":[{"krate":0,"index":5605}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5425},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198727,"byte_end":198733,"line_start":4301,"line_end":4301,"column_start":12,"column_end":18},"name":"length","qualname":"<JsString>::length","value":"pub fn length(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The length property of a String object indicates the length of a string,\n in UTF-16 code units.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5428},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":199144,"byte_end":199151,"line_start":4309,"line_end":4309,"column_start":12,"column_end":19},"name":"char_at","qualname":"<JsString>::char_at","value":"pub fn char_at(&Self, u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The String object's `charAt()` method returns a new string consisting of\n the single UTF-16 code unit located at the specified offset into the\n string.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5431},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":199978,"byte_end":199990,"line_start":4323,"line_end":4323,"column_start":12,"column_end":24},"name":"char_code_at","qualname":"<JsString>::char_code_at","value":"pub fn char_code_at(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `charCodeAt()` method returns an integer between 0 and 65535\n representing the UTF-16 code unit at the given index (the UTF-16 code\n unit matches the Unicode code point for code points representable in a\n single UTF-16 code unit, but might also be the first code unit of a\n surrogate pair for code points not representable in a single UTF-16 code\n unit, e.g. Unicode code points > 0x10000).  If you want the entire code\n point value, use `codePointAt()`.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5434},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":200361,"byte_end":200374,"line_start":4330,"line_end":4330,"column_start":12,"column_end":25},"name":"code_point_at","qualname":"<JsString>::code_point_at","value":"pub fn code_point_at(&Self, u32) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `codePointAt()` method returns a non-negative integer that is the\n Unicode code point value.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5437},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":200727,"byte_end":200733,"line_start":4337,"line_end":4337,"column_start":12,"column_end":18},"name":"concat","qualname":"<JsString>::concat","value":"pub fn concat(&Self, &JsValue) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `concat()` method concatenates the string arguments to the calling\n string and returns a new string.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5440},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":201155,"byte_end":201164,"line_start":4344,"line_end":4344,"column_start":12,"column_end":21},"name":"ends_with","qualname":"<JsString>::ends_with","value":"pub fn ends_with(&Self, &str, i32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `endsWith()` method determines whether a string ends with the characters of a\n specified string, returning true or false as appropriate.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5443},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":202007,"byte_end":202021,"line_start":4360,"line_end":4360,"column_start":12,"column_end":26},"name":"from_char_code","qualname":"<JsString>::from_char_code","value":"pub fn from_char_code(&[u16]) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The static `String.fromCharCode()` method returns a string created from\n the specified sequence of UTF-16 code units.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5446},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":202291,"byte_end":202306,"line_start":4364,"line_end":4364,"column_start":12,"column_end":27},"name":"from_char_code1","qualname":"<JsString>::from_char_code1","value":"pub fn from_char_code1(u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode)","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5449},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":202564,"byte_end":202579,"line_start":4368,"line_end":4368,"column_start":12,"column_end":27},"name":"from_char_code2","qualname":"<JsString>::from_char_code2","value":"pub fn from_char_code2(u32, u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode)","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5452},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":202845,"byte_end":202860,"line_start":4372,"line_end":4372,"column_start":12,"column_end":27},"name":"from_char_code3","qualname":"<JsString>::from_char_code3","value":"pub fn from_char_code3(u32, u32, u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode)","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5455},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":203134,"byte_end":203149,"line_start":4376,"line_end":4376,"column_start":12,"column_end":27},"name":"from_char_code4","qualname":"<JsString>::from_char_code4","value":"pub fn from_char_code4(u32, u32, u32, u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode)","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5458},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":203431,"byte_end":203446,"line_start":4380,"line_end":4380,"column_start":12,"column_end":27},"name":"from_char_code5","qualname":"<JsString>::from_char_code5","value":"pub fn from_char_code5(u32, u32, u32, u32, u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode)","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5461},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":204183,"byte_end":204198,"line_start":4396,"line_end":4396,"column_start":12,"column_end":27},"name":"from_code_point","qualname":"<JsString>::from_code_point","value":"pub fn from_code_point(&[u32]) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `String.fromCodePoint()` method returns a string created by\n using the specified sequence of code points.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5464},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":204495,"byte_end":204511,"line_start":4400,"line_end":4400,"column_start":12,"column_end":28},"name":"from_code_point1","qualname":"<JsString>::from_code_point1","value":"pub fn from_code_point1(u32) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint)","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5467},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":204795,"byte_end":204811,"line_start":4404,"line_end":4404,"column_start":12,"column_end":28},"name":"from_code_point2","qualname":"<JsString>::from_code_point2","value":"pub fn from_code_point2(u32, u32) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint)","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5470},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":205103,"byte_end":205119,"line_start":4408,"line_end":4408,"column_start":12,"column_end":28},"name":"from_code_point3","qualname":"<JsString>::from_code_point3","value":"pub fn from_code_point3(u32, u32, u32) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint)","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5473},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":205419,"byte_end":205435,"line_start":4412,"line_end":4412,"column_start":12,"column_end":28},"name":"from_code_point4","qualname":"<JsString>::from_code_point4","value":"pub fn from_code_point4(u32, u32, u32, u32) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint)","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5476},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":205743,"byte_end":205759,"line_start":4416,"line_end":4416,"column_start":12,"column_end":28},"name":"from_code_point5","qualname":"<JsString>::from_code_point5","value":"pub fn from_code_point5(u32, u32, u32, u32, u32) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint)","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5479},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":206171,"byte_end":206179,"line_start":4423,"line_end":4423,"column_start":12,"column_end":20},"name":"includes","qualname":"<JsString>::includes","value":"pub fn includes(&Self, &str, i32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `includes()` method determines whether one string may be found\n within another string, returning true or false as appropriate.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5482},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":206674,"byte_end":206682,"line_start":4431,"line_end":4431,"column_start":12,"column_end":20},"name":"index_of","qualname":"<JsString>::index_of","value":"pub fn index_of(&Self, &str, i32) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The `indexOf()` method returns the index within the calling String\n object of the first occurrence of the specified value, starting the\n search at fromIndex.  Returns -1 if the value is not found.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5485},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":207190,"byte_end":207203,"line_start":4439,"line_end":4439,"column_start":12,"column_end":25},"name":"last_index_of","qualname":"<JsString>::last_index_of","value":"pub fn last_index_of(&Self, &str, i32) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The `lastIndexOf()` method returns the index within the calling String\n object of the last occurrence of the specified value, searching\n backwards from fromIndex.  Returns -1 if the value is not found.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5488},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":207671,"byte_end":207685,"line_start":4447,"line_end":4447,"column_start":12,"column_end":26},"name":"locale_compare","qualname":"<JsString>::locale_compare","value":"pub fn locale_compare(&Self, &str, &Array, &Object) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The `localeCompare()` method returns a number indicating whether\n a reference string comes before or after or is the same as\n the given string in sort order.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5491},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":208120,"byte_end":208126,"line_start":4458,"line_end":4458,"column_start":12,"column_end":18},"name":"match_","qualname":"<JsString>::match_","value":"pub fn match_(&Self, &RegExp) -> Option<Object>","parent":null,"children":[],"decl_id":null,"docs":" The `match()` method retrieves the matches when matching a string against a regular expression.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5494},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":208541,"byte_end":208550,"line_start":4465,"line_end":4465,"column_start":12,"column_end":21},"name":"normalize","qualname":"<JsString>::normalize","value":"pub fn normalize(&Self, &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `normalize()` method returns the Unicode Normalization Form\n of a given string (if the value isn't a string, it will be converted to one first).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5497},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":209044,"byte_end":209051,"line_start":4474,"line_end":4474,"column_start":12,"column_end":19},"name":"pad_end","qualname":"<JsString>::pad_end","value":"pub fn pad_end(&Self, u32, &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `padEnd()` method pads the current string with a given string\n (repeated, if needed) so that the resulting string reaches a given\n length. The padding is applied from the end (right) of the current\n string.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5500},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":209580,"byte_end":209589,"line_start":4483,"line_end":4483,"column_start":12,"column_end":21},"name":"pad_start","qualname":"<JsString>::pad_start","value":"pub fn pad_start(&Self, u32, &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `padStart()` method pads the current string with another string\n (repeated, if needed) so that the resulting string reaches the given\n length. The padding is applied from the start (left) of the current\n string.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5503},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":210032,"byte_end":210038,"line_start":4490,"line_end":4490,"column_start":12,"column_end":18},"name":"repeat","qualname":"<JsString>::repeat","value":"pub fn repeat(&Self, i32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `repeat()` method constructs and returns a new string which contains the specified\n number of copies of the string on which it was called, concatenated together.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5506},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":210593,"byte_end":210600,"line_start":4500,"line_end":4500,"column_start":12,"column_end":19},"name":"replace","qualname":"<JsString>::replace","value":"pub fn replace(&Self, &str, &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `replace()` method returns a new string with some or all matches of a pattern\n replaced by a replacement. The pattern can be a string or a RegExp, and\n the replacement can be a string or a function to be called for each match.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5509},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":210870,"byte_end":210891,"line_start":4504,"line_end":4504,"column_start":12,"column_end":33},"name":"replace_with_function","qualname":"<JsString>::replace_with_function","value":"pub fn replace_with_function(&Self, &str, &Function) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace)","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5512},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":211072,"byte_end":211090,"line_start":4511,"line_end":4511,"column_start":12,"column_end":30},"name":"replace_by_pattern","qualname":"<JsString>::replace_by_pattern","value":"pub fn replace_by_pattern(&Self, &RegExp, &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5515},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":211363,"byte_end":211395,"line_start":4515,"line_end":4515,"column_start":12,"column_end":44},"name":"replace_by_pattern_with_function","qualname":"<JsString>::replace_by_pattern_with_function","value":"pub fn replace_by_pattern_with_function(&Self, &RegExp, &Function) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace)","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5518},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":211813,"byte_end":211819,"line_start":4526,"line_end":4526,"column_start":12,"column_end":18},"name":"search","qualname":"<JsString>::search","value":"pub fn search(&Self, &RegExp) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The `search()` method executes a search for a match between\n a regular expression and this String object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5521},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":212194,"byte_end":212199,"line_start":4533,"line_end":4533,"column_start":12,"column_end":17},"name":"slice","qualname":"<JsString>::slice","value":"pub fn slice(&Self, u32, u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `slice()` method extracts a section of a string and returns it as a\n new string, without modifying the original string.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5524},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":212645,"byte_end":212650,"line_start":4540,"line_end":4540,"column_start":12,"column_end":17},"name":"split","qualname":"<JsString>::split","value":"pub fn split(&Self, &str) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `split()` method splits a String object into an array of strings by separating the string\n into substrings, using a specified separator string to determine where to make each split.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5527},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":212896,"byte_end":212907,"line_start":4544,"line_end":4544,"column_start":12,"column_end":23},"name":"split_limit","qualname":"<JsString>::split_limit","value":"pub fn split_limit(&Self, &str, u32) -> Array","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split)","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5530},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":213165,"byte_end":213181,"line_start":4548,"line_end":4548,"column_start":12,"column_end":28},"name":"split_by_pattern","qualname":"<JsString>::split_by_pattern","value":"pub fn split_by_pattern(&Self, &RegExp) -> Array","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split)","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5533},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":213428,"byte_end":213450,"line_start":4552,"line_end":4552,"column_start":12,"column_end":34},"name":"split_by_pattern_limit","qualname":"<JsString>::split_by_pattern_limit","value":"pub fn split_by_pattern_limit(&Self, &RegExp, u32) -> Array","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split)","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5536},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":213895,"byte_end":213906,"line_start":4560,"line_end":4560,"column_start":12,"column_end":23},"name":"starts_with","qualname":"<JsString>::starts_with","value":"pub fn starts_with(&Self, &str, u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `startsWith()` method determines whether a string begins with the\n characters of a specified string, returning true or false as\n appropriate.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5539},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":214301,"byte_end":214310,"line_start":4567,"line_end":4567,"column_start":12,"column_end":21},"name":"substring","qualname":"<JsString>::substring","value":"pub fn substring(&Self, u32, u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `substring()` method returns the part of the string between the\n start and end indexes, or to the end of the string.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5542},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":214696,"byte_end":214702,"line_start":4574,"line_end":4574,"column_start":12,"column_end":18},"name":"substr","qualname":"<JsString>::substr","value":"pub fn substr(&Self, i32, i32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `substr()` method returns the part of a string between\n the start index and a number of characters after it.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5545},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":215146,"byte_end":215166,"line_start":4581,"line_end":4581,"column_start":12,"column_end":32},"name":"to_locale_lower_case","qualname":"<JsString>::to_locale_lower_case","value":"pub fn to_locale_lower_case(&Self, Option<&str>) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toLocaleLowerCase()` method returns the calling string value converted to lower case,\n according to any locale-specific case mappings.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5548},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":215604,"byte_end":215624,"line_start":4588,"line_end":4588,"column_start":12,"column_end":32},"name":"to_locale_upper_case","qualname":"<JsString>::to_locale_upper_case","value":"pub fn to_locale_upper_case(&Self, Option<&str>) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toLocaleUpperCase()` method returns the calling string value converted to upper case,\n according to any locale-specific case mappings.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5551},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":215999,"byte_end":216012,"line_start":4595,"line_end":4595,"column_start":12,"column_end":25},"name":"to_lower_case","qualname":"<JsString>::to_lower_case","value":"pub fn to_lower_case(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toLowerCase()` method returns the calling string value\n converted to lower case.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5554},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":216350,"byte_end":216359,"line_start":4602,"line_end":4602,"column_start":12,"column_end":21},"name":"to_string","qualname":"<JsString>::to_string","value":"pub fn to_string(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toString()` method returns a string representing the specified\n object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5557},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":216769,"byte_end":216782,"line_start":4609,"line_end":4609,"column_start":12,"column_end":25},"name":"to_upper_case","qualname":"<JsString>::to_upper_case","value":"pub fn to_upper_case(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toUpperCase()` method returns the calling string value converted to\n uppercase (the value will be converted to a string if it isn't one).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5560},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":217253,"byte_end":217257,"line_start":4618,"line_end":4618,"column_start":12,"column_end":16},"name":"trim","qualname":"<JsString>::trim","value":"pub fn trim(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `trim()` method removes whitespace from both ends of a string.\n Whitespace in this context is all the whitespace characters (space, tab,\n no-break space, etc.) and all the line terminator characters (LF, CR,\n etc.).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5563},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":217627,"byte_end":217635,"line_start":4625,"line_end":4625,"column_start":12,"column_end":20},"name":"trim_end","qualname":"<JsString>::trim_end","value":"pub fn trim_end(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `trimEnd()` method removes whitespace from the end of a string.\n `trimRight()` is an alias of this method.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5566},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":218007,"byte_end":218017,"line_start":4632,"line_end":4632,"column_start":12,"column_end":22},"name":"trim_right","qualname":"<JsString>::trim_right","value":"pub fn trim_right(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `trimEnd()` method removes whitespace from the end of a string.\n `trimRight()` is an alias of this method.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5569},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":218398,"byte_end":218408,"line_start":4639,"line_end":4639,"column_start":12,"column_end":22},"name":"trim_start","qualname":"<JsString>::trim_start","value":"pub fn trim_start(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `trimStart()` method removes whitespace from the beginning of a\n string. `trimLeft()` is an alias of this method.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5572},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":218788,"byte_end":218797,"line_start":4646,"line_end":4646,"column_start":12,"column_end":21},"name":"trim_left","qualname":"<JsString>::trim_left","value":"pub fn trim_left(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `trimStart()` method removes whitespace from the beginning of a\n string. `trimLeft()` is an alias of this method.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5575},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":219122,"byte_end":219130,"line_start":4652,"line_end":4652,"column_start":12,"column_end":20},"name":"value_of","qualname":"<JsString>::value_of","value":"pub fn value_of(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `valueOf()` method returns the primitive value of a `String` object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5578},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":219552,"byte_end":219555,"line_start":4659,"line_end":4659,"column_start":12,"column_end":15},"name":"raw","qualname":"<JsString>::raw","value":"pub fn raw(&Object, &Array) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5581},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":220025,"byte_end":220030,"line_start":4666,"line_end":4666,"column_start":12,"column_end":17},"name":"raw_0","qualname":"<JsString>::raw_0","value":"pub fn raw_0(&Object) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5584},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":220477,"byte_end":220482,"line_start":4673,"line_end":4673,"column_start":12,"column_end":17},"name":"raw_1","qualname":"<JsString>::raw_1","value":"pub fn raw_1(&Object, &str) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5587},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":220952,"byte_end":220957,"line_start":4680,"line_end":4680,"column_start":12,"column_end":17},"name":"raw_2","qualname":"<JsString>::raw_2","value":"pub fn raw_2(&Object, &str, &str) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5590},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":221481,"byte_end":221486,"line_start":4691,"line_end":4691,"column_start":12,"column_end":17},"name":"raw_3","qualname":"<JsString>::raw_3","value":"pub fn raw_3(&Object, &str, &str, &str) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5593},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":222041,"byte_end":222046,"line_start":4703,"line_end":4703,"column_start":12,"column_end":17},"name":"raw_4","qualname":"<JsString>::raw_4","value":"pub fn raw_4(&Object, &str, &str, &str, &str) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5596},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":222632,"byte_end":222637,"line_start":4716,"line_end":4716,"column_start":12,"column_end":17},"name":"raw_5","qualname":"<JsString>::raw_5","value":"pub fn raw_5(&Object, &str, &str, &str, &str, &str)\n-> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5599},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":223254,"byte_end":223259,"line_start":4730,"line_end":4730,"column_start":12,"column_end":17},"name":"raw_6","qualname":"<JsString>::raw_6","value":"pub fn raw_6(&Object, &str, &str, &str, &str, &str, &str)\n-> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5602},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":223907,"byte_end":223912,"line_start":4745,"line_end":4745,"column_start":12,"column_end":17},"name":"raw_7","qualname":"<JsString>::raw_7","value":"pub fn raw_7(&Object, &str, &str, &str, &str, &str, &str, &str)\n-> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":198219,"byte_end":198234,"line_start":4290,"line_end":4290,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":224505,"byte_end":224513,"line_start":4764,"line_end":4764,"column_start":12,"column_end":20},"name":"try_from","qualname":"<JsString>::try_from","value":"pub fn try_from(&JsValue) -> Option<&JsString>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `JsString` value of this JS value if it's an instance of a\n string.","sig":null,"attributes":[{"value":"/ Returns the `JsString` value of this JS value if it's an instance of a","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":224218,"byte_end":224292,"line_start":4758,"line_end":4758,"column_start":5,"column_end":79}},{"value":"/ string.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":224297,"byte_end":224308,"line_start":4759,"line_end":4759,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":224313,"byte_end":224316,"line_start":4760,"line_end":4760,"column_start":5,"column_end":8}},{"value":"/ If this JS value is not an instance of a string then this returns","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":224321,"byte_end":224390,"line_start":4761,"line_end":4761,"column_start":5,"column_end":74}},{"value":"/ `None`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":224395,"byte_end":224406,"line_start":4762,"line_end":4762,"column_start":5,"column_end":16}},{"value":"deprecated(note =\n             \"recommended to use dyn_ref instead which is now equivalent\")","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":224411,"byte_end":224493,"line_start":4763,"line_end":4763,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":225438,"byte_end":225452,"line_start":4784,"line_end":4784,"column_start":12,"column_end":26},"name":"is_valid_utf16","qualname":"<JsString>::is_valid_utf16","value":"pub fn is_valid_utf16(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this string is a valid UTF-16 string.","sig":null,"attributes":[{"value":"/ Returns whether this string is a valid UTF-16 string.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":224585,"byte_end":224642,"line_start":4768,"line_end":4768,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":224647,"byte_end":224650,"line_start":4769,"line_end":4769,"column_start":5,"column_end":8}},{"value":"/ This is useful for learning whether `String::from(..)` will return a","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":224655,"byte_end":224727,"line_start":4770,"line_end":4770,"column_start":5,"column_end":77}},{"value":"/ lossless representation of the JS string. If this string contains","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":224732,"byte_end":224801,"line_start":4771,"line_end":4771,"column_start":5,"column_end":74}},{"value":"/ unpaired surrogates then `String::from` will succeed but it will be a","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":224806,"byte_end":224879,"line_start":4772,"line_end":4772,"column_start":5,"column_end":78}},{"value":"/ lossy representation of the JS string because unpaired surrogates will","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":224884,"byte_end":224958,"line_start":4773,"line_end":4773,"column_start":5,"column_end":79}},{"value":"/ become replacement characters.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":224963,"byte_end":224997,"line_start":4774,"line_end":4774,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":225002,"byte_end":225005,"line_start":4775,"line_end":4775,"column_start":5,"column_end":8}},{"value":"/ If this function returns `false` then to get a lossless representation","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":225010,"byte_end":225084,"line_start":4776,"line_end":4776,"column_start":5,"column_end":79}},{"value":"/ of the string you'll need to manually use the `iter` method (or the","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":225089,"byte_end":225160,"line_start":4777,"line_end":4777,"column_start":5,"column_end":76}},{"value":"/ `char_code_at` accessor) to view the raw character codes.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":225165,"byte_end":225226,"line_start":4778,"line_end":4778,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":225231,"byte_end":225234,"line_start":4779,"line_end":4779,"column_start":5,"column_end":8}},{"value":"/ For more information, see the documentation on [JS strings vs Rust","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":225239,"byte_end":225309,"line_start":4780,"line_end":4780,"column_start":5,"column_end":75}},{"value":"/ strings][docs]","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":225314,"byte_end":225332,"line_start":4781,"line_end":4781,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":225337,"byte_end":225340,"line_start":4782,"line_end":4782,"column_start":5,"column_end":8}},{"value":"/ [docs]: https://rustwasm.github.io/docs/wasm-bindgen/reference/types/str.html","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":225345,"byte_end":225426,"line_start":4783,"line_end":4783,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":225790,"byte_end":225794,"line_start":4793,"line_end":4793,"column_start":12,"column_end":16},"name":"iter","qualname":"<JsString>::iter","value":"pub fn iter<'a>(&'a Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the `u16` character codes that make up this JS\n string.","sig":null,"attributes":[{"value":"/ Returns an iterator over the `u16` character codes that make up this JS","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":225545,"byte_end":225620,"line_start":4788,"line_end":4788,"column_start":5,"column_end":80}},{"value":"/ string.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":225625,"byte_end":225636,"line_start":4789,"line_end":4789,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":225641,"byte_end":225644,"line_start":4790,"line_end":4790,"column_start":5,"column_end":8}},{"value":"/ This method will call `char_code_at` for each code in this JS string,","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":225649,"byte_end":225722,"line_start":4791,"line_end":4791,"column_start":5,"column_end":78}},{"value":"/ returning an iterator of the codes in sequence.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":225727,"byte_end":225778,"line_start":4792,"line_end":4792,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":226563,"byte_end":226570,"line_start":4809,"line_end":4809,"column_start":12,"column_end":19},"name":"as_char","qualname":"<JsString>::as_char","value":"pub fn as_char(&Self) -> Option<char>","parent":null,"children":[],"decl_id":null,"docs":" If this string consists of a single Unicode code point, then this method\n converts it into a Rust `char` without doing any allocations.","sig":null,"attributes":[{"value":"/ If this string consists of a single Unicode code point, then this method","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":225983,"byte_end":226059,"line_start":4799,"line_end":4799,"column_start":5,"column_end":81}},{"value":"/ converts it into a Rust `char` without doing any allocations.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":226064,"byte_end":226129,"line_start":4800,"line_end":4800,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":226134,"byte_end":226137,"line_start":4801,"line_end":4801,"column_start":5,"column_end":8}},{"value":"/ If this JS value is not a valid UTF-8 or consists of more than a single","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":226142,"byte_end":226217,"line_start":4802,"line_end":4802,"column_start":5,"column_end":80}},{"value":"/ codepoint, then this returns `None`.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":226222,"byte_end":226262,"line_start":4803,"line_end":4803,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":226267,"byte_end":226270,"line_start":4804,"line_end":4804,"column_start":5,"column_end":8}},{"value":"/ Note that a single Unicode code point might be represented as more than","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":226275,"byte_end":226350,"line_start":4805,"line_end":4805,"column_start":5,"column_end":80}},{"value":"/ one code unit on the JavaScript side. For example, a JavaScript string","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":226355,"byte_end":226429,"line_start":4806,"line_end":4806,"column_start":5,"column_end":79}},{"value":"/ `\"\\uD801\\uDC37\"` is actually a single Unicode code point U+10437 which","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":226434,"byte_end":226508,"line_start":4807,"line_end":4807,"column_start":5,"column_end":79}},{"value":"/ corresponds to a character '𐐷'.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":226513,"byte_end":226551,"line_start":4808,"line_end":4808,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":5739},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228887,"byte_end":228893,"line_start":4911,"line_end":4911,"column_start":14,"column_end":20},"name":"Symbol","qualname":"::Symbol","value":"Symbol {  }","parent":null,"children":[{"krate":0,"index":5740}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228736,"byte_end":228751,"line_start":4907,"line_end":4907,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228736,"byte_end":228751,"line_start":4907,"line_end":4907,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5692},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":229355,"byte_end":229367,"line_start":4919,"line_end":4919,"column_start":12,"column_end":24},"name":"has_instance","qualname":"<Symbol>::has_instance","value":"pub fn has_instance() -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.hasInstance` well-known symbol is used to determine\n if a constructor object recognizes an object as its instance.\n The `instanceof` operator's behavior can be customized by this symbol.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228736,"byte_end":228751,"line_start":4907,"line_end":4907,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228736,"byte_end":228751,"line_start":4907,"line_end":4907,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5695},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":229834,"byte_end":229854,"line_start":4927,"line_end":4927,"column_start":12,"column_end":32},"name":"is_concat_spreadable","qualname":"<Symbol>::is_concat_spreadable","value":"pub fn is_concat_spreadable() -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.isConcatSpreadable` well-known symbol is used to configure\n if an object should be flattened to its array elements when using the\n `Array.prototype.concat()` method.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228736,"byte_end":228751,"line_start":4907,"line_end":4907,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228736,"byte_end":228751,"line_start":4907,"line_end":4907,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5698},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":230329,"byte_end":230343,"line_start":4934,"line_end":4934,"column_start":12,"column_end":26},"name":"async_iterator","qualname":"<Symbol>::async_iterator","value":"pub fn async_iterator() -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.asyncIterator` well-known symbol specifies the default AsyncIterator for an object.\n If this property is set on an object, it is an async iterable and can be used in a `for await...of` loop.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228736,"byte_end":228751,"line_start":4907,"line_end":4907,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228736,"byte_end":228751,"line_start":4907,"line_end":4907,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5701},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":230693,"byte_end":230701,"line_start":4941,"line_end":4941,"column_start":12,"column_end":20},"name":"iterator","qualname":"<Symbol>::iterator","value":"pub fn iterator() -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.iterator` well-known symbol specifies the default iterator\n for an object.  Used by `for...of`.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228736,"byte_end":228751,"line_start":4907,"line_end":4907,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228736,"byte_end":228751,"line_start":4907,"line_end":4907,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5704},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":231134,"byte_end":231140,"line_start":4949,"line_end":4949,"column_start":12,"column_end":18},"name":"match_","qualname":"<Symbol>::match_","value":"pub fn match_() -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.match` well-known symbol specifies the matching of a regular\n expression against a string. This function is called by the\n `String.prototype.match()` method.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228736,"byte_end":228751,"line_start":4907,"line_end":4907,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228736,"byte_end":228751,"line_start":4907,"line_end":4907,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5707},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":231681,"byte_end":231688,"line_start":4960,"line_end":4960,"column_start":12,"column_end":19},"name":"replace","qualname":"<Symbol>::replace","value":"pub fn replace() -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.replace` well-known symbol specifies the method that\n replaces matched substrings of a string.  This function is called by the\n `String.prototype.replace()` method.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228736,"byte_end":228751,"line_start":4907,"line_end":4907,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228736,"byte_end":228751,"line_start":4907,"line_end":4907,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5710},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":232254,"byte_end":232260,"line_start":4971,"line_end":4971,"column_start":12,"column_end":18},"name":"search","qualname":"<Symbol>::search","value":"pub fn search() -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.search` well-known symbol specifies the method that returns\n the index within a string that matches the regular expression.  This\n function is called by the `String.prototype.search()` method.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228736,"byte_end":228751,"line_start":4907,"line_end":4907,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228736,"byte_end":228751,"line_start":4907,"line_end":4907,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5713},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":232640,"byte_end":232647,"line_start":4978,"line_end":4978,"column_start":12,"column_end":19},"name":"species","qualname":"<Symbol>::species","value":"pub fn species() -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The well-known symbol `Symbol.species` specifies a function-valued\n property that the constructor function uses to create derived objects.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228736,"byte_end":228751,"line_start":4907,"line_end":4907,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228736,"byte_end":228751,"line_start":4907,"line_end":4907,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5716},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":233193,"byte_end":233198,"line_start":4988,"line_end":4988,"column_start":12,"column_end":17},"name":"split","qualname":"<Symbol>::split","value":"pub fn split() -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.split` well-known symbol specifies the method that splits a\n string at the indices that match a regular expression.  This function is\n called by the `String.prototype.split()` method.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228736,"byte_end":228751,"line_start":4907,"line_end":4907,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228736,"byte_end":228751,"line_start":4907,"line_end":4907,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5719},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":233626,"byte_end":233638,"line_start":4996,"line_end":4996,"column_start":12,"column_end":24},"name":"to_primitive","qualname":"<Symbol>::to_primitive","value":"pub fn to_primitive() -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.toPrimitive` is a symbol that specifies a function valued\n property that is called to convert an object to a corresponding\n primitive value.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228736,"byte_end":228751,"line_start":4907,"line_end":4907,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228736,"byte_end":228751,"line_start":4907,"line_end":4907,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5722},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":234140,"byte_end":234153,"line_start":5005,"line_end":5005,"column_start":12,"column_end":25},"name":"to_string_tag","qualname":"<Symbol>::to_string_tag","value":"pub fn to_string_tag() -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.toStringTag` well-known symbol is a string valued property\n that is used in the creation of the default string description of an\n object.  It is accessed internally by the `Object.prototype.toString()`\n method.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228736,"byte_end":228751,"line_start":4907,"line_end":4907,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228736,"byte_end":228751,"line_start":4907,"line_end":4907,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5725},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":234612,"byte_end":234616,"line_start":5013,"line_end":5013,"column_start":12,"column_end":16},"name":"for_","qualname":"<Symbol>::for_","value":"pub fn for_(&str) -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.for(key)` method searches for existing symbols in a runtime-wide symbol registry with\n the given key and returns it if found.\n Otherwise a new symbol gets created in the global symbol registry with this key.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228736,"byte_end":228751,"line_start":4907,"line_end":4907,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228736,"byte_end":228751,"line_start":4907,"line_end":4907,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5728},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":234972,"byte_end":234979,"line_start":5019,"line_end":5019,"column_start":12,"column_end":19},"name":"key_for","qualname":"<Symbol>::key_for","value":"pub fn key_for(&Symbol) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.keyFor(sym)` method retrieves a shared symbol key from the global symbol registry for the given symbol.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228736,"byte_end":228751,"line_start":4907,"line_end":4907,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228736,"byte_end":228751,"line_start":4907,"line_end":4907,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5731},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":235291,"byte_end":235300,"line_start":5025,"line_end":5025,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Symbol>::to_string","value":"pub fn to_string(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toString()` method returns a string representing the specified Symbol object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228736,"byte_end":228751,"line_start":4907,"line_end":4907,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228736,"byte_end":228751,"line_start":4907,"line_end":4907,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5734},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":235763,"byte_end":235774,"line_start":5033,"line_end":5033,"column_start":12,"column_end":23},"name":"unscopables","qualname":"<Symbol>::unscopables","value":"pub fn unscopables() -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.unscopables` well-known symbol is used to specify an object\n value of whose own and inherited property names are excluded from the\n with environment bindings of the associated object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228736,"byte_end":228751,"line_start":4907,"line_end":4907,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228736,"byte_end":228751,"line_start":4907,"line_end":4907,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5737},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":236059,"byte_end":236067,"line_start":5039,"line_end":5039,"column_start":12,"column_end":20},"name":"value_of","qualname":"<Symbol>::value_of","value":"pub fn value_of(&Self) -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `valueOf()` method returns the primitive value of a Symbol object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228736,"byte_end":228751,"line_start":4907,"line_end":4907,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228736,"byte_end":228751,"line_start":4907,"line_end":4907,"column_start":1,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":287},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":236130,"byte_end":236134,"line_start":5043,"line_end":5043,"column_start":9,"column_end":13},"name":"Intl","qualname":"::Intl","value":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":5745},{"krate":0,"index":5844},{"krate":0,"index":5846},{"krate":0,"index":5848},{"krate":0,"index":5747},{"krate":0,"index":5819},{"krate":0,"index":5822},{"krate":0,"index":5827},{"krate":0,"index":5832},{"krate":0,"index":5835},{"krate":0,"index":5838},{"krate":0,"index":5841},{"krate":0,"index":289},{"krate":0,"index":5950},{"krate":0,"index":5952},{"krate":0,"index":5954},{"krate":0,"index":5850},{"krate":0,"index":5922},{"krate":0,"index":5925},{"krate":0,"index":5930},{"krate":0,"index":5935},{"krate":0,"index":5938},{"krate":0,"index":5941},{"krate":0,"index":5944},{"krate":0,"index":5947},{"krate":0,"index":291},{"krate":0,"index":6056},{"krate":0,"index":6058},{"krate":0,"index":6060},{"krate":0,"index":5956},{"krate":0,"index":6028},{"krate":0,"index":6031},{"krate":0,"index":6036},{"krate":0,"index":6041},{"krate":0,"index":6044},{"krate":0,"index":6047},{"krate":0,"index":6050},{"krate":0,"index":6053},{"krate":0,"index":293},{"krate":0,"index":6159},{"krate":0,"index":6161},{"krate":0,"index":6163},{"krate":0,"index":6062},{"krate":0,"index":6134},{"krate":0,"index":6137},{"krate":0,"index":6142},{"krate":0,"index":6147},{"krate":0,"index":6150},{"krate":0,"index":6153},{"krate":0,"index":6156},{"krate":0,"index":295}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":236097,"byte_end":236121,"line_start":5042,"line_end":5042,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":5745},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":236674,"byte_end":236695,"line_start":5055,"line_end":5055,"column_start":16,"column_end":37},"name":"get_canonical_locales","qualname":"::Intl::get_canonical_locales","value":"pub fn get_canonical_locales(&JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.getCanonicalLocales()` method returns an array containing\n the canonical locale names. Duplicates will be omitted and elements\n will be validated as structurally valid language tags.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":236172,"byte_end":236187,"line_start":5047,"line_end":5047,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":236172,"byte_end":236187,"line_start":5047,"line_end":5047,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5844},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":237207,"byte_end":237215,"line_start":5067,"line_end":5067,"column_start":18,"column_end":26},"name":"Collator","qualname":"::Intl::Collator","value":"Collator {  }","parent":null,"children":[{"krate":0,"index":5845}],"decl_id":null,"docs":" The `Intl.Collator` object is a constructor for collators, objects\n that enable language sensitive string comparison.","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":236751,"byte_end":236766,"line_start":5059,"line_end":5059,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":236751,"byte_end":236766,"line_start":5059,"line_end":5059,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5833},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":237567,"byte_end":237570,"line_start":5074,"line_end":5074,"column_start":16,"column_end":19},"name":"new","qualname":"<Collator>::new","value":"pub fn new(&Array, &Object) -> Collator","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.Collator` object is a constructor for collators, objects\n that enable language sensitive string comparison.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":236751,"byte_end":236766,"line_start":5059,"line_end":5059,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":236751,"byte_end":236766,"line_start":5059,"line_end":5059,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5836},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":238025,"byte_end":238032,"line_start":5082,"line_end":5082,"column_start":16,"column_end":23},"name":"compare","qualname":"<Collator>::compare","value":"pub fn compare(&Self) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The Intl.Collator.prototype.compare property returns a function that\n compares two strings according to the sort order of this Collator\n object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":236751,"byte_end":236766,"line_start":5059,"line_end":5059,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":236751,"byte_end":236766,"line_start":5059,"line_end":5059,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5839},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":238538,"byte_end":238554,"line_start":5090,"line_end":5090,"column_start":16,"column_end":32},"name":"resolved_options","qualname":"<Collator>::resolved_options","value":"pub fn resolved_options(&Self) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.Collator.prototype.resolvedOptions()` method returns a new\n object with properties reflecting the locale and collation options\n computed during initialization of this Collator object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":236751,"byte_end":236766,"line_start":5059,"line_end":5059,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":236751,"byte_end":236766,"line_start":5059,"line_end":5059,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5842},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":239104,"byte_end":239124,"line_start":5099,"line_end":5099,"column_start":16,"column_end":36},"name":"supported_locales_of","qualname":"<Collator>::supported_locales_of","value":"pub fn supported_locales_of(&Array, &Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.Collator.supportedLocalesOf()` method returns an array\n containing those of the provided locales that are supported in\n collation without having to fall back to the runtime's default\n locale.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":236751,"byte_end":236766,"line_start":5059,"line_end":5059,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":236751,"byte_end":236766,"line_start":5059,"line_end":5059,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5950},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":239903,"byte_end":239917,"line_start":5120,"line_end":5120,"column_start":18,"column_end":32},"name":"DateTimeFormat","qualname":"::Intl::DateTimeFormat","value":"DateTimeFormat {  }","parent":null,"children":[{"krate":0,"index":5951}],"decl_id":null,"docs":" The `Intl.DateTimeFormat` object is a constructor for objects\n that enable language-sensitive date and time formatting.","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":239433,"byte_end":239448,"line_start":5112,"line_end":5112,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":239433,"byte_end":239448,"line_start":5112,"line_end":5112,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5936},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":240277,"byte_end":240280,"line_start":5127,"line_end":5127,"column_start":16,"column_end":19},"name":"new","qualname":"<DateTimeFormat>::new","value":"pub fn new(&Array, &Object) -> DateTimeFormat","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.DateTimeFormat` object is a constructor for objects\n that enable language-sensitive date and time formatting.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":239433,"byte_end":239448,"line_start":5112,"line_end":5112,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":239433,"byte_end":239448,"line_start":5112,"line_end":5112,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5939},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":240788,"byte_end":240794,"line_start":5135,"line_end":5135,"column_start":16,"column_end":22},"name":"format","qualname":"<DateTimeFormat>::format","value":"pub fn format(&Self) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The Intl.DateTimeFormat.prototype.format property returns a getter function that\n formats a date according to the locale and formatting options of this\n Intl.DateTimeFormat object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":239433,"byte_end":239448,"line_start":5112,"line_end":5112,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":239433,"byte_end":239448,"line_start":5112,"line_end":5112,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5942},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":241257,"byte_end":241272,"line_start":5142,"line_end":5142,"column_start":16,"column_end":31},"name":"format_to_parts","qualname":"<DateTimeFormat>::format_to_parts","value":"pub fn format_to_parts(&Self, &Date) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.DateTimeFormat.prototype.formatToParts()` method allows locale-aware\n formatting of strings produced by DateTimeFormat formatters.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":239433,"byte_end":239448,"line_start":5112,"line_end":5112,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":239433,"byte_end":239448,"line_start":5112,"line_end":5112,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5945},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":241827,"byte_end":241843,"line_start":5150,"line_end":5150,"column_start":16,"column_end":32},"name":"resolved_options","qualname":"<DateTimeFormat>::resolved_options","value":"pub fn resolved_options(&Self) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.DateTimeFormat.prototype.resolvedOptions()` method returns a new\n object with properties reflecting the locale and date and time formatting\n options computed during initialization of this DateTimeFormat object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":239433,"byte_end":239448,"line_start":5112,"line_end":5112,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":239433,"byte_end":239448,"line_start":5112,"line_end":5112,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5948},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":242432,"byte_end":242452,"line_start":5159,"line_end":5159,"column_start":16,"column_end":36},"name":"supported_locales_of","qualname":"<DateTimeFormat>::supported_locales_of","value":"pub fn supported_locales_of(&Array, &Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.DateTimeFormat.supportedLocalesOf()` method returns an array\n containing those of the provided locales that are supported in date\n and time formatting without having to fall back to the runtime's default\n locale.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":239433,"byte_end":239448,"line_start":5112,"line_end":5112,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":239433,"byte_end":239448,"line_start":5112,"line_end":5112,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6056},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":243222,"byte_end":243234,"line_start":5180,"line_end":5180,"column_start":18,"column_end":30},"name":"NumberFormat","qualname":"::Intl::NumberFormat","value":"NumberFormat {  }","parent":null,"children":[{"krate":0,"index":6057}],"decl_id":null,"docs":" The `Intl.NumberFormat` object is a constructor for objects\n that enable language sensitive number formatting.","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":242765,"byte_end":242780,"line_start":5172,"line_end":5172,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":242765,"byte_end":242780,"line_start":5172,"line_end":5172,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6042},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":243583,"byte_end":243586,"line_start":5187,"line_end":5187,"column_start":16,"column_end":19},"name":"new","qualname":"<NumberFormat>::new","value":"pub fn new(&Array, &Object) -> NumberFormat","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.NumberFormat` object is a constructor for objects\n that enable language sensitive number formatting.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":242765,"byte_end":242780,"line_start":5172,"line_end":5172,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":242765,"byte_end":242780,"line_start":5172,"line_end":5172,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6045},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":244081,"byte_end":244087,"line_start":5195,"line_end":5195,"column_start":16,"column_end":22},"name":"format","qualname":"<NumberFormat>::format","value":"pub fn format(&Self) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The Intl.NumberFormat.prototype.format property returns a getter function that\n formats a number according to the locale and formatting options of this\n NumberFormat object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":242765,"byte_end":242780,"line_start":5172,"line_end":5172,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":242765,"byte_end":242780,"line_start":5172,"line_end":5172,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6048},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":244544,"byte_end":244559,"line_start":5202,"line_end":5202,"column_start":16,"column_end":31},"name":"format_to_parts","qualname":"<NumberFormat>::format_to_parts","value":"pub fn format_to_parts(&Self, f64) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.Numberformat.prototype.formatToParts()` method allows locale-aware\n formatting of strings produced by NumberTimeFormat formatters.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":242765,"byte_end":242780,"line_start":5172,"line_end":5172,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":242765,"byte_end":242780,"line_start":5172,"line_end":5172,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6051},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":245099,"byte_end":245115,"line_start":5210,"line_end":5210,"column_start":16,"column_end":32},"name":"resolved_options","qualname":"<NumberFormat>::resolved_options","value":"pub fn resolved_options(&Self) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.NumberFormat.prototype.resolvedOptions()` method returns a new\n object with properties reflecting the locale and number formatting\n options computed during initialization of this NumberFormat object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":242765,"byte_end":242780,"line_start":5172,"line_end":5172,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":242765,"byte_end":242780,"line_start":5172,"line_end":5172,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6054},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":245677,"byte_end":245697,"line_start":5218,"line_end":5218,"column_start":16,"column_end":36},"name":"supported_locales_of","qualname":"<NumberFormat>::supported_locales_of","value":"pub fn supported_locales_of(&Array, &Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.NumberFormat.supportedLocalesOf()` method returns an array\n containing those of the provided locales that are supported in number\n formatting without having to fall back to the runtime's default locale.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":242765,"byte_end":242780,"line_start":5172,"line_end":5172,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":242765,"byte_end":242780,"line_start":5172,"line_end":5172,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6159},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":246478,"byte_end":246489,"line_start":5239,"line_end":5239,"column_start":18,"column_end":29},"name":"PluralRules","qualname":"::Intl::PluralRules","value":"PluralRules {  }","parent":null,"children":[{"krate":0,"index":6160}],"decl_id":null,"docs":" The `Intl.PluralRules` object is a constructor for objects\n that enable plural sensitive formatting and plural language rules.","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":246007,"byte_end":246022,"line_start":5231,"line_end":5231,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":246007,"byte_end":246022,"line_start":5231,"line_end":5231,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6148},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":246853,"byte_end":246856,"line_start":5246,"line_end":5246,"column_start":16,"column_end":19},"name":"new","qualname":"<PluralRules>::new","value":"pub fn new(&Array, &Object) -> PluralRules","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.PluralRules` object is a constructor for objects\n that enable plural sensitive formatting and plural language rules.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":246007,"byte_end":246022,"line_start":5231,"line_end":5231,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":246007,"byte_end":246022,"line_start":5231,"line_end":5231,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6151},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":247400,"byte_end":247416,"line_start":5254,"line_end":5254,"column_start":16,"column_end":32},"name":"resolved_options","qualname":"<PluralRules>::resolved_options","value":"pub fn resolved_options(&Self) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.PluralRules.prototype.resolvedOptions()` method returns a new\n object with properties reflecting the locale and plural formatting\n options computed during initialization of this PluralRules object.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":246007,"byte_end":246022,"line_start":5231,"line_end":5231,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":246007,"byte_end":246022,"line_start":5231,"line_end":5231,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6154},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":247817,"byte_end":247823,"line_start":5261,"line_end":5261,"column_start":16,"column_end":22},"name":"select","qualname":"<PluralRules>::select","value":"pub fn select(&Self, f64) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.PluralRules.prototype.select()` method returns a String indicating\n which plural rule to use for locale-aware formatting.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":246007,"byte_end":246022,"line_start":5231,"line_end":5231,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":246007,"byte_end":246022,"line_start":5231,"line_end":5231,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6157},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":248396,"byte_end":248416,"line_start":5269,"line_end":5269,"column_start":16,"column_end":36},"name":"supported_locales_of","qualname":"<PluralRules>::supported_locales_of","value":"pub fn supported_locales_of(&Array, &Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.PluralRules.supportedLocalesOf()` method returns an array\n containing those of the provided locales that are supported in plural\n formatting without having to fall back to the runtime's default locale.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":246007,"byte_end":246022,"line_start":5231,"line_end":5231,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":246007,"byte_end":246022,"line_start":5231,"line_end":5231,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6277},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":249134,"byte_end":249141,"line_start":5292,"line_end":5292,"column_start":14,"column_end":21},"name":"Promise","qualname":"::Promise","value":"Promise {  }","parent":null,"children":[{"krate":0,"index":6278}],"decl_id":null,"docs":" The `Promise` object represents the eventual completion (or failure) of\n an asynchronous operation, and its resulting value.","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":248710,"byte_end":248725,"line_start":5283,"line_end":5283,"column_start":1,"column_end":16}},{"value":"must_use","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":249009,"byte_end":249020,"line_start":5289,"line_end":5289,"column_start":5,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":248710,"byte_end":248725,"line_start":5283,"line_end":5283,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":6251},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":250171,"byte_end":250174,"line_start":5311,"line_end":5311,"column_start":12,"column_end":15},"name":"new","qualname":"<Promise>::new","value":"pub fn new(&mut dyn FnMut(Function, Function) -> ()) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Promise` with the provided executor `cb`","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":248710,"byte_end":248725,"line_start":5283,"line_end":5283,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":248710,"byte_end":248725,"line_start":5283,"line_end":5283,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":6254},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":250703,"byte_end":250706,"line_start":5320,"line_end":5320,"column_start":12,"column_end":15},"name":"all","qualname":"<Promise>::all","value":"pub fn all(&JsValue) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `Promise.all(iterable)` method returns a single `Promise` that\n resolves when all of the promises in the iterable argument have resolved\n or when the iterable argument contains no promises. It rejects with the\n reason of the first promise that rejects.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":248710,"byte_end":248725,"line_start":5283,"line_end":5283,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":248710,"byte_end":248725,"line_start":5283,"line_end":5283,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":6257},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":251140,"byte_end":251144,"line_start":5328,"line_end":5328,"column_start":12,"column_end":16},"name":"race","qualname":"<Promise>::race","value":"pub fn race(&JsValue) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `Promise.race(iterable)` method returns a promise that resolves or\n rejects as soon as one of the promises in the iterable resolves or\n rejects, with the value or reason from that promise.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":248710,"byte_end":248725,"line_start":5283,"line_end":5283,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":248710,"byte_end":248725,"line_start":5283,"line_end":5283,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":6260},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":251484,"byte_end":251490,"line_start":5335,"line_end":5335,"column_start":12,"column_end":18},"name":"reject","qualname":"<Promise>::reject","value":"pub fn reject(&JsValue) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `Promise.reject(reason)` method returns a `Promise` object that is\n rejected with the given reason.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":248710,"byte_end":248725,"line_start":5283,"line_end":5283,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":248710,"byte_end":248725,"line_start":5283,"line_end":5283,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":6263},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":252106,"byte_end":252113,"line_start":5345,"line_end":5345,"column_start":12,"column_end":19},"name":"resolve","qualname":"<Promise>::resolve","value":"pub fn resolve(&JsValue) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `Promise.resolve(value)` method returns a `Promise` object that is\n resolved with the given value. If the value is a promise, that promise\n is returned; if the value is a thenable (i.e. has a \"then\" method), the\n returned promise will \"follow\" that thenable, adopting its eventual\n state; otherwise the returned promise will be fulfilled with the value.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":248710,"byte_end":248725,"line_start":5283,"line_end":5283,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":248710,"byte_end":248725,"line_start":5283,"line_end":5283,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":6266},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":252597,"byte_end":252602,"line_start":5354,"line_end":5354,"column_start":12,"column_end":17},"name":"catch","qualname":"<Promise>::catch","value":"pub fn catch(&Self, &Closure<dyn FnMut(JsValue) -> ()>) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `catch()` method returns a `Promise` and deals with rejected cases\n only.  It behaves the same as calling `Promise.prototype.then(undefined,\n onRejected)` (in fact, calling `obj.catch(onRejected)` internally calls\n `obj.then(undefined, onRejected)`).","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":248710,"byte_end":248725,"line_start":5283,"line_end":5283,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":248710,"byte_end":248725,"line_start":5283,"line_end":5283,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":6269},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":252994,"byte_end":252998,"line_start":5361,"line_end":5361,"column_start":12,"column_end":16},"name":"then","qualname":"<Promise>::then","value":"pub fn then(&Self, &Closure<dyn FnMut(JsValue) -> ()>) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `then()` method returns a `Promise`. It takes up to two arguments:\n callback functions for the success and failure cases of the `Promise`.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":248710,"byte_end":248725,"line_start":5283,"line_end":5283,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":248710,"byte_end":248725,"line_start":5283,"line_end":5283,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":6272},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":253176,"byte_end":253181,"line_start":5365,"line_end":5365,"column_start":12,"column_end":17},"name":"then2","qualname":"<Promise>::then2","value":"pub fn then2(&Self, &Closure<dyn FnMut(JsValue) -> ()>,\n             &Closure<dyn FnMut(JsValue) -> ()>) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" Same as `then`, only with both arguments provided.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":248710,"byte_end":248725,"line_start":5283,"line_end":5283,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":248710,"byte_end":248725,"line_start":5283,"line_end":5283,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":6275},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":253957,"byte_end":253964,"line_start":5382,"line_end":5382,"column_start":12,"column_end":19},"name":"finally","qualname":"<Promise>::finally","value":"pub fn finally(&Self, &Closure<dyn FnMut() -> ()>) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `finally()` method returns a `Promise`. When the promise is settled,\n whether fulfilled or rejected, the specified callback function is\n executed. This provides a way for code that must be executed once the\n `Promise` has been dealt with to be run whether the promise was\n fulfilled successfully or rejected.","sig":null,"attributes":[{"value":"allow(nonstandard_style)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":248710,"byte_end":248725,"line_start":5283,"line_end":5283,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all, clippy :: nursery, clippy :: pedantic, clippy ::\n        restriction)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":248710,"byte_end":248725,"line_start":5283,"line_end":5283,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":297},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":254188,"byte_end":254194,"line_start":5389,"line_end":5389,"column_start":8,"column_end":14},"name":"global","qualname":"::global","value":"pub fn global() -> Object","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the global scope object.","sig":null,"attributes":[{"value":"/ Returns a handle to the global scope object.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":254023,"byte_end":254071,"line_start":5385,"line_end":5385,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":254072,"byte_end":254075,"line_start":5386,"line_end":5386,"column_start":1,"column_end":4}},{"value":"/ This allows access to the global properties and global names by accessing","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":254076,"byte_end":254153,"line_start":5387,"line_end":5387,"column_start":1,"column_end":78}},{"value":"/ the `Object` returned.","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":254154,"byte_end":254180,"line_start":5388,"line_end":5388,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":6637},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":268544,"byte_end":268553,"line_start":5718,"line_end":5718,"column_start":5,"column_end":14},"name":"Int8Array","qualname":"::Int8Array","value":"Int8Array {  }","parent":null,"children":[{"krate":0,"index":6638}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":257622,"byte_end":257637,"line_start":5468,"line_end":5468,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":257622,"byte_end":257637,"line_start":5468,"line_end":5468,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6773},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":268687,"byte_end":268697,"line_start":5722,"line_end":5722,"column_start":5,"column_end":15},"name":"Int16Array","qualname":"::Int16Array","value":"Int16Array {  }","parent":null,"children":[{"krate":0,"index":6774}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":257622,"byte_end":257637,"line_start":5468,"line_end":5468,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":257622,"byte_end":257637,"line_start":5468,"line_end":5468,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6909},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":268832,"byte_end":268842,"line_start":5726,"line_end":5726,"column_start":5,"column_end":15},"name":"Int32Array","qualname":"::Int32Array","value":"Int32Array {  }","parent":null,"children":[{"krate":0,"index":6910}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":257622,"byte_end":257637,"line_start":5468,"line_end":5468,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":257622,"byte_end":257637,"line_start":5468,"line_end":5468,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":7045},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":268977,"byte_end":268987,"line_start":5730,"line_end":5730,"column_start":5,"column_end":15},"name":"Uint8Array","qualname":"::Uint8Array","value":"Uint8Array {  }","parent":null,"children":[{"krate":0,"index":7046}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":257622,"byte_end":257637,"line_start":5468,"line_end":5468,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":257622,"byte_end":257637,"line_start":5468,"line_end":5468,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":7181},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":269135,"byte_end":269152,"line_start":5734,"line_end":5734,"column_start":5,"column_end":22},"name":"Uint8ClampedArray","qualname":"::Uint8ClampedArray","value":"Uint8ClampedArray {  }","parent":null,"children":[{"krate":0,"index":7182}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":257622,"byte_end":257637,"line_start":5468,"line_end":5468,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":257622,"byte_end":257637,"line_start":5468,"line_end":5468,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":7317},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":269288,"byte_end":269299,"line_start":5738,"line_end":5738,"column_start":5,"column_end":16},"name":"Uint16Array","qualname":"::Uint16Array","value":"Uint16Array {  }","parent":null,"children":[{"krate":0,"index":7318}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":257622,"byte_end":257637,"line_start":5468,"line_end":5468,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":257622,"byte_end":257637,"line_start":5468,"line_end":5468,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":7453},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":269436,"byte_end":269447,"line_start":5742,"line_end":5742,"column_start":5,"column_end":16},"name":"Uint32Array","qualname":"::Uint32Array","value":"Uint32Array {  }","parent":null,"children":[{"krate":0,"index":7454}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":257622,"byte_end":257637,"line_start":5468,"line_end":5468,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":257622,"byte_end":257637,"line_start":5468,"line_end":5468,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":7589},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":269586,"byte_end":269598,"line_start":5746,"line_end":5746,"column_start":5,"column_end":17},"name":"Float32Array","qualname":"::Float32Array","value":"Float32Array {  }","parent":null,"children":[{"krate":0,"index":7590}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":257622,"byte_end":257637,"line_start":5468,"line_end":5468,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":257622,"byte_end":257637,"line_start":5468,"line_end":5468,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":7725},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":269737,"byte_end":269749,"line_start":5750,"line_end":5750,"column_start":5,"column_end":17},"name":"Float64Array","qualname":"::Float64Array","value":"Float64Array {  }","parent":null,"children":[{"krate":0,"index":7726}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":257622,"byte_end":257637,"line_start":5468,"line_end":5468,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":257622,"byte_end":257637,"line_start":5468,"line_end":5468,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":7861},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":269890,"byte_end":269903,"line_start":5754,"line_end":5754,"column_start":5,"column_end":18},"name":"BigInt64Array","qualname":"::BigInt64Array","value":"BigInt64Array {  }","parent":null,"children":[{"krate":0,"index":7862}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":257622,"byte_end":257637,"line_start":5468,"line_end":5468,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":257622,"byte_end":257637,"line_start":5468,"line_end":5468,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":7997},"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":270049,"byte_end":270063,"line_start":5758,"line_end":5758,"column_start":5,"column_end":19},"name":"BigUint64Array","qualname":"::BigUint64Array","value":"BigUint64Array {  }","parent":null,"children":[{"krate":0,"index":7998}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"automatically_derived","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":257622,"byte_end":257637,"line_start":5468,"line_end":5468,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":257622,"byte_end":257637,"line_start":5468,"line_end":5468,"column_start":9,"column_end":24}}]}],"impls":[{"id":55,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":26663,"byte_end":26672,"line_start":603,"line_end":603,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":26985,"byte_end":26994,"line_start":617,"line_end":617,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":27181,"byte_end":27190,"line_start":624,"line_end":624,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":27241,"byte_end":27250,"line_start":626,"line_end":626,"column_start":43,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":27264,"byte_end":27269,"line_start":628,"line_end":628,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":27869,"byte_end":27874,"line_start":652,"line_end":652,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":28111,"byte_end":28116,"line_start":666,"line_end":666,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":28339,"byte_end":28344,"line_start":680,"line_end":680,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":45006,"byte_end":45012,"line_start":999,"line_end":999,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":47190,"byte_end":47196,"line_start":1070,"line_end":1070,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":48116,"byte_end":48122,"line_start":1102,"line_end":1102,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":48215,"byte_end":48221,"line_start":1108,"line_end":1108,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":48375,"byte_end":48381,"line_start":1117,"line_end":1117,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":48527,"byte_end":48533,"line_start":1124,"line_end":1124,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":48727,"byte_end":48733,"line_start":1131,"line_end":1131,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":48927,"byte_end":48933,"line_start":1138,"line_end":1138,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":49130,"byte_end":49136,"line_start":1145,"line_end":1145,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":49381,"byte_end":49387,"line_start":1156,"line_end":1156,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":50547,"byte_end":50554,"line_start":1187,"line_end":1187,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":50800,"byte_end":50807,"line_start":1201,"line_end":1201,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":50928,"byte_end":50935,"line_start":1208,"line_end":1208,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51073,"byte_end":51080,"line_start":1214,"line_end":1214,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51215,"byte_end":51222,"line_start":1220,"line_end":1220,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Inherent","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":74383,"byte_end":74391,"line_start":1665,"line_end":1665,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":74784,"byte_end":74792,"line_start":1677,"line_end":1677,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":79311,"byte_end":79314,"line_start":1780,"line_end":1780,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Inherent","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":81333,"byte_end":81341,"line_start":1831,"line_end":1831,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":83404,"byte_end":83408,"line_start":1902,"line_end":1902,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":83569,"byte_end":83577,"line_start":1910,"line_end":1910,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":83816,"byte_end":83824,"line_start":1922,"line_end":1922,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Inherent","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":83965,"byte_end":83974,"line_start":1930,"line_end":1930,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Inherent","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":104087,"byte_end":104093,"line_start":2352,"line_end":2352,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":108051,"byte_end":108057,"line_start":2454,"line_end":2454,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":108209,"byte_end":108215,"line_start":2461,"line_end":2461,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":108364,"byte_end":108370,"line_start":2468,"line_end":2468,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":108471,"byte_end":108477,"line_start":2474,"line_end":2474,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":109375,"byte_end":109381,"line_start":2505,"line_end":2505,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110237,"byte_end":110243,"line_start":2540,"line_end":2540,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Inherent","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":147297,"byte_end":147303,"line_start":3236,"line_end":3236,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":147694,"byte_end":147700,"line_start":3251,"line_end":3251,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":147831,"byte_end":147837,"line_start":3258,"line_end":3258,"column_start":13,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":147859,"byte_end":147865,"line_start":3260,"line_end":3260,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":684,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":170743,"byte_end":170746,"line_start":3736,"line_end":3736,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":758,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":176580,"byte_end":176587,"line_start":3874,"line_end":3874,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":777,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":178051,"byte_end":178058,"line_start":3914,"line_end":3914,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":984,"kind":"Inherent","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":224203,"byte_end":224211,"line_start":4757,"line_end":4757,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":253},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":985,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":227079,"byte_end":227087,"line_start":4830,"line_end":4830,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":986,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":227207,"byte_end":227215,"line_start":4836,"line_end":4836,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":987,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":227352,"byte_end":227360,"line_start":4842,"line_end":4842,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":988,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":227504,"byte_end":227512,"line_start":4848,"line_end":4848,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":989,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":227652,"byte_end":227660,"line_start":4854,"line_end":4854,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":990,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":227786,"byte_end":227794,"line_start":4860,"line_end":4860,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":991,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":227883,"byte_end":227891,"line_start":4866,"line_end":4866,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":992,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228040,"byte_end":228046,"line_start":4873,"line_end":4873,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":993,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228162,"byte_end":228168,"line_start":4879,"line_end":4879,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":994,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228258,"byte_end":228266,"line_start":4885,"line_end":4885,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":995,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228421,"byte_end":228429,"line_start":4892,"line_end":4892,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":996,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228586,"byte_end":228594,"line_start":4899,"line_end":4899,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":1043,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":239198,"byte_end":239206,"line_start":5102,"line_end":5102,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":1063,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":242526,"byte_end":242540,"line_start":5162,"line_end":5162,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":1083,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":245771,"byte_end":245783,"line_start":5221,"line_end":5221,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":1102,"kind":"Direct","span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":248490,"byte_end":248501,"line_start":5272,"line_end":5272,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":26663,"byte_end":26672,"line_start":603,"line_end":603,"column_start":34,"column_end":43},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":546},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":26985,"byte_end":26994,"line_start":617,"line_end":617,"column_start":45,"column_end":54},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":546},"to":{"krate":2,"index":7677}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":27181,"byte_end":27190,"line_start":624,"line_end":624,"column_start":39,"column_end":48},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":546},"to":{"krate":2,"index":8092}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":27241,"byte_end":27250,"line_start":626,"line_end":626,"column_start":43,"column_end":52},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":546},"to":{"krate":2,"index":7702}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":27264,"byte_end":27269,"line_start":628,"line_end":628,"column_start":6,"column_end":11},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":533},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":27869,"byte_end":27874,"line_start":652,"line_end":652,"column_start":40,"column_end":45},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":533},"to":{"krate":2,"index":7629}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":28111,"byte_end":28116,"line_start":666,"line_end":666,"column_start":34,"column_end":39},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":533},"to":{"krate":2,"index":7642}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":28339,"byte_end":28344,"line_start":680,"line_end":680,"column_start":18,"column_end":23},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":533},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":45006,"byte_end":45012,"line_start":999,"line_end":999,"column_start":6,"column_end":12},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":918},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":47190,"byte_end":47196,"line_start":1070,"line_end":1070,"column_start":28,"column_end":34},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":918},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":48116,"byte_end":48122,"line_start":1102,"line_end":1102,"column_start":18,"column_end":24},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":918},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":48215,"byte_end":48221,"line_start":1108,"line_end":1108,"column_start":18,"column_end":24},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":918},"to":{"krate":2,"index":12144}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":48375,"byte_end":48381,"line_start":1117,"line_end":1117,"column_start":21,"column_end":27},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":918},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":48527,"byte_end":48533,"line_start":1124,"line_end":1124,"column_start":23,"column_end":29},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":918},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":48727,"byte_end":48733,"line_start":1131,"line_end":1131,"column_start":22,"column_end":28},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":918},"to":{"krate":2,"index":9564}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":48927,"byte_end":48933,"line_start":1138,"line_end":1138,"column_start":21,"column_end":27},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":918},"to":{"krate":2,"index":9562}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":49130,"byte_end":49136,"line_start":1145,"line_end":1145,"column_start":24,"column_end":30},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":918},"to":{"krate":2,"index":9566}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":49381,"byte_end":49387,"line_start":1156,"line_end":1156,"column_start":24,"column_end":30},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":918},"to":{"krate":2,"index":9568}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":50547,"byte_end":50554,"line_start":1187,"line_end":1187,"column_start":21,"column_end":28},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":1235},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":50800,"byte_end":50807,"line_start":1201,"line_end":1201,"column_start":26,"column_end":33},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":1235},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":50928,"byte_end":50935,"line_start":1208,"line_end":1208,"column_start":21,"column_end":28},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":1235},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51073,"byte_end":51080,"line_start":1214,"line_end":1214,"column_start":23,"column_end":30},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":1235},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":51215,"byte_end":51222,"line_start":1220,"line_end":1220,"column_start":18,"column_end":25},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":1235},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":74383,"byte_end":74391,"line_start":1665,"line_end":1665,"column_start":6,"column_end":14},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":1817},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":74784,"byte_end":74792,"line_start":1677,"line_end":1677,"column_start":18,"column_end":26},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":1817},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":79311,"byte_end":79314,"line_start":1780,"line_end":1780,"column_start":18,"column_end":21},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":2046},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":81333,"byte_end":81341,"line_start":1831,"line_end":1831,"column_start":6,"column_end":14},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":2147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":83404,"byte_end":83408,"line_start":1902,"line_end":1902,"column_start":34,"column_end":38},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":163},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":83569,"byte_end":83577,"line_start":1910,"line_end":1910,"column_start":23,"column_end":31},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":2147},"to":{"krate":2,"index":7633}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":83816,"byte_end":83824,"line_start":1922,"line_end":1922,"column_start":30,"column_end":38},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":167},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":83965,"byte_end":83974,"line_start":1930,"line_end":1930,"column_start":6,"column_end":15},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":104087,"byte_end":104093,"line_start":2352,"line_end":2352,"column_start":6,"column_end":12},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":2620},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":108051,"byte_end":108057,"line_start":2454,"line_end":2454,"column_start":21,"column_end":27},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":2620},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":108209,"byte_end":108215,"line_start":2461,"line_end":2461,"column_start":23,"column_end":29},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":2620},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":108364,"byte_end":108370,"line_start":2468,"line_end":2468,"column_start":18,"column_end":24},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":2620},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":108471,"byte_end":108477,"line_start":2474,"line_end":2474,"column_start":28,"column_end":34},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":2620},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":109375,"byte_end":109381,"line_start":2505,"line_end":2505,"column_start":21,"column_end":27},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":2620},"to":{"krate":2,"index":2717}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":110237,"byte_end":110243,"line_start":2540,"line_end":2540,"column_start":18,"column_end":24},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":2620},"to":{"krate":2,"index":12144}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":147297,"byte_end":147303,"line_start":3236,"line_end":3236,"column_start":6,"column_end":12},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":3257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":147694,"byte_end":147700,"line_start":3251,"line_end":3251,"column_start":20,"column_end":26},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":3257},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":147831,"byte_end":147837,"line_start":3258,"line_end":3258,"column_start":13,"column_end":19},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":3257},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":147859,"byte_end":147865,"line_start":3260,"line_end":3260,"column_start":18,"column_end":24},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":3257},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":170743,"byte_end":170746,"line_start":3736,"line_end":3736,"column_start":18,"column_end":21},"kind":{"Impl":{"id":684}},"from":{"krate":0,"index":3898},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":176580,"byte_end":176587,"line_start":3874,"line_end":3874,"column_start":18,"column_end":25},"kind":{"Impl":{"id":758}},"from":{"krate":0,"index":4353},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":178051,"byte_end":178058,"line_start":3914,"line_end":3914,"column_start":18,"column_end":25},"kind":{"Impl":{"id":777}},"from":{"krate":0,"index":4463},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":224203,"byte_end":224211,"line_start":4757,"line_end":4757,"column_start":6,"column_end":14},"kind":{"Impl":{"id":984}},"from":{"krate":0,"index":5604},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":227079,"byte_end":227087,"line_start":4830,"line_end":4830,"column_start":25,"column_end":33},"kind":{"Impl":{"id":985}},"from":{"krate":0,"index":5604},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":227207,"byte_end":227215,"line_start":4836,"line_end":4836,"column_start":33,"column_end":41},"kind":{"Impl":{"id":986}},"from":{"krate":0,"index":5604},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":227352,"byte_end":227360,"line_start":4842,"line_end":4842,"column_start":28,"column_end":36},"kind":{"Impl":{"id":987}},"from":{"krate":0,"index":5604},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":227504,"byte_end":227512,"line_start":4848,"line_end":4848,"column_start":36,"column_end":44},"kind":{"Impl":{"id":988}},"from":{"krate":0,"index":5604},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":227652,"byte_end":227660,"line_start":4854,"line_end":4854,"column_start":28,"column_end":36},"kind":{"Impl":{"id":989}},"from":{"krate":0,"index":5604},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":227786,"byte_end":227794,"line_start":4860,"line_end":4860,"column_start":23,"column_end":31},"kind":{"Impl":{"id":990}},"from":{"krate":0,"index":5604},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":227883,"byte_end":227891,"line_start":4866,"line_end":4866,"column_start":21,"column_end":29},"kind":{"Impl":{"id":991}},"from":{"krate":0,"index":5604},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228040,"byte_end":228046,"line_start":4873,"line_end":4873,"column_start":33,"column_end":39},"kind":{"Impl":{"id":992}},"from":{"krate":5,"index":7617},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228162,"byte_end":228168,"line_start":4879,"line_end":4879,"column_start":25,"column_end":31},"kind":{"Impl":{"id":993}},"from":{"krate":5,"index":7617},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228258,"byte_end":228266,"line_start":4885,"line_end":4885,"column_start":21,"column_end":29},"kind":{"Impl":{"id":994}},"from":{"krate":0,"index":5604},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228421,"byte_end":228429,"line_start":4892,"line_end":4892,"column_start":23,"column_end":31},"kind":{"Impl":{"id":995}},"from":{"krate":0,"index":5604},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":228586,"byte_end":228594,"line_start":4899,"line_end":4899,"column_start":23,"column_end":31},"kind":{"Impl":{"id":996}},"from":{"krate":0,"index":5604},"to":{"krate":2,"index":12144}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":239198,"byte_end":239206,"line_start":5102,"line_end":5102,"column_start":22,"column_end":30},"kind":{"Impl":{"id":1043}},"from":{"krate":0,"index":5844},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":242526,"byte_end":242540,"line_start":5162,"line_end":5162,"column_start":22,"column_end":36},"kind":{"Impl":{"id":1063}},"from":{"krate":0,"index":5950},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":245771,"byte_end":245783,"line_start":5221,"line_end":5221,"column_start":22,"column_end":34},"kind":{"Impl":{"id":1083}},"from":{"krate":0,"index":6056},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/matheo/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.56/src/lib.rs","byte_start":248490,"byte_end":248501,"line_start":5272,"line_end":5272,"column_start":22,"column_end":33},"kind":{"Impl":{"id":1102}},"from":{"krate":0,"index":6159},"to":{"krate":2,"index":2997}}]}